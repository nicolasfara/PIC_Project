

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 17 18:07:55 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1826
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  0111                     	;# 
    75  0112                     	;# 
    76  0113                     	;# 
    77  0114                     	;# 
    78  0115                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011D                     	;# 
    86  011E                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019C                     	;# 
   105  019C                     	;# 
   106  019D                     	;# 
   107  019E                     	;# 
   108  019F                     	;# 
   109  020C                     	;# 
   110  020D                     	;# 
   111  0211                     	;# 
   112  0211                     	;# 
   113  0212                     	;# 
   114  0212                     	;# 
   115  0213                     	;# 
   116  0213                     	;# 
   117  0214                     	;# 
   118  0214                     	;# 
   119  0215                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0216                     	;# 
   123  0216                     	;# 
   124  0217                     	;# 
   125  0217                     	;# 
   126  0291                     	;# 
   127  0291                     	;# 
   128  0292                     	;# 
   129  0293                     	;# 
   130  0294                     	;# 
   131  0295                     	;# 
   132  0295                     	;# 
   133  0296                     	;# 
   134  0394                     	;# 
   135  0395                     	;# 
   136  0396                     	;# 
   137  039A                     	;# 
   138  039C                     	;# 
   139  039D                     	;# 
   140  039E                     	;# 
   141  039F                     	;# 
   142  0FE4                     	;# 
   143  0FE5                     	;# 
   144  0FE6                     	;# 
   145  0FE7                     	;# 
   146  0FE8                     	;# 
   147  0FE9                     	;# 
   148  0FEA                     	;# 
   149  0FEB                     	;# 
   150  0FED                     	;# 
   151  0FEE                     	;# 
   152  0FEF                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  0111                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0118                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011D                     	;# 
   209  011E                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0191                     	;# 
   213  0191                     	;# 
   214  0192                     	;# 
   215  0193                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0194                     	;# 
   219  0195                     	;# 
   220  0196                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019C                     	;# 
   228  019C                     	;# 
   229  019D                     	;# 
   230  019E                     	;# 
   231  019F                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0216                     	;# 
   246  0216                     	;# 
   247  0217                     	;# 
   248  0217                     	;# 
   249  0291                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0394                     	;# 
   258  0395                     	;# 
   259  0396                     	;# 
   260  039A                     	;# 
   261  039C                     	;# 
   262  039D                     	;# 
   263  039E                     	;# 
   264  039F                     	;# 
   265  0FE4                     	;# 
   266  0FE5                     	;# 
   267  0FE6                     	;# 
   268  0FE7                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEB                     	;# 
   273  0FED                     	;# 
   274  0FEE                     	;# 
   275  0FEF                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000D                     	;# 
   290  0011                     	;# 
   291  0012                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020D                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0294                     	;# 
   377  0295                     	;# 
   378  0295                     	;# 
   379  0296                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  039A                     	;# 
   384  039C                     	;# 
   385  039D                     	;# 
   386  039E                     	;# 
   387  039F                     	;# 
   388  0FE4                     	;# 
   389  0FE5                     	;# 
   390  0FE6                     	;# 
   391  0FE7                     	;# 
   392  0FE8                     	;# 
   393  0FE9                     	;# 
   394  0FEA                     	;# 
   395  0FEB                     	;# 
   396  0FED                     	;# 
   397  0FEE                     	;# 
   398  0FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011D                     	;# 
   455  011E                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  020D                     	;# 
   480  0211                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0212                     	;# 
   484  0213                     	;# 
   485  0213                     	;# 
   486  0214                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  0291                     	;# 
   496  0291                     	;# 
   497  0292                     	;# 
   498  0293                     	;# 
   499  0294                     	;# 
   500  0295                     	;# 
   501  0295                     	;# 
   502  0296                     	;# 
   503  0394                     	;# 
   504  0395                     	;# 
   505  0396                     	;# 
   506  039A                     	;# 
   507  039C                     	;# 
   508  039D                     	;# 
   509  039E                     	;# 
   510  039F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000D                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  001E                     	;# 
   548  001F                     	;# 
   549  008C                     	;# 
   550  008D                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0097                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  010C                     	;# 
   565  010D                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011D                     	;# 
   578  011E                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0194                     	;# 
   588  0195                     	;# 
   589  0196                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  020C                     	;# 
   602  020D                     	;# 
   603  0211                     	;# 
   604  0211                     	;# 
   605  0212                     	;# 
   606  0212                     	;# 
   607  0213                     	;# 
   608  0213                     	;# 
   609  0214                     	;# 
   610  0214                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  0291                     	;# 
   619  0291                     	;# 
   620  0292                     	;# 
   621  0293                     	;# 
   622  0294                     	;# 
   623  0295                     	;# 
   624  0295                     	;# 
   625  0296                     	;# 
   626  0394                     	;# 
   627  0395                     	;# 
   628  0396                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645                           
   646                           	psect	idataBANK1
   647  0643                     __pidataBANK1:	
   648                           
   649                           ;initializer for ___cgram
   650  0643  340C               	retlw	12
   651  0644  3412               	retlw	18
   652  0645  3412               	retlw	18
   653  0646  340C               	retlw	12
   654  0647  3400               	retlw	0
   655  0648  3400               	retlw	0
   656  0649  3400               	retlw	0
   657  064A  3400               	retlw	0
   658  064B  3400               	retlw	0
   659  064C  3404               	retlw	4
   660  064D  340E               	retlw	14
   661  064E  341F               	retlw	31
   662  064F  340E               	retlw	14
   663  0650  3404               	retlw	4
   664  0651  3400               	retlw	0
   665  0652  3400               	retlw	0
   666  0653  3404               	retlw	4
   667  0654  3404               	retlw	4
   668  0655  3404               	retlw	4
   669  0656  3404               	retlw	4
   670  0657  341F               	retlw	31
   671  0658  340E               	retlw	14
   672  0659  3404               	retlw	4
   673  065A  3400               	retlw	0
   674  065B  340A               	retlw	10
   675  065C  3415               	retlw	21
   676  065D  3411               	retlw	17
   677  065E  340A               	retlw	10
   678  065F  3404               	retlw	4
   679  0660  3400               	retlw	0
   680  0661  3400               	retlw	0
   681  0662  3400               	retlw	0
   682  0663  340A               	retlw	10
   683  0664  341F               	retlw	31
   684  0665  341F               	retlw	31
   685  0666  340E               	retlw	14
   686  0667  3404               	retlw	4
   687  0668  3400               	retlw	0
   688  0669  3400               	retlw	0
   689  066A  3400               	retlw	0
   690  066B  3400               	retlw	0
   691  066C  3400               	retlw	0
   692  066D  3400               	retlw	0
   693  066E  3400               	retlw	0
   694  066F  3400               	retlw	0
   695  0670  3400               	retlw	0
   696  0671  3400               	retlw	0
   697  0672  3400               	retlw	0
   698  0673  3400               	retlw	0
   699  0674  3400               	retlw	0
   700  0675  3400               	retlw	0
   701  0676  3400               	retlw	0
   702  0677  3400               	retlw	0
   703  0678  3400               	retlw	0
   704  0679  3400               	retlw	0
   705  067A  3400               	retlw	0
   706  067B  3400               	retlw	0
   707  067C  3400               	retlw	0
   708  067D  3400               	retlw	0
   709  067E  3400               	retlw	0
   710  067F  3400               	retlw	0
   711  0680  3400               	retlw	0
   712  0681  3400               	retlw	0
   713  0682  3400               	retlw	0
   714  000D                     _PORTB	set	13
   715  006C                     _RB4	set	108
   716  006D                     _RB5	set	109
   717  006E                     _RB6	set	110
   718  009D                     _ADCON0	set	157
   719  009D                     _ADCON0bits	set	157
   720  009E                     _ADCON1	set	158
   721  009C                     _ADRESH	set	156
   722  009B                     _ADRESL	set	155
   723  0095                     _OPTION_REGbits	set	149
   724  0099                     _OSCCON	set	153
   725  009A                     _OSCSTAT	set	154
   726  0098                     _OSCTUNE	set	152
   727  008C                     _TRISA	set	140
   728  008D                     _TRISB	set	141
   729  008D                     _TRISBbits	set	141
   730  011D                     _APFCON0	set	285
   731  011E                     _APFCON1	set	286
   732  010C                     _LATA	set	268
   733  010D                     _LATB	set	269
   734  018C                     _ANSELA	set	396
   735  018D                     _ANSELB	set	397
   736  020C                     _WPUA	set	524
   737  020D                     _WPUB	set	525
   738                           
   739                           	psect	stringtext
   740  0534                     __pstringtext:	
   741  0534                     STR_1:	
   742  0534  3454               	retlw	84	;'T'
   743  0535  3465               	retlw	101	;'e'
   744  0536  3472               	retlw	114	;'r'
   745  0537  346D               	retlw	109	;'m'
   746  0538  346F               	retlw	111	;'o'
   747  0539  346D               	retlw	109	;'m'
   748  053A  3465               	retlw	101	;'e'
   749  053B  3474               	retlw	116	;'t'
   750  053C  3472               	retlw	114	;'r'
   751  053D  346F               	retlw	111	;'o'
   752  053E  3420               	retlw	32	;' '
   753  053F  3450               	retlw	80	;'P'
   754  0540  3449               	retlw	73	;'I'
   755  0541  3443               	retlw	67	;'C'
   756  0542  3400               	retlw	0
   757  0543                     STR_3:	
   758  0543  3420               	retlw	32	;' '
   759  0544  3420               	retlw	32	;' '
   760  0545  3420               	retlw	32	;' '
   761  0546  3420               	retlw	32	;' '
   762  0547  3420               	retlw	32	;' '
   763  0548  3420               	retlw	32	;' '
   764  0549  3420               	retlw	32	;' '
   765  054A  3420               	retlw	32	;' '
   766  054B  3420               	retlw	32	;' '
   767  054C  3420               	retlw	32	;' '
   768  054D  3400               	retlw	0
   769  054E                     STR_2:	
   770  054E  3454               	retlw	84	;'T'
   771  054F  3465               	retlw	101	;'e'
   772  0550  346D               	retlw	109	;'m'
   773  0551  3470               	retlw	112	;'p'
   774  0552  343A               	retlw	58	;':'
   775  0553  3420               	retlw	32	;' '
   776  0554  3400               	retlw	0
   777  0555                     STR_4:	
   778  0555  3425               	retlw	37	;'%'
   779  0556  3430               	retlw	48	;'0'
   780  0557  3443               	retlw	67	;'C'
   781  0558  3400               	retlw	0
   782                           
   783                           ; #config settings
   784  0000                     
   785                           	psect	cinit
   786  07ED                     start_initialization:	
   787  07ED                     __initialization:	
   788                           
   789                           ; Clear objects allocated to BANK0
   790  07ED  01AE               	clrf	__pbssBANK0& (0+127)
   791  07EE  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   792  07EF  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   793  07F0  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   794  07F1  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   795  07F2  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   796  07F3  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   797                           
   798                           ; Initialize objects allocated to BANK1
   799  07F4  3043               	movlw	low __pidataBANK1
   800  07F5  0084               	movwf	4
   801  07F6  3086               	movlw	(high __pidataBANK1)| (0+128)
   802  07F7  0085               	movwf	5
   803  07F8  30A0               	movlw	low __pdataBANK1
   804  07F9  0086               	movwf	6
   805  07FA  3000               	movlw	high __pdataBANK1
   806  07FB  0087               	movwf	7
   807  07FC  3040               	movlw	64
   808  07FD  24B7               	fcall	init_ram
   809  07FE                     end_of_initialization:	
   810                           ;End of C runtime variable initialization code
   811                           
   812  07FE                     __end_of__initialization:	
   813  07FE  0020               	movlb	0
   814  07FF  2EC8               	ljmp	_main	;jump to C main() function
   815                           
   816                           	psect	bssBANK0
   817  002E                     __pbssBANK0:	
   818  002E                     LCDWriteInt@F2357:	
   819  002E                     	ds	5
   820  0033                     _LM35Conv:	
   821  0033                     	ds	2
   822                           
   823                           	psect	dataBANK1
   824  00A0                     __pdataBANK1:	
   825  00A0                     ___cgram:	
   826  00A0                     	ds	64
   827                           
   828                           	psect	inittext
   829  04B7                     init_ram:	
   830  04B7  00FE               	movwf	126
   831  04B8                     initloop:	
   832  04B8  0012               	moviw fsr0++
   833  04B9  001E               	movwi fsr1++
   834  04BA  0BFE               	decfsz	126,f
   835  04BB  2CB8               	goto	initloop
   836  04BC  3400               	retlw	0
   837                           
   838                           	psect	cstackCOMMON
   839  0070                     __pcstackCOMMON:	
   840  0070                     ?_OSCILLATOR_Initialize:	
   841  0070                     ??_OSCILLATOR_Initialize:	
   842                           ; 0 bytes @ 0x0
   843                           
   844  0070                     ?_LCDInit:	
   845                           ; 0 bytes @ 0x0
   846                           
   847  0070                     ?_LCDBusyLoop:	
   848                           ; 0 bytes @ 0x0
   849                           
   850  0070                     ??_LCDBusyLoop:	
   851                           ; 0 bytes @ 0x0
   852                           
   853  0070                     ?_ADC_Initialize:	
   854                           ; 0 bytes @ 0x0
   855                           
   856  0070                     ??_ADC_Initialize:	
   857                           ; 0 bytes @ 0x0
   858                           
   859  0070                     ?_ADC_StartConversion:	
   860                           ; 0 bytes @ 0x0
   861                           
   862  0070                     ??_ADC_StartConversion:	
   863                           ; 0 bytes @ 0x0
   864                           
   865  0070                     ??_ADC_IsConversionDone:	
   866                           ; 0 bytes @ 0x0
   867                           
   868  0070                     ?_PIN_MANAGER_Initialize:	
   869                           ; 0 bytes @ 0x0
   870                           
   871  0070                     ??_PIN_MANAGER_Initialize:	
   872                           ; 0 bytes @ 0x0
   873                           
   874  0070                     ?_SYSTEM_Initialize:	
   875                           ; 0 bytes @ 0x0
   876                           
   877  0070                     ??_SYSTEM_Initialize:	
   878                           ; 0 bytes @ 0x0
   879                           
   880  0070                     ?_main:	
   881                           ; 0 bytes @ 0x0
   882                           
   883  0070                     ?_ADC_IsConversionDone:	
   884                           ; 0 bytes @ 0x0
   885                           
   886  0070                     ?_ADC_GetConversionResult:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?___wmul:	
   890                           ; 2 bytes @ 0x0
   891                           
   892  0070                     ?___awdiv:	
   893                           ; 2 bytes @ 0x0
   894                           
   895  0070                     ?___awmod:	
   896                           ; 2 bytes @ 0x0
   897                           
   898  0070                     ___wmul@multiplier:	
   899                           ; 2 bytes @ 0x0
   900                           
   901  0070                     ___awdiv@divisor:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0070                     ___awmod@divisor:	
   905                           ; 2 bytes @ 0x0
   906                           
   907                           
   908                           ; 2 bytes @ 0x0
   909  0070                     	ds	1
   910  0071                     ADC_StartConversion@channel:	
   911                           
   912                           ; 1 bytes @ 0x1
   913  0071                     	ds	1
   914  0072                     ??_ADC_GetConversionResult:	
   915  0072                     LCDBusyLoop@busy:	
   916                           ; 0 bytes @ 0x2
   917                           
   918  0072                     ___wmul@multiplicand:	
   919                           ; 1 bytes @ 0x2
   920                           
   921  0072                     ___awdiv@dividend:	
   922                           ; 2 bytes @ 0x2
   923                           
   924  0072                     ___awmod@dividend:	
   925                           ; 2 bytes @ 0x2
   926                           
   927                           
   928                           ; 2 bytes @ 0x2
   929  0072                     	ds	1
   930  0073                     LCDBusyLoop@temp:	
   931                           
   932                           ; 1 bytes @ 0x3
   933  0073                     	ds	1
   934  0074                     ??___wmul:	
   935  0074                     ??___awdiv:	
   936                           ; 0 bytes @ 0x4
   937                           
   938  0074                     ??___awmod:	
   939                           ; 0 bytes @ 0x4
   940                           
   941  0074                     LCDBusyLoop@status:	
   942                           ; 0 bytes @ 0x4
   943                           
   944  0074                     ___wmul@product:	
   945                           ; 1 bytes @ 0x4
   946                           
   947                           
   948                           ; 2 bytes @ 0x4
   949  0074                     	ds	1
   950  0075                     ?_LCDByte:	
   951  0075                     LCDByte@isdata:	
   952                           ; 0 bytes @ 0x5
   953                           
   954  0075                     ___awdiv@counter:	
   955                           ; 1 bytes @ 0x5
   956                           
   957  0075                     ___awmod@counter:	
   958                           ; 1 bytes @ 0x5
   959                           
   960                           
   961                           ; 1 bytes @ 0x5
   962  0075                     	ds	1
   963  0076                     ??_LCDByte:	
   964  0076                     ___awdiv@sign:	
   965                           ; 0 bytes @ 0x6
   966                           
   967  0076                     ___awmod@sign:	
   968                           ; 1 bytes @ 0x6
   969                           
   970                           
   971                           ; 1 bytes @ 0x6
   972  0076                     	ds	1
   973  0077                     ___awdiv@quotient:	
   974                           
   975                           ; 2 bytes @ 0x7
   976  0077                     	ds	1
   977  0078                     LCDByte@hn:	
   978                           
   979                           ; 1 bytes @ 0x8
   980  0078                     	ds	1
   981  0079                     LCDByte@ln:	
   982                           
   983                           ; 1 bytes @ 0x9
   984  0079                     	ds	1
   985  007A                     LCDByte@c:	
   986                           
   987                           ; 1 bytes @ 0xA
   988  007A                     	ds	1
   989  007B                     LCDByte@temp:	
   990                           
   991                           ; 1 bytes @ 0xB
   992  007B                     	ds	1
   993  007C                     ??_LCDInit:	
   994  007C                     ?_LCDGotoXY:	
   995                           ; 0 bytes @ 0xC
   996                           
   997  007C                     ?_LCDWriteString:	
   998                           ; 0 bytes @ 0xC
   999                           
  1000  007C                     ??_LCDWriteInt:	
  1001                           ; 0 bytes @ 0xC
  1002                           
  1003  007C                     LCDGotoXY@y:	
  1004                           ; 0 bytes @ 0xC
  1005                           
  1006  007C                     LCDWriteString@msg:	
  1007                           ; 1 bytes @ 0xC
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0xC
  1011  007C                     	ds	1
  1012  007D                     ??_LCDGotoXY:	
  1013                           
  1014                           ; 0 bytes @ 0xD
  1015  007D                     	ds	1
  1016                           
  1017                           	psect	cstackBANK0
  1018  0020                     __pcstackBANK0:	
  1019  0020                     ??_LCDWriteString:	
  1020  0020                     ?_LCDWriteInt:	
  1021                           ; 0 bytes @ 0x0
  1022                           
  1023  0020                     LCDInit@style:	
  1024                           ; 0 bytes @ 0x0
  1025                           
  1026  0020                     LCDGotoXY@x:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0020                     LCDWriteInt@val:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x0
  1034  0020                     	ds	1
  1035  0021                     LCDInit@__i:	
  1036  0021                     LCDWriteString@cc:	
  1037                           ; 1 bytes @ 0x1
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x1
  1041  0021                     	ds	1
  1042  0022                     LCDWriteInt@field_length:	
  1043                           
  1044                           ; 1 bytes @ 0x2
  1045  0022                     	ds	1
  1046  0023                     LCDWriteInt@str:	
  1047                           
  1048                           ; 5 bytes @ 0x3
  1049  0023                     	ds	5
  1050  0028                     LCDWriteInt@j:	
  1051                           
  1052                           ; 2 bytes @ 0x8
  1053  0028                     	ds	2
  1054  002A                     LCDWriteInt@i:	
  1055                           
  1056                           ; 2 bytes @ 0xA
  1057  002A                     	ds	2
  1058  002C                     ??_main:	
  1059                           
  1060                           ; 0 bytes @ 0xC
  1061  002C                     	ds	2
  1062                           
  1063                           	psect	maintext
  1064  06C8                     __pmaintext:	
  1065 ;;
  1066 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1067 ;;
  1068 ;; *************** function _main *****************
  1069 ;; Defined at:
  1070 ;;		line 56 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;		None               void
  1077 ;; Registers used:
  1078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : B1F/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1084 ;;      Params:         0       0       0       0
  1085 ;;      Locals:         0       0       0       0
  1086 ;;      Temps:          0       2       0       0
  1087 ;;      Totals:         0       2       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		_ADC_GetConversionResult
  1092 ;;		_ADC_Initialize
  1093 ;;		_ADC_IsConversionDone
  1094 ;;		_ADC_StartConversion
  1095 ;;		_LCDGotoXY
  1096 ;;		_LCDInit
  1097 ;;		_LCDWriteInt
  1098 ;;		_LCDWriteString
  1099 ;;		_SYSTEM_Initialize
  1100 ;;		___wmul
  1101 ;; This function is called by:
  1102 ;;		Startup code after reset
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _main
  1108  06C8                     _main:	
  1109                           
  1110                           ;main.c: 58: SYSTEM_Initialize();
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1114  06C8  24A7               	fcall	_SYSTEM_Initialize
  1115                           
  1116                           ;main.c: 75: ADC_Initialize();
  1117  06C9  24C4               	fcall	_ADC_Initialize
  1118                           
  1119                           ;main.c: 77: LCDInit(0B00000000);
  1120  06CA  3000               	movlw	0
  1121  06CB  2603               	fcall	_LCDInit
  1122                           
  1123                           ;main.c: 78: LCDGotoXY(0,0);
  1124  06CC  01FC               	clrf	LCDGotoXY@y
  1125  06CD  3000               	movlw	0
  1126  06CE  2511               	fcall	_LCDGotoXY
  1127                           
  1128                           ;main.c: 79: LCDWriteString("Termometro PIC");
  1129  06CF  3034               	movlw	low (STR_1| (0+32768))
  1130  06D0  00FC               	movwf	LCDWriteString@msg
  1131  06D1  3085               	movlw	high (STR_1| (0+32768))
  1132  06D2                     L1:	
  1133  06D2  00FD               	movwf	LCDWriteString@msg+1
  1134  06D3  258B               	fcall	_LCDWriteString
  1135                           
  1136                           ;main.c: 83: ADC_StartConversion(ADC_LM35);
  1137                           
  1138                           ;main.c: 81: while (1) {
  1139  06D4  3000               	movlw	0
  1140  06D5  24CC               	fcall	_ADC_StartConversion
  1141  06D6                     l1371:	
  1142                           ;main.c: 85: while(!ADC_IsConversionDone());
  1143                           
  1144  06D6  24BD               	fcall	_ADC_IsConversionDone
  1145  06D7  3A00               	xorlw	0
  1146  06D8  1903               	skipnz
  1147  06D9  2ED6               	goto	l1371
  1148                           
  1149                           ;main.c: 87: LM35Conv = ADC_GetConversionResult();
  1150  06DA  24AB               	fcall	_ADC_GetConversionResult
  1151  06DB  0871               	movf	?_ADC_GetConversionResult+1,w
  1152  06DC  0020               	movlb	0	; select bank0
  1153  06DD  00B4               	movwf	_LM35Conv+1
  1154  06DE  0870               	movf	?_ADC_GetConversionResult,w
  1155  06DF  00B3               	movwf	_LM35Conv
  1156                           
  1157                           ;main.c: 89: LM35Conv = (LM35Conv * 50) / 1024;
  1158  06E0  0834               	movf	_LM35Conv+1,w
  1159  06E1  00F1               	movwf	___wmul@multiplier+1
  1160  06E2  0833               	movf	_LM35Conv,w
  1161  06E3  00F0               	movwf	___wmul@multiplier
  1162  06E4  3032               	movlw	50
  1163  06E5  00F2               	movwf	___wmul@multiplicand
  1164  06E6  3000               	movlw	0
  1165  06E7  00F3               	movwf	___wmul@multiplicand+1
  1166  06E8  24F6               	fcall	___wmul
  1167  06E9  0870               	movf	?___wmul,w
  1168  06EA  0020               	movlb	0	; select bank0
  1169  06EB  00AC               	movwf	??_main
  1170  06EC  0871               	movf	?___wmul+1,w
  1171  06ED  00AD               	movwf	??_main+1
  1172  06EE  300A               	movlw	10
  1173  06EF                     u875:	
  1174  06EF  36AD               	lsrf	??_main+1,f
  1175  06F0  0CAC               	rrf	??_main,f
  1176  06F1  0B89               	decfsz	9,f
  1177  06F2  2EEF               	goto	u875
  1178  06F3  082C               	movf	??_main,w
  1179  06F4  00B3               	movwf	_LM35Conv
  1180  06F5  082D               	movf	??_main+1,w
  1181  06F6  00B4               	movwf	_LM35Conv+1
  1182                           
  1183                           ;main.c: 91: LCDGotoXY(0,1);
  1184  06F7  01FC               	clrf	LCDGotoXY@y
  1185  06F8  0AFC               	incf	LCDGotoXY@y,f
  1186  06F9  3000               	movlw	0
  1187  06FA  2511               	fcall	_LCDGotoXY
  1188                           
  1189                           ;main.c: 92: LCDWriteString("Temp: ");
  1190  06FB  304E               	movlw	low (STR_2| (0+32768))
  1191  06FC  00FC               	movwf	LCDWriteString@msg
  1192  06FD  3085               	movlw	high (STR_2| (0+32768))
  1193  06FE  00FD               	movwf	LCDWriteString@msg+1
  1194  06FF  258B               	fcall	_LCDWriteString
  1195                           
  1196                           ;main.c: 93: LCDWriteString("          ");
  1197  0700  3043               	movlw	low (STR_3| (0+32768))
  1198  0701  00FC               	movwf	LCDWriteString@msg
  1199  0702  3085               	movlw	high (STR_3| (0+32768))
  1200  0703  00FD               	movwf	LCDWriteString@msg+1
  1201  0704  258B               	fcall	_LCDWriteString
  1202                           
  1203                           ;main.c: 94: LCDWriteInt(LM35Conv, sizeof(LM35Conv));
  1204  0705  0020               	movlb	0	; select bank0
  1205  0706  0834               	movf	_LM35Conv+1,w
  1206  0707  00A1               	movwf	LCDWriteInt@val+1
  1207  0708  0833               	movf	_LM35Conv,w
  1208  0709  00A0               	movwf	LCDWriteInt@val
  1209  070A  3002               	movlw	2
  1210  070B  00AC               	movwf	??_main
  1211  070C  082C               	movf	??_main,w
  1212  070D  00A2               	movwf	LCDWriteInt@field_length
  1213  070E  2764               	fcall	_LCDWriteInt
  1214                           
  1215                           ;main.c: 95: LCDWriteString("%0C");
  1216  070F  3055               	movlw	low (STR_4| (0+32768))
  1217  0710  00FC               	movwf	LCDWriteString@msg
  1218  0711  3085               	movlw	high (STR_4| (0+32768))
  1219  0712  2ED2               	goto	L1
  1220  0713                     __end_of_main:	
  1221                           
  1222                           	psect	text1
  1223  04F6                     __ptext1:	
  1224 ;; *************** function ___wmul *****************
  1225 ;; Defined at:
  1226 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  multiplier      2    0[COMMON] unsigned int 
  1229 ;;  multiplicand    2    2[COMMON] unsigned int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  product         2    4[COMMON] unsigned int 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2    0[COMMON] unsigned int 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1241 ;;      Params:         4       0       0       0
  1242 ;;      Locals:         2       0       0       0
  1243 ;;      Temps:          0       0       0       0
  1244 ;;      Totals:         6       0       0       0
  1245 ;;Total ram usage:        6 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function ___wmul
  1256  04F6                     ___wmul:	
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1260  04F6  01F4               	clrf	___wmul@product
  1261  04F7  01F5               	clrf	___wmul@product+1
  1262  04F8                     l1349:	
  1263  04F8  1C70               	btfss	___wmul@multiplier,0
  1264  04F9  2CFE               	goto	l255
  1265  04FA  0872               	movf	___wmul@multiplicand,w
  1266  04FB  07F4               	addwf	___wmul@product,f
  1267  04FC  0873               	movf	___wmul@multiplicand+1,w
  1268  04FD  3DF5               	addwfc	___wmul@product+1,f
  1269  04FE                     l255:	
  1270  04FE  3001               	movlw	1
  1271  04FF                     u835:	
  1272  04FF  35F2               	lslf	___wmul@multiplicand,f
  1273  0500  0DF3               	rlf	___wmul@multiplicand+1,f
  1274  0501  0B89               	decfsz	9,f
  1275  0502  2CFF               	goto	u835
  1276  0503  3001               	movlw	1
  1277  0504                     u845:	
  1278  0504  36F1               	lsrf	___wmul@multiplier+1,f
  1279  0505  0CF0               	rrf	___wmul@multiplier,f
  1280  0506  0B89               	decfsz	9,f
  1281  0507  2D04               	goto	u845
  1282  0508  0870               	movf	___wmul@multiplier,w
  1283  0509  0471               	iorwf	___wmul@multiplier+1,w
  1284  050A  1D03               	btfss	3,2
  1285  050B  2CF8               	goto	l1349
  1286  050C  0875               	movf	___wmul@product+1,w
  1287  050D  00F1               	movwf	?___wmul+1
  1288  050E  0874               	movf	___wmul@product,w
  1289  050F  00F0               	movwf	?___wmul
  1290  0510  0008               	return
  1291  0511                     __end_of___wmul:	
  1292                           
  1293                           	psect	text2
  1294  04A7                     __ptext2:	
  1295 ;; *************** function _SYSTEM_Initialize *****************
  1296 ;; Defined at:
  1297 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1311 ;;      Params:         0       0       0       0
  1312 ;;      Locals:         0       0       0       0
  1313 ;;      Temps:          0       0       0       0
  1314 ;;      Totals:         0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		_ADC_Initialize
  1320 ;;		_OSCILLATOR_Initialize
  1321 ;;		_PIN_MANAGER_Initialize
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _SYSTEM_Initialize
  1329  04A7                     _SYSTEM_Initialize:	
  1330                           
  1331                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1332                           
  1333                           ;incstack = 0
  1334                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1335  04A7  24B1               	fcall	_OSCILLATOR_Initialize
  1336                           
  1337                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1338  04A8  24DC               	fcall	_PIN_MANAGER_Initialize
  1339                           
  1340                           ;mcc.c: 73: ADC_Initialize();
  1341  04A9  24C4               	fcall	_ADC_Initialize
  1342  04AA  0008               	return
  1343  04AB                     __end_of_SYSTEM_Initialize:	
  1344                           
  1345                           	psect	text3
  1346  04DC                     __ptext3:	
  1347 ;; *************** function _PIN_MANAGER_Initialize *****************
  1348 ;; Defined at:
  1349 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;		None               void
  1356 ;; Registers used:
  1357 ;;		wreg, status,2
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1363 ;;      Params:         0       0       0       0
  1364 ;;      Locals:         0       0       0       0
  1365 ;;      Temps:          0       0       0       0
  1366 ;;      Totals:         0       0       0       0
  1367 ;;Total ram usage:        0 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_SYSTEM_Initialize
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _PIN_MANAGER_Initialize
  1378  04DC                     _PIN_MANAGER_Initialize:	
  1379                           
  1380                           ;pin_manager.c: 51: LATA = 0x00;
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1384  04DC  0022               	movlb	2	; select bank2
  1385  04DD  018C               	clrf	12	;volatile
  1386                           
  1387                           ;pin_manager.c: 52: TRISA = 0xFF;
  1388  04DE  30FF               	movlw	255
  1389  04DF  0021               	movlb	1	; select bank1
  1390  04E0  008C               	movwf	12	;volatile
  1391                           
  1392                           ;pin_manager.c: 53: ANSELA = 0x1F;
  1393  04E1  301F               	movlw	31
  1394  04E2  0023               	movlb	3	; select bank3
  1395  04E3  008C               	movwf	12	;volatile
  1396                           
  1397                           ;pin_manager.c: 54: WPUA = 0x00;
  1398  04E4  0024               	movlb	4	; select bank4
  1399  04E5  018C               	clrf	12	;volatile
  1400                           
  1401                           ;pin_manager.c: 56: LATB = 0x00;
  1402  04E6  0022               	movlb	2	; select bank2
  1403  04E7  018D               	clrf	13	;volatile
  1404                           
  1405                           ;pin_manager.c: 57: TRISB = 0x80;
  1406  04E8  3080               	movlw	128
  1407  04E9  0021               	movlb	1	; select bank1
  1408  04EA  008D               	movwf	13	;volatile
  1409                           
  1410                           ;pin_manager.c: 58: ANSELB = 0x80;
  1411  04EB  3080               	movlw	128
  1412  04EC  0023               	movlb	3	; select bank3
  1413  04ED  008D               	movwf	13	;volatile
  1414                           
  1415                           ;pin_manager.c: 59: WPUB = 0x00;
  1416  04EE  0024               	movlb	4	; select bank4
  1417  04EF  018D               	clrf	13	;volatile
  1418                           
  1419                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  1420  04F0  0021               	movlb	1	; select bank1
  1421  04F1  1795               	bsf	21,7	;volatile
  1422                           
  1423                           ;pin_manager.c: 63: APFCON0 = 0x00;
  1424  04F2  0022               	movlb	2	; select bank2
  1425  04F3  019D               	clrf	29	;volatile
  1426                           
  1427                           ;pin_manager.c: 65: APFCON1 = 0x00;
  1428  04F4  019E               	clrf	30	;volatile
  1429  04F5  0008               	return
  1430  04F6                     __end_of_PIN_MANAGER_Initialize:	
  1431                           
  1432                           	psect	text4
  1433  04B1                     __ptext4:	
  1434 ;; *************** function _OSCILLATOR_Initialize *****************
  1435 ;; Defined at:
  1436 ;;		line 76 in file "mcc_generated_files/mcc.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       0       0       0
  1452 ;;      Temps:          0       0       0       0
  1453 ;;      Totals:         0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_SYSTEM_Initialize
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _OSCILLATOR_Initialize
  1465  04B1                     _OSCILLATOR_Initialize:	
  1466                           
  1467                           ;mcc.c: 78: OSCCON = 0x62;
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1471  04B1  3062               	movlw	98
  1472  04B2  0021               	movlb	1	; select bank1
  1473  04B3  0099               	movwf	25	;volatile
  1474                           
  1475                           ;mcc.c: 80: OSCSTAT = 0x00;
  1476  04B4  019A               	clrf	26	;volatile
  1477                           
  1478                           ;mcc.c: 82: OSCTUNE = 0x00;
  1479  04B5  0198               	clrf	24	;volatile
  1480  04B6  0008               	return
  1481  04B7                     __end_of_OSCILLATOR_Initialize:	
  1482                           
  1483                           	psect	text5
  1484  04C4                     __ptext5:	
  1485 ;; *************** function _ADC_Initialize *****************
  1486 ;; Defined at:
  1487 ;;		line 65 in file "mcc_generated_files/adc.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;		None               void
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1501 ;;      Params:         0       0       0       0
  1502 ;;      Locals:         0       0       0       0
  1503 ;;      Temps:          0       0       0       0
  1504 ;;      Totals:         0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_SYSTEM_Initialize
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _ADC_Initialize
  1517  04C4                     _ADC_Initialize:	
  1518                           
  1519                           ;adc.c: 69: ADCON0 = 0x01;
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  1523  04C4  3001               	movlw	1
  1524  04C5  0021               	movlb	1	; select bank1
  1525  04C6  009D               	movwf	29	;volatile
  1526                           
  1527                           ;adc.c: 72: ADCON1 = 0x50;
  1528  04C7  3050               	movlw	80
  1529  04C8  009E               	movwf	30	;volatile
  1530                           
  1531                           ;adc.c: 75: ADRESL = 0x00;
  1532  04C9  019B               	clrf	27	;volatile
  1533                           
  1534                           ;adc.c: 78: ADRESH = 0x00;
  1535  04CA  019C               	clrf	28	;volatile
  1536  04CB  0008               	return
  1537  04CC                     __end_of_ADC_Initialize:	
  1538                           
  1539                           	psect	text6
  1540  058B                     __ptext6:	
  1541 ;; *************** function _LCDWriteString *****************
  1542 ;; Defined at:
  1543 ;;		line 251 in file "lcd_hd44780_pic16.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  msg             2   12[COMMON] PTR const unsigned char 
  1546 ;;		 -> STR_4(4), STR_3(11), STR_2(7), STR_1(15), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  cc              1    1[BANK0 ] char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;		None               void
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1558 ;;      Params:         2       0       0       0
  1559 ;;      Locals:         0       1       0       0
  1560 ;;      Temps:          0       1       0       0
  1561 ;;      Totals:         2       2       0       0
  1562 ;;Total ram usage:        4 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		_LCDByte
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _LCDWriteString
  1574  058B                     _LCDWriteString:	
  1575  058B                     l1303:	
  1576                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1580                           
  1581  058B  087C               	movf	LCDWriteString@msg,w
  1582  058C  0084               	movwf	4
  1583  058D  087D               	movf	LCDWriteString@msg+1,w
  1584  058E  0085               	movwf	5
  1585  058F  0012               	moviw fsr0++
  1586  0590  1903               	btfsc	3,2
  1587  0591  0008               	return
  1588                           
  1589                           ;lcd_hd44780_pic16.c: 282: {
  1590                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  1591  0592  087C               	movf	LCDWriteString@msg,w
  1592  0593  0084               	movwf	4
  1593  0594  087D               	movf	LCDWriteString@msg+1,w
  1594  0595  0085               	movwf	5
  1595  0596  0012               	moviw fsr0++
  1596  0597  3A25               	xorlw	37
  1597  0598  1D03               	btfss	3,2
  1598  0599  2DB7               	goto	l1299
  1599                           
  1600                           ;lcd_hd44780_pic16.c: 285: {
  1601                           ;lcd_hd44780_pic16.c: 286: msg++;
  1602  059A  3001               	movlw	1
  1603  059B  07FC               	addwf	LCDWriteString@msg,f
  1604  059C  3000               	movlw	0
  1605  059D  3DFD               	addwfc	LCDWriteString@msg+1,f
  1606                           
  1607                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  1608  059E  087C               	movf	LCDWriteString@msg,w
  1609  059F  0084               	movwf	4
  1610  05A0  087D               	movf	LCDWriteString@msg+1,w
  1611  05A1  0085               	movwf	5
  1612  05A2  0800               	movf	0,w	;code access
  1613  05A3  3ED0               	addlw	-48
  1614  05A4  0020               	movlb	0	; select bank0
  1615  05A5  00A0               	movwf	??_LCDWriteString
  1616  05A6  0820               	movf	??_LCDWriteString,w
  1617  05A7  00A1               	movwf	LCDWriteString@cc
  1618                           
  1619                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  1620  05A8  1BA1               	btfsc	LCDWriteString@cc,7
  1621  05A9  2DB3               	goto	l1295
  1622  05AA  0821               	movf	LCDWriteString@cc,w
  1623  05AB  3A80               	xorlw	128
  1624  05AC  3E78               	addlw	-136
  1625  05AD  1803               	skipnc
  1626  05AE  2DB3               	goto	l1295
  1627                           
  1628                           ;lcd_hd44780_pic16.c: 290: {
  1629                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  1630  05AF  01F5               	clrf	LCDByte@isdata
  1631  05B0  0AF5               	incf	LCDByte@isdata,f
  1632  05B1  0821               	movf	LCDWriteString@cc,w
  1633  05B2  2DBE               	goto	L2
  1634  05B3                     l1295:	
  1635                           ;lcd_hd44780_pic16.c: 292: }
  1636                           
  1637                           
  1638                           ;lcd_hd44780_pic16.c: 293: else
  1639                           ;lcd_hd44780_pic16.c: 294: {
  1640                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  1641  05B3  01F5               	clrf	LCDByte@isdata
  1642  05B4  0AF5               	incf	LCDByte@isdata,f
  1643  05B5  3025               	movlw	37
  1644  05B6  2559               	fcall	_LCDByte
  1645  05B7                     l1299:	
  1646                           ;lcd_hd44780_pic16.c: 297: }
  1647                           ;lcd_hd44780_pic16.c: 298: }
  1648                           
  1649                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  1650                           
  1651                           
  1652                           ;lcd_hd44780_pic16.c: 299: else
  1653                           ;lcd_hd44780_pic16.c: 300: {
  1654                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  1655  05B7  01F5               	clrf	LCDByte@isdata
  1656  05B8  0AF5               	incf	LCDByte@isdata,f
  1657  05B9  087C               	movf	LCDWriteString@msg,w
  1658  05BA  0084               	movwf	4
  1659  05BB  087D               	movf	LCDWriteString@msg+1,w
  1660  05BC  0085               	movwf	5
  1661  05BD  0800               	movf	0,w	;code access
  1662  05BE                     L2:	
  1663  05BE  2559               	fcall	_LCDByte
  1664                           
  1665                           ;lcd_hd44780_pic16.c: 302: }
  1666                           ;lcd_hd44780_pic16.c: 303: msg++;
  1667  05BF  3001               	movlw	1
  1668  05C0  07FC               	addwf	LCDWriteString@msg,f
  1669  05C1  3000               	movlw	0
  1670  05C2  3DFD               	addwfc	LCDWriteString@msg+1,f
  1671  05C3  2D8B               	goto	l1303
  1672  05C4                     __end_of_LCDWriteString:	
  1673                           
  1674                           	psect	text7
  1675  0764                     __ptext7:	
  1676 ;; *************** function _LCDWriteInt *****************
  1677 ;; Defined at:
  1678 ;;		line 307 in file "lcd_hd44780_pic16.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  val             2    0[BANK0 ] int 
  1681 ;;  field_length    1    2[BANK0 ] char 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  str             5    3[BANK0 ] unsigned char [5]
  1684 ;;  i               2   10[BANK0 ] int 
  1685 ;;  j               2    8[BANK0 ] int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;		None               void
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1695 ;;      Params:         0       3       0       0
  1696 ;;      Locals:         0       9       0       0
  1697 ;;      Temps:          2       0       0       0
  1698 ;;      Totals:         2      12       0       0
  1699 ;;Total ram usage:       14 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		_LCDByte
  1704 ;;		___awdiv
  1705 ;;		___awmod
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _LCDWriteInt
  1713  0764                     _LCDWriteInt:	
  1714                           
  1715                           ;lcd_hd44780_pic16.c: 320: char str[5]={0,0,0,0,0};
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1719  0764  302E               	movlw	low LCDWriteInt@F2357
  1720  0765  0086               	movwf	6
  1721  0766  3000               	movlw	high LCDWriteInt@F2357
  1722  0767  0087               	movwf	7
  1723  0768  3023               	movlw	low LCDWriteInt@str
  1724  0769  0084               	movwf	4
  1725  076A  3000               	movlw	high LCDWriteInt@str
  1726  076B  0085               	movwf	5
  1727  076C  3005               	movlw	5
  1728  076D  00FC               	movwf	??_LCDWriteInt
  1729  076E                     u750:	
  1730  076E  0016               	moviw fsr1++
  1731  076F  001A               	movwi fsr0++
  1732  0770  0BFC               	decfsz	??_LCDWriteInt,f
  1733  0771  2F6E               	goto	u750
  1734                           
  1735                           ;lcd_hd44780_pic16.c: 321: int i=4,j=0;
  1736  0772  3004               	movlw	4
  1737  0773  0020               	movlb	0	; select bank0
  1738  0774  00AA               	movwf	LCDWriteInt@i
  1739  0775  3000               	movlw	0
  1740  0776  00AB               	movwf	LCDWriteInt@i+1
  1741  0777  01A8               	clrf	LCDWriteInt@j
  1742  0778  01A9               	clrf	LCDWriteInt@j+1
  1743                           
  1744                           ;lcd_hd44780_pic16.c: 324: if(val<0)
  1745  0779  1FA1               	btfss	LCDWriteInt@val+1,7
  1746  077A  2F85               	goto	l1323
  1747                           
  1748                           ;lcd_hd44780_pic16.c: 325: {
  1749                           ;lcd_hd44780_pic16.c: 326: (LCDByte('-',1));
  1750  077B  01F5               	clrf	LCDByte@isdata
  1751  077C  0AF5               	incf	LCDByte@isdata,f
  1752  077D  302D               	movlw	45
  1753  077E  2559               	fcall	_LCDByte
  1754                           
  1755                           ;lcd_hd44780_pic16.c: 327: val=val*-1;
  1756  077F  0020               	movlb	0	; select bank0
  1757  0780  09A0               	comf	LCDWriteInt@val,f
  1758  0781  09A1               	comf	LCDWriteInt@val+1,f
  1759  0782  0AA0               	incf	LCDWriteInt@val,f
  1760  0783  1903               	skipnz
  1761  0784  0AA1               	incf	LCDWriteInt@val+1,f
  1762  0785                     l1323:	
  1763                           ;lcd_hd44780_pic16.c: 328: }
  1764                           ;lcd_hd44780_pic16.c: 330: while(val)
  1765                           
  1766  0785  0820               	movf	LCDWriteInt@val,w
  1767  0786  0421               	iorwf	LCDWriteInt@val+1,w
  1768  0787  1903               	btfsc	3,2
  1769  0788  2FAE               	goto	l1325
  1770                           
  1771                           ;lcd_hd44780_pic16.c: 331: {
  1772                           ;lcd_hd44780_pic16.c: 332: str[i]=val%10;
  1773  0789  300A               	movlw	10
  1774  078A  00F0               	movwf	___awmod@divisor
  1775  078B  3000               	movlw	0
  1776  078C  00F1               	movwf	___awmod@divisor+1
  1777  078D  0821               	movf	LCDWriteInt@val+1,w
  1778  078E  00F3               	movwf	___awmod@dividend+1
  1779  078F  0820               	movf	LCDWriteInt@val,w
  1780  0790  00F2               	movwf	___awmod@dividend
  1781  0791  2683               	fcall	___awmod
  1782  0792  0870               	movf	?___awmod,w
  1783  0793  00FC               	movwf	??_LCDWriteInt
  1784  0794  0020               	movlb	0	; select bank0
  1785  0795  082A               	movf	LCDWriteInt@i,w
  1786  0796  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1787  0797  0086               	movwf	6
  1788  0798  0187               	clrf	7
  1789  0799  087C               	movf	??_LCDWriteInt,w
  1790  079A  0081               	movwf	1
  1791                           
  1792                           ;lcd_hd44780_pic16.c: 333: val=val/10;
  1793  079B  300A               	movlw	10
  1794  079C  00F0               	movwf	___awdiv@divisor
  1795  079D  3000               	movlw	0
  1796  079E  00F1               	movwf	___awdiv@divisor+1
  1797  079F  0821               	movf	LCDWriteInt@val+1,w
  1798  07A0  00F3               	movwf	___awdiv@dividend+1
  1799  07A1  0820               	movf	LCDWriteInt@val,w
  1800  07A2  00F2               	movwf	___awdiv@dividend
  1801  07A3  2713               	fcall	___awdiv
  1802  07A4  0871               	movf	?___awdiv+1,w
  1803  07A5  0020               	movlb	0	; select bank0
  1804  07A6  00A1               	movwf	LCDWriteInt@val+1
  1805  07A7  0870               	movf	?___awdiv,w
  1806  07A8  00A0               	movwf	LCDWriteInt@val
  1807                           
  1808                           ;lcd_hd44780_pic16.c: 334: i--;
  1809  07A9  30FF               	movlw	255
  1810  07AA  07AA               	addwf	LCDWriteInt@i,f
  1811  07AB  30FF               	movlw	255
  1812  07AC  3DAB               	addwfc	LCDWriteInt@i+1,f
  1813  07AD  2F85               	goto	l1323
  1814  07AE                     l1325:	
  1815                           
  1816                           ;lcd_hd44780_pic16.c: 335: }
  1817                           ;lcd_hd44780_pic16.c: 336: if(field_length==-1)
  1818  07AE  0A22               	incf	LCDWriteInt@field_length,w
  1819  07AF  1903               	btfsc	3,2
  1820  07B0  2FB6               	goto	l1331
  1821  07B1  2FBE               	goto	l1333
  1822  07B2                     l1329:	
  1823                           ;lcd_hd44780_pic16.c: 337: while(str[j]==0) j++;
  1824                           
  1825  07B2  3001               	movlw	1
  1826  07B3  07A8               	addwf	LCDWriteInt@j,f
  1827  07B4  3000               	movlw	0
  1828  07B5  3DA9               	addwfc	LCDWriteInt@j+1,f
  1829  07B6                     l1331:	
  1830  07B6  0828               	movf	LCDWriteInt@j,w
  1831  07B7  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1832  07B8  0086               	movwf	6
  1833  07B9  0187               	clrf	7
  1834  07BA  0801               	movf	1,w
  1835  07BB  1D03               	btfss	3,2
  1836  07BC  2FCE               	goto	l1335
  1837  07BD  2FB2               	goto	l1329
  1838  07BE                     l1333:	
  1839                           
  1840                           ;lcd_hd44780_pic16.c: 338: else
  1841                           ;lcd_hd44780_pic16.c: 339: j=5-field_length;
  1842  07BE  0822               	movf	LCDWriteInt@field_length,w
  1843  07BF  00FC               	movwf	??_LCDWriteInt
  1844  07C0  01FD               	clrf	??_LCDWriteInt+1
  1845  07C1  1BFC               	btfsc	??_LCDWriteInt,7
  1846  07C2  03FD               	decf	??_LCDWriteInt+1,f
  1847  07C3  09FC               	comf	??_LCDWriteInt,f
  1848  07C4  09FD               	comf	??_LCDWriteInt+1,f
  1849  07C5  0AFC               	incf	??_LCDWriteInt,f
  1850  07C6  1903               	skipnz
  1851  07C7  0AFD               	incf	??_LCDWriteInt+1,f
  1852  07C8  087C               	movf	??_LCDWriteInt,w
  1853  07C9  3E05               	addlw	5
  1854  07CA  00A8               	movwf	LCDWriteInt@j
  1855  07CB  3000               	movlw	0
  1856  07CC  3D7D               	addwfc	??_LCDWriteInt+1,w
  1857  07CD  00A9               	movwf	LCDWriteInt@j+1
  1858  07CE                     l1335:	
  1859                           
  1860                           ;lcd_hd44780_pic16.c: 342: for(i=j;i<5;i++)
  1861  07CE  0829               	movf	LCDWriteInt@j+1,w
  1862  07CF  00AB               	movwf	LCDWriteInt@i+1
  1863  07D0  0828               	movf	LCDWriteInt@j,w
  1864  07D1  00AA               	movwf	LCDWriteInt@i
  1865  07D2                     L3:	
  1866  07D2  082B               	movf	LCDWriteInt@i+1,w
  1867  07D3  3A80               	xorlw	128
  1868  07D4  00FC               	movwf	??_LCDWriteInt
  1869  07D5  3080               	movlw	128
  1870  07D6  027C               	subwf	??_LCDWriteInt,w
  1871  07D7  1D03               	skipz
  1872  07D8  2FDB               	goto	u805
  1873  07D9  3005               	movlw	5
  1874  07DA  022A               	subwf	LCDWriteInt@i,w
  1875  07DB                     u805:	
  1876  07DB  1803               	btfsc	3,0
  1877  07DC  0008               	return
  1878                           
  1879                           ;lcd_hd44780_pic16.c: 343: {
  1880                           ;lcd_hd44780_pic16.c: 344: (LCDByte(48+str[i],1));
  1881  07DD  01F5               	clrf	LCDByte@isdata
  1882  07DE  0AF5               	incf	LCDByte@isdata,f
  1883  07DF  0020               	movlb	0	; select bank0
  1884  07E0  082A               	movf	LCDWriteInt@i,w
  1885  07E1  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1886  07E2  0086               	movwf	6
  1887  07E3  0187               	clrf	7
  1888  07E4  0801               	movf	1,w
  1889  07E5  3E30               	addlw	48
  1890  07E6  2559               	fcall	_LCDByte
  1891  07E7  3001               	movlw	1
  1892  07E8  0020               	movlb	0	; select bank0
  1893  07E9  07AA               	addwf	LCDWriteInt@i,f
  1894  07EA  3000               	movlw	0
  1895  07EB  3DAB               	addwfc	LCDWriteInt@i+1,f
  1896  07EC  2FD2               	goto	L3
  1897  07ED                     __end_of_LCDWriteInt:	
  1898                           
  1899                           	psect	text8
  1900  0683                     __ptext8:	
  1901 ;; *************** function ___awmod *****************
  1902 ;; Defined at:
  1903 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  divisor         2    0[COMMON] int 
  1906 ;;  dividend        2    2[COMMON] int 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  sign            1    6[COMMON] unsigned char 
  1909 ;;  counter         1    5[COMMON] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    0[COMMON] int 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1919 ;;      Params:         4       0       0       0
  1920 ;;      Locals:         2       0       0       0
  1921 ;;      Temps:          1       0       0       0
  1922 ;;      Totals:         7       0       0       0
  1923 ;;Total ram usage:        7 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_LCDWriteInt
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function ___awmod
  1934  0683                     ___awmod:	
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1938  0683  01F6               	clrf	___awmod@sign
  1939  0684  1FF3               	btfss	___awmod@dividend+1,7
  1940  0685  2E8D               	goto	l1169
  1941  0686  09F2               	comf	___awmod@dividend,f
  1942  0687  09F3               	comf	___awmod@dividend+1,f
  1943  0688  0AF2               	incf	___awmod@dividend,f
  1944  0689  1903               	skipnz
  1945  068A  0AF3               	incf	___awmod@dividend+1,f
  1946  068B  01F6               	clrf	___awmod@sign
  1947  068C  0AF6               	incf	___awmod@sign,f
  1948  068D                     l1169:	
  1949  068D  1FF1               	btfss	___awmod@divisor+1,7
  1950  068E  2E94               	goto	l1173
  1951  068F  09F0               	comf	___awmod@divisor,f
  1952  0690  09F1               	comf	___awmod@divisor+1,f
  1953  0691  0AF0               	incf	___awmod@divisor,f
  1954  0692  1903               	skipnz
  1955  0693  0AF1               	incf	___awmod@divisor+1,f
  1956  0694                     l1173:	
  1957  0694  0870               	movf	___awmod@divisor,w
  1958  0695  0471               	iorwf	___awmod@divisor+1,w
  1959  0696  1903               	btfsc	3,2
  1960  0697  2EBB               	goto	l1191
  1961  0698  01F5               	clrf	___awmod@counter
  1962  0699  0AF5               	incf	___awmod@counter,f
  1963  069A                     l1181:	
  1964  069A  1BF1               	btfsc	___awmod@divisor+1,7
  1965  069B  2EA6               	goto	l1183
  1966  069C  3001               	movlw	1
  1967  069D                     u625:	
  1968  069D  35F0               	lslf	___awmod@divisor,f
  1969  069E  0DF1               	rlf	___awmod@divisor+1,f
  1970  069F  0B89               	decfsz	9,f
  1971  06A0  2E9D               	goto	u625
  1972  06A1  3001               	movlw	1
  1973  06A2  00F4               	movwf	??___awmod
  1974  06A3  0874               	movf	??___awmod,w
  1975  06A4  07F5               	addwf	___awmod@counter,f
  1976  06A5  2E9A               	goto	l1181
  1977  06A6                     l1183:	
  1978  06A6  0871               	movf	___awmod@divisor+1,w
  1979  06A7  0273               	subwf	___awmod@dividend+1,w
  1980  06A8  1D03               	skipz
  1981  06A9  2EAC               	goto	u645
  1982  06AA  0870               	movf	___awmod@divisor,w
  1983  06AB  0272               	subwf	___awmod@dividend,w
  1984  06AC                     u645:	
  1985  06AC  1C03               	skipc
  1986  06AD  2EB2               	goto	l1187
  1987  06AE  0870               	movf	___awmod@divisor,w
  1988  06AF  02F2               	subwf	___awmod@dividend,f
  1989  06B0  0871               	movf	___awmod@divisor+1,w
  1990  06B1  3BF3               	subwfb	___awmod@dividend+1,f
  1991  06B2                     l1187:	
  1992  06B2  3001               	movlw	1
  1993  06B3                     u655:	
  1994  06B3  36F1               	lsrf	___awmod@divisor+1,f
  1995  06B4  0CF0               	rrf	___awmod@divisor,f
  1996  06B5  0B89               	decfsz	9,f
  1997  06B6  2EB3               	goto	u655
  1998  06B7  3001               	movlw	1
  1999  06B8  02F5               	subwf	___awmod@counter,f
  2000  06B9  1D03               	btfss	3,2
  2001  06BA  2EA6               	goto	l1183
  2002  06BB                     l1191:	
  2003  06BB  0876               	movf	___awmod@sign,w
  2004  06BC  1903               	btfsc	3,2
  2005  06BD  2EC3               	goto	l1195
  2006  06BE  09F2               	comf	___awmod@dividend,f
  2007  06BF  09F3               	comf	___awmod@dividend+1,f
  2008  06C0  0AF2               	incf	___awmod@dividend,f
  2009  06C1  1903               	skipnz
  2010  06C2  0AF3               	incf	___awmod@dividend+1,f
  2011  06C3                     l1195:	
  2012  06C3  0873               	movf	___awmod@dividend+1,w
  2013  06C4  00F1               	movwf	?___awmod+1
  2014  06C5  0872               	movf	___awmod@dividend,w
  2015  06C6  00F0               	movwf	?___awmod
  2016  06C7  0008               	return
  2017  06C8                     __end_of___awmod:	
  2018                           
  2019                           	psect	text9
  2020  0713                     __ptext9:	
  2021 ;; *************** function ___awdiv *****************
  2022 ;; Defined at:
  2023 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  divisor         2    0[COMMON] int 
  2026 ;;  dividend        2    2[COMMON] int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  quotient        2    7[COMMON] int 
  2029 ;;  sign            1    6[COMMON] unsigned char 
  2030 ;;  counter         1    5[COMMON] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    0[COMMON] int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2040 ;;      Params:         4       0       0       0
  2041 ;;      Locals:         4       0       0       0
  2042 ;;      Temps:          1       0       0       0
  2043 ;;      Totals:         9       0       0       0
  2044 ;;Total ram usage:        9 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_LCDWriteInt
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function ___awdiv
  2055  0713                     ___awdiv:	
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2059  0713  01F6               	clrf	___awdiv@sign
  2060  0714  1FF1               	btfss	___awdiv@divisor+1,7
  2061  0715  2F1D               	goto	l1125
  2062  0716  09F0               	comf	___awdiv@divisor,f
  2063  0717  09F1               	comf	___awdiv@divisor+1,f
  2064  0718  0AF0               	incf	___awdiv@divisor,f
  2065  0719  1903               	skipnz
  2066  071A  0AF1               	incf	___awdiv@divisor+1,f
  2067  071B  01F6               	clrf	___awdiv@sign
  2068  071C  0AF6               	incf	___awdiv@sign,f
  2069  071D                     l1125:	
  2070  071D  1FF3               	btfss	___awdiv@dividend+1,7
  2071  071E  2F28               	goto	l1131
  2072  071F  09F2               	comf	___awdiv@dividend,f
  2073  0720  09F3               	comf	___awdiv@dividend+1,f
  2074  0721  0AF2               	incf	___awdiv@dividend,f
  2075  0722  1903               	skipnz
  2076  0723  0AF3               	incf	___awdiv@dividend+1,f
  2077  0724  3001               	movlw	1
  2078  0725  00F4               	movwf	??___awdiv
  2079  0726  0874               	movf	??___awdiv,w
  2080  0727  06F6               	xorwf	___awdiv@sign,f
  2081  0728                     l1131:	
  2082  0728  01F7               	clrf	___awdiv@quotient
  2083  0729  01F8               	clrf	___awdiv@quotient+1
  2084  072A  0870               	movf	___awdiv@divisor,w
  2085  072B  0471               	iorwf	___awdiv@divisor+1,w
  2086  072C  1903               	btfsc	3,2
  2087  072D  2F57               	goto	l1153
  2088  072E  01F5               	clrf	___awdiv@counter
  2089  072F  0AF5               	incf	___awdiv@counter,f
  2090  0730                     l1141:	
  2091  0730  1BF1               	btfsc	___awdiv@divisor+1,7
  2092  0731  2F3C               	goto	l1143
  2093  0732  3001               	movlw	1
  2094  0733                     u525:	
  2095  0733  35F0               	lslf	___awdiv@divisor,f
  2096  0734  0DF1               	rlf	___awdiv@divisor+1,f
  2097  0735  0B89               	decfsz	9,f
  2098  0736  2F33               	goto	u525
  2099  0737  3001               	movlw	1
  2100  0738  00F4               	movwf	??___awdiv
  2101  0739  0874               	movf	??___awdiv,w
  2102  073A  07F5               	addwf	___awdiv@counter,f
  2103  073B  2F30               	goto	l1141
  2104  073C                     l1143:	
  2105  073C  3001               	movlw	1
  2106  073D                     u545:	
  2107  073D  35F7               	lslf	___awdiv@quotient,f
  2108  073E  0DF8               	rlf	___awdiv@quotient+1,f
  2109  073F  0B89               	decfsz	9,f
  2110  0740  2F3D               	goto	u545
  2111  0741  0871               	movf	___awdiv@divisor+1,w
  2112  0742  0273               	subwf	___awdiv@dividend+1,w
  2113  0743  1D03               	skipz
  2114  0744  2F47               	goto	u555
  2115  0745  0870               	movf	___awdiv@divisor,w
  2116  0746  0272               	subwf	___awdiv@dividend,w
  2117  0747                     u555:	
  2118  0747  1C03               	skipc
  2119  0748  2F4E               	goto	l1149
  2120  0749  0870               	movf	___awdiv@divisor,w
  2121  074A  02F2               	subwf	___awdiv@dividend,f
  2122  074B  0871               	movf	___awdiv@divisor+1,w
  2123  074C  3BF3               	subwfb	___awdiv@dividend+1,f
  2124  074D  1477               	bsf	___awdiv@quotient,0
  2125  074E                     l1149:	
  2126  074E  3001               	movlw	1
  2127  074F                     u565:	
  2128  074F  36F1               	lsrf	___awdiv@divisor+1,f
  2129  0750  0CF0               	rrf	___awdiv@divisor,f
  2130  0751  0B89               	decfsz	9,f
  2131  0752  2F4F               	goto	u565
  2132  0753  3001               	movlw	1
  2133  0754  02F5               	subwf	___awdiv@counter,f
  2134  0755  1D03               	btfss	3,2
  2135  0756  2F3C               	goto	l1143
  2136  0757                     l1153:	
  2137  0757  0876               	movf	___awdiv@sign,w
  2138  0758  1903               	btfsc	3,2
  2139  0759  2F5F               	goto	l1157
  2140  075A  09F7               	comf	___awdiv@quotient,f
  2141  075B  09F8               	comf	___awdiv@quotient+1,f
  2142  075C  0AF7               	incf	___awdiv@quotient,f
  2143  075D  1903               	skipnz
  2144  075E  0AF8               	incf	___awdiv@quotient+1,f
  2145  075F                     l1157:	
  2146  075F  0878               	movf	___awdiv@quotient+1,w
  2147  0760  00F1               	movwf	?___awdiv+1
  2148  0761  0877               	movf	___awdiv@quotient,w
  2149  0762  00F0               	movwf	?___awdiv
  2150  0763  0008               	return
  2151  0764                     __end_of___awdiv:	
  2152                           
  2153                           	psect	text10
  2154  0603                     __ptext10:	
  2155 ;; *************** function _LCDInit *****************
  2156 ;; Defined at:
  2157 ;;		line 193 in file "lcd_hd44780_pic16.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  style           1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  style           1    0[BANK0 ] unsigned char 
  2162 ;;  __i             1    1[BANK0 ] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;		None               void
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       0       0       0
  2173 ;;      Locals:         0       2       0       0
  2174 ;;      Temps:          2       0       0       0
  2175 ;;      Totals:         2       2       0       0
  2176 ;;Total ram usage:        4 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    2
  2179 ;; This function calls:
  2180 ;;		_LCDBusyLoop
  2181 ;;		_LCDByte
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _LCDInit
  2189  0603                     _LCDInit:	
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2193                           ;LCDInit@style stored from wreg
  2194  0603  0020               	movlb	0	; select bank0
  2195  0604  00A0               	movwf	LCDInit@style
  2196                           
  2197                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(2000000/4000.0)));
  2198  0605  3014               	movlw	20
  2199  0606  00FD               	movwf	??_LCDInit+1
  2200  0607  3079               	movlw	121
  2201  0608  00FC               	movwf	??_LCDInit
  2202  0609                     u887:	
  2203  0609  0BFC               	decfsz	??_LCDInit,f
  2204  060A  2E09               	goto	u887
  2205  060B  0BFD               	decfsz	??_LCDInit+1,f
  2206  060C  2E09               	goto	u887
  2207  060D  3200               	nop2
  2208                           
  2209                           ;lcd_hd44780_pic16.c: 212: TRISB&=(~(0x0F<<0));
  2210  060E  30F0               	movlw	240
  2211  060F  00FC               	movwf	??_LCDInit
  2212  0610  087C               	movf	??_LCDInit,w
  2213  0611  0021               	movlb	1	; select bank1
  2214  0612  058D               	andwf	13,f	;volatile
  2215                           
  2216                           ;lcd_hd44780_pic16.c: 214: TRISBbits.TRISB6=0;
  2217  0613  130D               	bcf	13,6	;volatile
  2218                           
  2219                           ;lcd_hd44780_pic16.c: 215: TRISBbits.TRISB4=0;
  2220  0614  120D               	bcf	13,4	;volatile
  2221                           
  2222                           ;lcd_hd44780_pic16.c: 216: TRISBbits.TRISB5=0;
  2223  0615  128D               	bcf	13,5	;volatile
  2224                           
  2225                           ;lcd_hd44780_pic16.c: 218: PORTB&=(~(0x0F<<0));
  2226  0616  30F0               	movlw	240
  2227  0617  00FC               	movwf	??_LCDInit
  2228  0618  087C               	movf	??_LCDInit,w
  2229  0619  0020               	movlb	0	; select bank0
  2230  061A  058D               	andwf	13,f	;volatile
  2231                           
  2232                           ;lcd_hd44780_pic16.c: 220: (RB6=0);
  2233  061B  130D               	bcf	13,6	;volatile
  2234                           
  2235                           ;lcd_hd44780_pic16.c: 221: (RB5=0);
  2236  061C  128D               	bcf	13,5	;volatile
  2237                           
  2238                           ;lcd_hd44780_pic16.c: 222: (RB4=0);
  2239  061D  120D               	bcf	13,4	;volatile
  2240                           
  2241                           ;lcd_hd44780_pic16.c: 227: (RB6=1);
  2242                           
  2243                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2244  061E  0020               	movlb	0	; select bank0
  2245  061F  170D               	bsf	13,6	;volatile
  2246                           
  2247                           ;lcd_hd44780_pic16.c: 228: PORTB|=((0b00000010)<<0);
  2248  0620  148D               	bsf	13,1	;volatile
  2249                           
  2250                           ;lcd_hd44780_pic16.c: 230: (RB6=0);
  2251                           
  2252                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2253  0621  0020               	movlb	0	; select bank0
  2254  0622  130D               	bcf	13,6	;volatile
  2255                           
  2256                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  2257                           
  2258                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2259  0623  25C4               	fcall	_LCDBusyLoop
  2260                           
  2261                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  2262  0624  01F5               	clrf	LCDByte@isdata
  2263  0625  3028               	movlw	40
  2264  0626  2559               	fcall	_LCDByte
  2265                           
  2266                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  2267  0627  01F5               	clrf	LCDByte@isdata
  2268  0628  0020               	movlb	0	; select bank0
  2269  0629  0820               	movf	LCDInit@style,w
  2270  062A  380C               	iorlw	12
  2271  062B  2559               	fcall	_LCDByte
  2272                           
  2273                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  2274  062C  01F5               	clrf	LCDByte@isdata
  2275  062D  3040               	movlw	64
  2276  062E  2559               	fcall	_LCDByte
  2277                           
  2278                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  2279                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  2280  062F  0020               	movlb	0	; select bank0
  2281  0630  01A1               	clrf	LCDInit@__i
  2282  0631                     L4:	
  2283  0631  3040               	movlw	64
  2284  0632  0221               	subwf	LCDInit@__i,w
  2285  0633  1803               	btfsc	3,0
  2286  0634  0008               	return
  2287                           
  2288                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  2289  0635  01F5               	clrf	LCDByte@isdata
  2290  0636  0AF5               	incf	LCDByte@isdata,f
  2291  0637  0821               	movf	LCDInit@__i,w
  2292  0638  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  2293  0639  0086               	movwf	6
  2294  063A  0187               	clrf	7
  2295  063B  0801               	movf	1,w
  2296  063C  2559               	fcall	_LCDByte
  2297  063D  3001               	movlw	1
  2298  063E  00FC               	movwf	??_LCDInit
  2299  063F  087C               	movf	??_LCDInit,w
  2300  0640  0020               	movlb	0	; select bank0
  2301  0641  07A1               	addwf	LCDInit@__i,f
  2302  0642  2E31               	goto	L4
  2303  0643                     __end_of_LCDInit:	
  2304                           
  2305                           	psect	text11
  2306  0511                     __ptext11:	
  2307 ;; *************** function _LCDGotoXY *****************
  2308 ;; Defined at:
  2309 ;;		line 352 in file "lcd_hd44780_pic16.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  x               1    wreg     unsigned char 
  2312 ;;  y               1   12[COMMON] unsigned char 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  x               1    0[BANK0 ] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;		None               void
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2324 ;;      Params:         1       0       0       0
  2325 ;;      Locals:         0       1       0       0
  2326 ;;      Temps:          1       0       0       0
  2327 ;;      Totals:         2       1       0       0
  2328 ;;Total ram usage:        3 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		_LCDByte
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _LCDGotoXY
  2340  0511                     _LCDGotoXY:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2344                           ;LCDGotoXY@x stored from wreg
  2345  0511  0020               	movlb	0	; select bank0
  2346  0512  00A0               	movwf	LCDGotoXY@x
  2347                           
  2348                           ;lcd_hd44780_pic16.c: 354: if(x>=20) return;
  2349  0513  3014               	movlw	20
  2350  0514  0220               	subwf	LCDGotoXY@x,w
  2351  0515  1803               	btfsc	3,0
  2352  0516  0008               	return
  2353  0517  2D21               	goto	l1277
  2354  0518                     l169:	
  2355                           ;lcd_hd44780_pic16.c: 362: case 1:
  2356                           
  2357                           ;lcd_hd44780_pic16.c: 361: break;
  2358                           
  2359                           ;lcd_hd44780_pic16.c: 359: {
  2360                           ;lcd_hd44780_pic16.c: 360: case 0:
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 358: switch(y)
  2363                           
  2364                           
  2365                           ;lcd_hd44780_pic16.c: 363: x|=0b01000000;
  2366  0518  1720               	bsf	LCDGotoXY@x,6
  2367                           
  2368                           ;lcd_hd44780_pic16.c: 364: break;
  2369  0519  2D2F               	goto	l168
  2370  051A                     l1271:	
  2371                           ;lcd_hd44780_pic16.c: 365: case 2:
  2372                           
  2373                           
  2374                           ;lcd_hd44780_pic16.c: 366: x+=0x14;
  2375  051A  3014               	movlw	20
  2376  051B  2D1D               	goto	L5
  2377  051C                     l1273:	
  2378                           ;lcd_hd44780_pic16.c: 368: case 3:
  2379                           
  2380                           ;lcd_hd44780_pic16.c: 367: break;
  2381                           
  2382                           
  2383                           ;lcd_hd44780_pic16.c: 369: x+=0x54;
  2384  051C  3054               	movlw	84
  2385  051D                     L5:	
  2386  051D  00FD               	movwf	??_LCDGotoXY
  2387  051E  087D               	movf	??_LCDGotoXY,w
  2388  051F  07A0               	addwf	LCDGotoXY@x,f
  2389                           
  2390                           ;lcd_hd44780_pic16.c: 371: }
  2391                           
  2392                           ;lcd_hd44780_pic16.c: 370: break;
  2393  0520  2D2F               	goto	l168
  2394  0521                     l1277:	
  2395  0521  087C               	movf	LCDGotoXY@y,w
  2396                           
  2397                           ; Switch size 1, requested type "space"
  2398                           ; Number of cases is 4, Range of values is 0 to 3
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte           13     7 (average)
  2402                           ; direct_byte           14     6 (fixed)
  2403                           ; jumptable            260     6 (fixed)
  2404                           ;	Chosen strategy is simple_byte
  2405  0522  3A00               	xorlw	0	; case 0
  2406  0523  1903               	skipnz
  2407  0524  2D2F               	goto	l168
  2408  0525  3A01               	xorlw	1	; case 1
  2409  0526  1903               	skipnz
  2410  0527  2D18               	goto	l169
  2411  0528  3A03               	xorlw	3	; case 2
  2412  0529  1903               	skipnz
  2413  052A  2D1A               	goto	l1271
  2414  052B  3A01               	xorlw	1	; case 3
  2415  052C  1903               	skipnz
  2416  052D  2D1C               	goto	l1273
  2417  052E  2D2F               	goto	l168
  2418  052F                     l168:	
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 393: x|=0b10000000;
  2421  052F  17A0               	bsf	LCDGotoXY@x,7
  2422                           
  2423                           ;lcd_hd44780_pic16.c: 394: (LCDByte(x,0));
  2424  0530  01F5               	clrf	LCDByte@isdata
  2425  0531  0820               	movf	LCDGotoXY@x,w
  2426  0532  2559               	fcall	_LCDByte
  2427  0533  0008               	return
  2428  0534                     __end_of_LCDGotoXY:	
  2429                           
  2430                           	psect	text12
  2431  0559                     __ptext12:	
  2432 ;; *************** function _LCDByte *****************
  2433 ;; Defined at:
  2434 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  c               1    wreg     unsigned char 
  2437 ;;  isdata          1    5[COMMON] unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  c               1   10[COMMON] unsigned char 
  2440 ;;  temp            1   11[COMMON] unsigned char 
  2441 ;;  ln              1    9[COMMON] unsigned char 
  2442 ;;  hn              1    8[COMMON] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;		None               void
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2452 ;;      Params:         1       0       0       0
  2453 ;;      Locals:         4       0       0       0
  2454 ;;      Temps:          2       0       0       0
  2455 ;;      Totals:         7       0       0       0
  2456 ;;Total ram usage:        7 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    1
  2459 ;; This function calls:
  2460 ;;		_LCDBusyLoop
  2461 ;; This function is called by:
  2462 ;;		_LCDInit
  2463 ;;		_LCDWriteString
  2464 ;;		_LCDWriteInt
  2465 ;;		_LCDGotoXY
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _LCDByte
  2471  0559                     _LCDByte:	
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2475                           ;LCDByte@c stored from wreg
  2476  0559  00FA               	movwf	LCDByte@c
  2477                           
  2478                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2479                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2480                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2481  055A  087A               	movf	LCDByte@c,w
  2482  055B  00F6               	movwf	??_LCDByte
  2483  055C  3004               	movlw	4
  2484  055D                     u475:	
  2485  055D  36F6               	lsrf	??_LCDByte,f
  2486  055E  0B89               	decfsz	9,f
  2487  055F  2D5D               	goto	u475
  2488  0560  0876               	movf	??_LCDByte,w
  2489  0561  00F7               	movwf	??_LCDByte+1
  2490  0562  0877               	movf	??_LCDByte+1,w
  2491  0563  00F8               	movwf	LCDByte@hn
  2492                           
  2493                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2494  0564  087A               	movf	LCDByte@c,w
  2495  0565  390F               	andlw	15
  2496  0566  00F6               	movwf	??_LCDByte
  2497  0567  0876               	movf	??_LCDByte,w
  2498  0568  00F9               	movwf	LCDByte@ln
  2499                           
  2500                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2501  0569  0875               	movf	LCDByte@isdata,w
  2502  056A  1D03               	btfss	3,2
  2503  056B  2D6F               	goto	l123
  2504                           
  2505                           ;lcd_hd44780_pic16.c: 96: (RB4=0);
  2506  056C  0020               	movlb	0	; select bank0
  2507  056D  120D               	bcf	13,4	;volatile
  2508  056E  2D71               	goto	l124
  2509  056F                     l123:	
  2510                           
  2511                           ;lcd_hd44780_pic16.c: 97: else
  2512                           ;lcd_hd44780_pic16.c: 98: (RB4=1);
  2513  056F  0020               	movlb	0	; select bank0
  2514  0570  160D               	bsf	13,4	;volatile
  2515  0571                     l124:	
  2516                           
  2517                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2518                           ;lcd_hd44780_pic16.c: 102: (RB6=1);
  2519  0571  0020               	movlb	0	; select bank0
  2520  0572  170D               	bsf	13,6	;volatile
  2521                           
  2522                           ;lcd_hd44780_pic16.c: 106: temp=(PORTB & (~(0X0F<<0)))|((hn<<0));
  2523  0573  080D               	movf	13,w	;volatile
  2524  0574  39F0               	andlw	240
  2525  0575  0478               	iorwf	LCDByte@hn,w
  2526  0576  00F6               	movwf	??_LCDByte
  2527  0577  0876               	movf	??_LCDByte,w
  2528  0578  00FB               	movwf	LCDByte@temp
  2529                           
  2530                           ;lcd_hd44780_pic16.c: 107: PORTB=temp;
  2531  0579  087B               	movf	LCDByte@temp,w
  2532  057A  008D               	movwf	13	;volatile
  2533                           
  2534                           ;lcd_hd44780_pic16.c: 113: (RB6=0);
  2535                           
  2536                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2537  057B  0020               	movlb	0	; select bank0
  2538  057C  130D               	bcf	13,6	;volatile
  2539                           
  2540                           ;lcd_hd44780_pic16.c: 118: (RB6=1);
  2541                           
  2542                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2543  057D  0020               	movlb	0	; select bank0
  2544  057E  170D               	bsf	13,6	;volatile
  2545                           
  2546                           ;lcd_hd44780_pic16.c: 120: temp=(PORTB & (~(0X0F<<0)))|((ln<<0));
  2547  057F  080D               	movf	13,w	;volatile
  2548  0580  39F0               	andlw	240
  2549  0581  0479               	iorwf	LCDByte@ln,w
  2550  0582  00F6               	movwf	??_LCDByte
  2551  0583  0876               	movf	??_LCDByte,w
  2552  0584  00FB               	movwf	LCDByte@temp
  2553                           
  2554                           ;lcd_hd44780_pic16.c: 122: PORTB=temp;
  2555  0585  087B               	movf	LCDByte@temp,w
  2556  0586  008D               	movwf	13	;volatile
  2557                           
  2558                           ;lcd_hd44780_pic16.c: 128: (RB6=0);
  2559                           
  2560                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2561  0587  0020               	movlb	0	; select bank0
  2562  0588  130D               	bcf	13,6	;volatile
  2563                           
  2564                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2565                           
  2566                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2567  0589  25C4               	fcall	_LCDBusyLoop
  2568  058A  0008               	return
  2569  058B                     __end_of_LCDByte:	
  2570                           
  2571                           	psect	text13
  2572  05C4                     __ptext13:	
  2573 ;; *************** function _LCDBusyLoop *****************
  2574 ;; Defined at:
  2575 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  status          1    4[COMMON] unsigned char 
  2580 ;;  temp            1    3[COMMON] unsigned char 
  2581 ;;  busy            1    2[COMMON] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2591 ;;      Params:         0       0       0       0
  2592 ;;      Locals:         3       0       0       0
  2593 ;;      Temps:          2       0       0       0
  2594 ;;      Totals:         5       0       0       0
  2595 ;;Total ram usage:        5 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_LCDByte
  2601 ;;		_LCDInit
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _LCDBusyLoop
  2607  05C4                     _LCDBusyLoop:	
  2608                           
  2609                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2613  05C4  01F4               	clrf	LCDBusyLoop@status
  2614                           
  2615                           ;lcd_hd44780_pic16.c: 142: TRISB|=(0x0f<<0);
  2616  05C5  300F               	movlw	15
  2617  05C6  00F0               	movwf	??_LCDBusyLoop
  2618  05C7  0870               	movf	??_LCDBusyLoop,w
  2619  05C8  0021               	movlb	1	; select bank1
  2620  05C9  048D               	iorwf	13,f	;volatile
  2621                           
  2622                           ;lcd_hd44780_pic16.c: 145: (RB5=1);
  2623  05CA  0020               	movlb	0	; select bank0
  2624  05CB  168D               	bsf	13,5	;volatile
  2625                           
  2626                           ;lcd_hd44780_pic16.c: 146: (RB4=0);
  2627  05CC  120D               	bcf	13,4	;volatile
  2628  05CD                     l1027:	
  2629                           ;lcd_hd44780_pic16.c: 153: do
  2630                           
  2631                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2632                           
  2633                           
  2634                           ;lcd_hd44780_pic16.c: 154: {
  2635                           ;lcd_hd44780_pic16.c: 156: (RB6=1);
  2636  05CD  0020               	movlb	0	; select bank0
  2637  05CE  170D               	bsf	13,6	;volatile
  2638                           
  2639                           ;lcd_hd44780_pic16.c: 161: status=(PORTB>>0);
  2640                           
  2641                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2642  05CF  0020               	movlb	0	; select bank0
  2643  05D0  080D               	movf	13,w	;volatile
  2644  05D1  00F0               	movwf	??_LCDBusyLoop
  2645  05D2  0870               	movf	??_LCDBusyLoop,w
  2646  05D3  00F4               	movwf	LCDBusyLoop@status
  2647                           
  2648                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2649  05D4  0874               	movf	LCDBusyLoop@status,w
  2650  05D5  00F0               	movwf	??_LCDBusyLoop
  2651  05D6  3003               	movlw	3
  2652  05D7                     u455:	
  2653  05D7  35F0               	lslf	??_LCDBusyLoop,f
  2654  05D8  3EFF               	addlw	-1
  2655  05D9  1D03               	skipz
  2656  05DA  2DD7               	goto	u455
  2657  05DB  3570               	lslf	??_LCDBusyLoop,w
  2658  05DC  00F1               	movwf	??_LCDBusyLoop+1
  2659  05DD  0871               	movf	??_LCDBusyLoop+1,w
  2660  05DE  00F4               	movwf	LCDBusyLoop@status
  2661                           
  2662                           ;lcd_hd44780_pic16.c: 167: (RB6=0);
  2663                           
  2664                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2665  05DF  0020               	movlb	0	; select bank0
  2666  05E0  130D               	bcf	13,6	;volatile
  2667                           
  2668                           ;lcd_hd44780_pic16.c: 170: (RB6=1);
  2669                           
  2670                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2671  05E1  0020               	movlb	0	; select bank0
  2672  05E2  170D               	bsf	13,6	;volatile
  2673                           
  2674                           ;lcd_hd44780_pic16.c: 173: temp=(PORTB>>0);
  2675                           
  2676                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2677  05E3  0020               	movlb	0	; select bank0
  2678  05E4  080D               	movf	13,w	;volatile
  2679  05E5  00F0               	movwf	??_LCDBusyLoop
  2680  05E6  0870               	movf	??_LCDBusyLoop,w
  2681  05E7  00F3               	movwf	LCDBusyLoop@temp
  2682                           
  2683                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2684  05E8  300F               	movlw	15
  2685  05E9  00F0               	movwf	??_LCDBusyLoop
  2686  05EA  0870               	movf	??_LCDBusyLoop,w
  2687  05EB  05F3               	andwf	LCDBusyLoop@temp,f
  2688                           
  2689                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2690  05EC  0874               	movf	LCDBusyLoop@status,w
  2691  05ED  0473               	iorwf	LCDBusyLoop@temp,w
  2692  05EE  00F0               	movwf	??_LCDBusyLoop
  2693  05EF  0870               	movf	??_LCDBusyLoop,w
  2694  05F0  00F4               	movwf	LCDBusyLoop@status
  2695                           
  2696                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2697  05F1  0874               	movf	LCDBusyLoop@status,w
  2698  05F2  3980               	andlw	128
  2699  05F3  00F0               	movwf	??_LCDBusyLoop
  2700  05F4  0870               	movf	??_LCDBusyLoop,w
  2701  05F5  00F2               	movwf	LCDBusyLoop@busy
  2702                           
  2703                           ;lcd_hd44780_pic16.c: 182: (RB6=0);
  2704                           
  2705                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(2000000/4000000.0)));
  2706  05F6  0020               	movlb	0	; select bank0
  2707  05F7  130D               	bcf	13,6	;volatile
  2708                           
  2709                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2710                           
  2711                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(2000000/4000000.0)));
  2712  05F8  0872               	movf	LCDBusyLoop@busy,w
  2713  05F9  1D03               	btfss	3,2
  2714  05FA  2DCD               	goto	l1027
  2715                           
  2716                           ;lcd_hd44780_pic16.c: 186: (RB5=0);
  2717  05FB  0020               	movlb	0	; select bank0
  2718  05FC  128D               	bcf	13,5	;volatile
  2719                           
  2720                           ;lcd_hd44780_pic16.c: 189: TRISB&=(~(0x0F<<0));
  2721  05FD  30F0               	movlw	240
  2722  05FE  00F0               	movwf	??_LCDBusyLoop
  2723  05FF  0870               	movf	??_LCDBusyLoop,w
  2724  0600  0021               	movlb	1	; select bank1
  2725  0601  058D               	andwf	13,f	;volatile
  2726  0602  0008               	return
  2727  0603                     __end_of_LCDBusyLoop:	
  2728                           
  2729                           	psect	text14
  2730  04CC                     __ptext14:	
  2731 ;; *************** function _ADC_StartConversion *****************
  2732 ;; Defined at:
  2733 ;;		line 82 in file "mcc_generated_files/adc.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  channel         1    wreg     enum E2313
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  channel         1    1[COMMON] enum E2313
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2747 ;;      Params:         0       0       0       0
  2748 ;;      Locals:         1       0       0       0
  2749 ;;      Temps:          1       0       0       0
  2750 ;;      Totals:         2       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _ADC_StartConversion
  2762  04CC                     _ADC_StartConversion:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _ADC_StartConversion: [wreg+status,2+status,0]
  2766                           ;ADC_StartConversion@channel stored from wreg
  2767  04CC  00F1               	movwf	ADC_StartConversion@channel
  2768                           
  2769                           ;adc.c: 84: ADCON0bits.CHS = channel;
  2770  04CD  0871               	movf	ADC_StartConversion@channel,w
  2771  04CE  00F0               	movwf	??_ADC_StartConversion
  2772  04CF  0DF0               	rlf	??_ADC_StartConversion,f
  2773  04D0  0DF0               	rlf	??_ADC_StartConversion,f
  2774  04D1  0021               	movlb	1	; select bank1
  2775  04D2  081D               	movf	29,w	;volatile
  2776  04D3  0670               	xorwf	??_ADC_StartConversion,w
  2777  04D4  3983               	andlw	-125
  2778  04D5  0670               	xorwf	??_ADC_StartConversion,w
  2779  04D6  009D               	movwf	29	;volatile
  2780                           
  2781                           ;adc.c: 87: ADCON0bits.ADON = 1;
  2782  04D7  141D               	bsf	29,0	;volatile
  2783                           
  2784                           ;adc.c: 90: _delay((unsigned long)((5)*(2000000/4000000.0)));
  2785  04D8  3200               	nop2	;2 cycle nop
  2786                           
  2787                           ;adc.c: 93: ADCON0bits.GO_nDONE = 1;
  2788  04D9  0021               	movlb	1	; select bank1
  2789  04DA  149D               	bsf	29,1	;volatile
  2790  04DB  0008               	return
  2791  04DC                     __end_of_ADC_StartConversion:	
  2792                           
  2793                           	psect	text15
  2794  04BD                     __ptext15:	
  2795 ;; *************** function _ADC_IsConversionDone *****************
  2796 ;; Defined at:
  2797 ;;		line 96 in file "mcc_generated_files/adc.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      unsigned char 
  2804 ;; Registers used:
  2805 ;;		wreg, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2811 ;;      Params:         0       0       0       0
  2812 ;;      Locals:         0       0       0       0
  2813 ;;      Temps:          0       0       0       0
  2814 ;;      Totals:         0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _ADC_IsConversionDone
  2826  04BD                     _ADC_IsConversionDone:	
  2827                           
  2828                           ;adc.c: 98: return (!ADCON0bits.GO_nDONE);
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  2832  04BD  1003               	clrc
  2833  04BE  0021               	movlb	1	; select bank1
  2834  04BF  1C9D               	btfss	29,1	;volatile
  2835  04C0  1403               	setc
  2836  04C1  3000               	movlw	0
  2837  04C2  3D09               	addwfc	9,w
  2838  04C3  0008               	return
  2839  04C4                     __end_of_ADC_IsConversionDone:	
  2840                           
  2841                           	psect	text16
  2842  04AB                     __ptext16:	
  2843 ;; *************** function _ADC_GetConversionResult *****************
  2844 ;; Defined at:
  2845 ;;		line 101 in file "mcc_generated_files/adc.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    0[COMMON] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2859 ;;      Params:         2       0       0       0
  2860 ;;      Locals:         0       0       0       0
  2861 ;;      Temps:          0       0       0       0
  2862 ;;      Totals:         2       0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _ADC_GetConversionResult
  2874  04AB                     _ADC_GetConversionResult:	
  2875                           
  2876                           ;adc.c: 103: return ((ADRESH << 8) + ADRESL);
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _ADC_GetConversionResult: [wreg]
  2880  04AB  0021               	movlb	1	; select bank1
  2881  04AC  081C               	movf	28,w	;volatile
  2882  04AD  00F1               	movwf	?_ADC_GetConversionResult+1
  2883  04AE  081B               	movf	27,w	;volatile
  2884  04AF  00F0               	movwf	?_ADC_GetConversionResult
  2885  04B0  0008               	return
  2886  04B1                     __end_of_ADC_GetConversionResult:	
  2887  007E                     btemp	set	126	;btemp
  2888  007E                     wtemp	set	126
  2889  007E                     wtemp0	set	126
  2890  0080                     wtemp1	set	128
  2891  0082                     wtemp2	set	130
  2892  0084                     wtemp3	set	132
  2893  0086                     wtemp4	set	134
  2894  0088                     wtemp5	set	136
  2895  007F                     wtemp6	set	127
  2896  007E                     ttemp	set	126
  2897  007E                     ttemp0	set	126
  2898  0081                     ttemp1	set	129
  2899  0084                     ttemp2	set	132
  2900  0087                     ttemp3	set	135
  2901  007F                     ttemp4	set	127
  2902  007E                     ltemp	set	126
  2903  007E                     ltemp0	set	126
  2904  0082                     ltemp1	set	130
  2905  0086                     ltemp2	set	134
  2906  0080                     ltemp3	set	128


Data Sizes:
    Strings     37
    Constant    0
    Data        64
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      21
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[4]), STR_3(CODE[11]), STR_2(CODE[7]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _main->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6344
                                             12 BANK0      2     2      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                _ADC_StartConversion
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                  _SYSTEM_Initialize
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1414
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2325
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1186
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1177
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     979
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_StartConversion
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      15       6       26.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      63      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 17 18:07:55 2015

                    ?_LCDBusyLoop 0070                       __CFG_CP$OFF 0000                      ___awdiv@sign 0076  
             ___wmul@multiplicand 0072                               l123 056F                               l124 0571  
                             l255 04FE                               l168 052F                               l169 0518  
                             _RB4 006C                               _RB5 006D                               _RB6 006E  
                    __CFG_CPD$OFF 0000                               u525 0733                               u455 05D7  
                             u545 073D                               u625 069D                               u475 055D  
                             u555 0747                               u565 074F                               u645 06AC  
                             u805 07DB                               u750 076E                               u655 06B3  
                             u835 04FF                               u845 0504                               u875 06EF  
                             u887 0609                      ___awmod@sign 0076                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000           LCDWriteInt@field_length 0022  
                 __end_of_LCDByte 058B                   __end_of_LCDInit 0643                      __CFG_LVP$OFF 0000  
                    ?_LCDWriteInt 0020                       LCDByte@temp 007B                              l1027 05CD  
                            l1131 0728                              l1141 0730                              l1125 071D  
                            l1143 073C                              l1303 058B                              l1153 0757  
                            l1331 07B6                              l1323 0785                              l1157 075F  
                            l1149 074E                              l1181 069A                              l1173 0694  
                            l1333 07BE                              l1325 07AE                              l1271 051A  
                            l1183 06A6                              l1191 06BB                              l1335 07CE  
                            l1273 051C                              l1169 068D                              l1329 07B2  
                            l1195 06C3                              l1187 06B2                              l1371 06D6  
                            l1277 0521                              l1349 04F8                              l1295 05B3  
                            l1299 05B7                              STR_1 0534                              STR_2 054E  
                            STR_3 0543                              STR_4 0555                              _LATA 010C  
                            _LATB 010D                              _WPUA 020C                              _WPUB 020D  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _main 06C8  
              __size_of_LCDGotoXY 0023                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                     __CFG_BOREN$ON 0000  
                            ltemp 007E                              start 0001                              ttemp 007E  
                            wtemp 007E                     __CFG_MCLRE$ON 0000                     __CFG_PLLEN$ON 0000  
  __size_of_OSCILLATOR_Initialize 0006     __end_of_OSCILLATOR_Initialize 04B7                             ?_main 0070  
                 __end_of___awdiv 0764                     __CFG_WDTE$OFF 0000                   __end_of___awmod 06C8  
                    LCDInit@style 0020                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTB 000D                             _TRISA 008C                             _TRISB 008D  
__size_of_ADC_GetConversionResult 0006                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __initialization 07ED                      __end_of_main 0713                            ??_main 002C  
               __end_of_LCDGotoXY 0534        ADC_StartConversion@channel 0071                     LCDByte@isdata 0075  
                       ??_LCDByte 0076                         ??_LCDInit 007C     __size_of_ADC_IsConversionDone 0007  
                          _ADCON0 009D                            _ADCON1 009E                            _ADRESH 009C  
                          _ADRESL 009B                  ___awdiv@dividend 0072                            _ANSELA 018C  
                          _ANSELB 018D                            _OSCCON 0099                    __CFG_PWRTE$OFF 0000  
                  _LCDWriteString 058B                            ___wmul 04F6                         ??___awdiv 0074  
                  __CFG_STVREN$ON 0000                         ??___awmod 0074              __size_of_LCDBusyLoop 003F  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
                    LCDWriteInt@i 002A                      LCDWriteInt@j 0028                 _SYSTEM_Initialize 04A7  
            __size_of_LCDWriteInt 0089           __end_of__initialization 07FE                ?_SYSTEM_Initialize 0070  
          __end_of_LCDWriteString 05C4                         LCDByte@hn 0078                         LCDByte@ln 0079  
    __size_of_ADC_StartConversion 0010                    __pcstackCOMMON 0070                      __pidataBANK1 0643  
             ??_SYSTEM_Initialize 0070           _ADC_GetConversionResult 04AB                    _OPTION_REGbits 0095  
       __end_of_SYSTEM_Initialize 04AB                        __pbssBANK0 002E                   ?_LCDWriteString 007C  
                      __pmaintext 06C8                           ?___wmul 0070                           _APFCON0 011D  
                         _APFCON1 011E           __size_of_ADC_Initialize 0008                           _LCDByte 0559  
                         _LCDInit 0603                           _OSCSTAT 009A                           _OSCTUNE 0098  
                         ___cgram 00A0                           ___awdiv 0713                           ___awmod 0683  
                 __size_of___wmul 001B         ??_ADC_GetConversionResult 0072                           __ptext1 04F6  
                         __ptext2 04A7                           __ptext3 04DC                           __ptext4 04B1  
                         __ptext5 04C4                           __ptext6 058B                           __ptext7 0764  
                         __ptext8 0683                           __ptext9 0713             _OSCILLATOR_Initialize 04B1  
                ___awmod@dividend 0072          ??_PIN_MANAGER_Initialize 0070                         _LCDGotoXY 0511  
      __size_of_SYSTEM_Initialize 0004              end_of_initialization 07FE                           init_ram 04B7  
                         initloop 04B8      __end_of_ADC_IsConversionDone 04C4                      __pstringtext 0534  
               LCDWriteString@msg 007C                  __CFG_FOSC$INTOSC 0000                         _TRISBbits 008D  
                      ?_LCDGotoXY 007C               _ADC_StartConversion 04CC                        LCDInit@__i 0021  
                      LCDGotoXY@x 0020                        LCDGotoXY@y 007C              ?_ADC_StartConversion 0070  
                   ??_LCDBusyLoop 0070                    __end_of___wmul 0511                    _ADC_Initialize 04C4  
          ?_OSCILLATOR_Initialize 0070               start_initialization 07ED   __size_of_PIN_MANAGER_Initialize 001A  
                   ??_LCDWriteInt 007C                  ??_LCDWriteString 0020             ??_ADC_StartConversion 0070  
                        ??___wmul 0074            __end_of_ADC_Initialize 04CC                       __pdataBANK1 00A0  
             __end_of_LCDBusyLoop 0603                          ?_LCDByte 0075                          ?_LCDInit 0070  
                        LCDByte@c 007A                         ___latbits 0000                     __pcstackBANK0 0020  
            _ADC_IsConversionDone 04BD                       ??_LCDGotoXY 007D                  LCDWriteInt@F2357 002E  
             __end_of_LCDWriteInt 07ED            _PIN_MANAGER_Initialize 04DC                          ?___awdiv 0070  
                        ?___awmod 0070                   ?_ADC_Initialize 0070             ?_ADC_IsConversionDone 0070  
                 LCDBusyLoop@busy 0072                   LCDBusyLoop@temp 0073                          _LM35Conv 0033  
                  ___wmul@product 0074                       _LCDBusyLoop 05C4                  LCDWriteString@cc 0021  
                      _ADCON0bits 009D                 ___wmul@multiplier 0070                  __size_of_LCDByte 0032  
                __size_of_LCDInit 0040                       _LCDWriteInt 0764          ?_ADC_GetConversionResult 0070  
         ??_OSCILLATOR_Initialize 0070                  __size_of___awdiv 0051                  __size_of___awmod 0045  
               LCDBusyLoop@status 0074            ??_ADC_IsConversionDone 0070                          __ptext10 0603  
                        __ptext11 0511                          __ptext12 0559                          __ptext13 05C4  
                        __ptext14 04CC                          __ptext15 04BD                          __ptext16 04AB  
                   __size_of_main 004B       __end_of_ADC_StartConversion 04DC                    LCDWriteInt@val 0020  
                  LCDWriteInt@str 0023           ?_PIN_MANAGER_Initialize 0070   __end_of_ADC_GetConversionResult 04B1  
               __CFG_CLKOUTEN$OFF 0000                  ??_ADC_Initialize 0070    __end_of_PIN_MANAGER_Initialize 04F6  
         __size_of_LCDWriteString 0039  
