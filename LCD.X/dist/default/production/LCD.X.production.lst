

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Nov 28 17:44:12 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1826
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020D                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  0212                     	;# 
   109  0212                     	;# 
   110  0213                     	;# 
   111  0213                     	;# 
   112  0214                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0216                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0217                     	;# 
   121  0291                     	;# 
   122  0291                     	;# 
   123  0292                     	;# 
   124  0293                     	;# 
   125  0294                     	;# 
   126  0295                     	;# 
   127  0295                     	;# 
   128  0296                     	;# 
   129  0394                     	;# 
   130  0395                     	;# 
   131  0396                     	;# 
   132  039A                     	;# 
   133  039C                     	;# 
   134  039D                     	;# 
   135  039E                     	;# 
   136  039F                     	;# 
   137  0FE4                     	;# 
   138  0FE5                     	;# 
   139  0FE6                     	;# 
   140  0FE7                     	;# 
   141  0FE8                     	;# 
   142  0FE9                     	;# 
   143  0FEA                     	;# 
   144  0FEB                     	;# 
   145  0FED                     	;# 
   146  0FEE                     	;# 
   147  0FEF                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  0111                     	;# 
   193  0112                     	;# 
   194  0113                     	;# 
   195  0114                     	;# 
   196  0115                     	;# 
   197  0116                     	;# 
   198  0117                     	;# 
   199  0118                     	;# 
   200  0119                     	;# 
   201  011A                     	;# 
   202  011B                     	;# 
   203  011D                     	;# 
   204  011E                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0191                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0193                     	;# 
   211  0193                     	;# 
   212  0193                     	;# 
   213  0194                     	;# 
   214  0195                     	;# 
   215  0196                     	;# 
   216  0199                     	;# 
   217  019A                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019C                     	;# 
   223  019C                     	;# 
   224  019D                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  020C                     	;# 
   228  020D                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  039A                     	;# 
   256  039C                     	;# 
   257  039D                     	;# 
   258  039E                     	;# 
   259  039F                     	;# 
   260  0FE4                     	;# 
   261  0FE5                     	;# 
   262  0FE6                     	;# 
   263  0FE7                     	;# 
   264  0FE8                     	;# 
   265  0FE9                     	;# 
   266  0FEA                     	;# 
   267  0FEB                     	;# 
   268  0FED                     	;# 
   269  0FEE                     	;# 
   270  0FEF                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0008                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  0111                     	;# 
   316  0112                     	;# 
   317  0113                     	;# 
   318  0114                     	;# 
   319  0115                     	;# 
   320  0116                     	;# 
   321  0117                     	;# 
   322  0118                     	;# 
   323  0119                     	;# 
   324  011A                     	;# 
   325  011B                     	;# 
   326  011D                     	;# 
   327  011E                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0194                     	;# 
   337  0195                     	;# 
   338  0196                     	;# 
   339  0199                     	;# 
   340  019A                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019C                     	;# 
   347  019D                     	;# 
   348  019E                     	;# 
   349  019F                     	;# 
   350  020C                     	;# 
   351  020D                     	;# 
   352  0211                     	;# 
   353  0211                     	;# 
   354  0212                     	;# 
   355  0212                     	;# 
   356  0213                     	;# 
   357  0213                     	;# 
   358  0214                     	;# 
   359  0214                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0216                     	;# 
   365  0217                     	;# 
   366  0217                     	;# 
   367  0291                     	;# 
   368  0291                     	;# 
   369  0292                     	;# 
   370  0293                     	;# 
   371  0294                     	;# 
   372  0295                     	;# 
   373  0295                     	;# 
   374  0296                     	;# 
   375  0394                     	;# 
   376  0395                     	;# 
   377  0396                     	;# 
   378  039A                     	;# 
   379  039C                     	;# 
   380  039D                     	;# 
   381  039E                     	;# 
   382  039F                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  0111                     	;# 
   439  0112                     	;# 
   440  0113                     	;# 
   441  0114                     	;# 
   442  0115                     	;# 
   443  0116                     	;# 
   444  0117                     	;# 
   445  0118                     	;# 
   446  0119                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011D                     	;# 
   450  011E                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0291                     	;# 
   491  0291                     	;# 
   492  0292                     	;# 
   493  0293                     	;# 
   494  0294                     	;# 
   495  0295                     	;# 
   496  0295                     	;# 
   497  0296                     	;# 
   498  0394                     	;# 
   499  0395                     	;# 
   500  0396                     	;# 
   501  039A                     	;# 
   502  039C                     	;# 
   503  039D                     	;# 
   504  039E                     	;# 
   505  039F                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517                           
   518                           	psect	idataBANK1
   519  060E                     __pidataBANK1:	
   520                           
   521                           ;initializer for ___cgram
   522  060E  340C               	retlw	12
   523  060F  3412               	retlw	18
   524  0610  3412               	retlw	18
   525  0611  340C               	retlw	12
   526  0612  3400               	retlw	0
   527  0613  3400               	retlw	0
   528  0614  3400               	retlw	0
   529  0615  3400               	retlw	0
   530  0616  3400               	retlw	0
   531  0617  3404               	retlw	4
   532  0618  340E               	retlw	14
   533  0619  341F               	retlw	31
   534  061A  340E               	retlw	14
   535  061B  3404               	retlw	4
   536  061C  3400               	retlw	0
   537  061D  3400               	retlw	0
   538  061E  3404               	retlw	4
   539  061F  3404               	retlw	4
   540  0620  3404               	retlw	4
   541  0621  3404               	retlw	4
   542  0622  341F               	retlw	31
   543  0623  340E               	retlw	14
   544  0624  3404               	retlw	4
   545  0625  3400               	retlw	0
   546  0626  340A               	retlw	10
   547  0627  3415               	retlw	21
   548  0628  3411               	retlw	17
   549  0629  340A               	retlw	10
   550  062A  3404               	retlw	4
   551  062B  3400               	retlw	0
   552  062C  3400               	retlw	0
   553  062D  3400               	retlw	0
   554  062E  340A               	retlw	10
   555  062F  341F               	retlw	31
   556  0630  341F               	retlw	31
   557  0631  340E               	retlw	14
   558  0632  3404               	retlw	4
   559  0633  3400               	retlw	0
   560  0634  3400               	retlw	0
   561  0635  3400               	retlw	0
   562  0636  3400               	retlw	0
   563  0637  3400               	retlw	0
   564  0638  3400               	retlw	0
   565  0639  3400               	retlw	0
   566  063A  3400               	retlw	0
   567  063B  3400               	retlw	0
   568  063C  3400               	retlw	0
   569  063D  3400               	retlw	0
   570  063E  3400               	retlw	0
   571  063F  3400               	retlw	0
   572  0640  3400               	retlw	0
   573  0641  3400               	retlw	0
   574  0642  3400               	retlw	0
   575  0643  3400               	retlw	0
   576  0644  3400               	retlw	0
   577  0645  3400               	retlw	0
   578  0646  3400               	retlw	0
   579  0647  3400               	retlw	0
   580  0648  3400               	retlw	0
   581  0649  3400               	retlw	0
   582  064A  3400               	retlw	0
   583  064B  3400               	retlw	0
   584  064C  3400               	retlw	0
   585  064D  3400               	retlw	0
   586  000D                     _PORTB	set	13
   587  006C                     _RB4	set	108
   588  006D                     _RB5	set	109
   589  006E                     _RB6	set	110
   590  0095                     _OPTION_REGbits	set	149
   591  0099                     _OSCCON	set	153
   592  009A                     _OSCSTAT	set	154
   593  0098                     _OSCTUNE	set	152
   594  008C                     _TRISA	set	140
   595  008D                     _TRISB	set	141
   596  008D                     _TRISBbits	set	141
   597  011D                     _APFCON0	set	285
   598  011E                     _APFCON1	set	286
   599  010C                     _LATA	set	268
   600  010D                     _LATB	set	269
   601  018C                     _ANSELA	set	396
   602  018D                     _ANSELB	set	397
   603  020C                     _WPUA	set	524
   604  020D                     _WPUB	set	525
   605                           
   606                           	psect	stringtext
   607  0539                     __pstringtext:	
   608  0539                     STR_2:	
   609  0539  3456               	retlw	86	;'V'
   610  053A  3461               	retlw	97	;'a'
   611  053B  3472               	retlw	114	;'r'
   612  053C  3469               	retlw	105	;'i'
   613  053D  3461               	retlw	97	;'a'
   614  053E  3462               	retlw	98	;'b'
   615  053F  3469               	retlw	105	;'i'
   616  0540  346C               	retlw	108	;'l'
   617  0541  3465               	retlw	101	;'e'
   618  0542  3420               	retlw	32	;' '
   619  0543  3469               	retlw	105	;'i'
   620  0544  346E               	retlw	110	;'n'
   621  0545  3474               	retlw	116	;'t'
   622  0546  343A               	retlw	58	;':'
   623  0547  3420               	retlw	32	;' '
   624  0548  3400               	retlw	0
   625  0549                     STR_1:	
   626  0549  3450               	retlw	80	;'P'
   627  054A  3472               	retlw	114	;'r'
   628  054B  346F               	retlw	111	;'o'
   629  054C  3476               	retlw	118	;'v'
   630  054D  3461               	retlw	97	;'a'
   631  054E  3420               	retlw	32	;' '
   632  054F  344C               	retlw	76	;'L'
   633  0550  3443               	retlw	67	;'C'
   634  0551  3444               	retlw	68	;'D'
   635  0552  3400               	retlw	0
   636                           
   637                           ; #config settings
   638  0000                     
   639                           	psect	cinit
   640  07EF                     start_initialization:	
   641  07EF                     __initialization:	
   642                           
   643                           ; Clear objects allocated to BANK0
   644  07EF  01AE               	clrf	__pbssBANK0& (0+127)
   645  07F0  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   646  07F1  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   647  07F2  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   648  07F3  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   649                           
   650                           ; Initialize objects allocated to BANK1
   651  07F4  300E               	movlw	low __pidataBANK1
   652  07F5  0084               	movwf	4
   653  07F6  3086               	movlw	(high __pidataBANK1)| (0+128)
   654  07F7  0085               	movwf	5
   655  07F8  30A0               	movlw	low __pdataBANK1
   656  07F9  0086               	movwf	6
   657  07FA  3000               	movlw	high __pdataBANK1
   658  07FB  0087               	movwf	7
   659  07FC  3040               	movlw	64
   660  07FD  251B               	fcall	init_ram
   661  07FE                     end_of_initialization:	
   662                           ;End of C runtime variable initialization code
   663                           
   664  07FE                     __end_of__initialization:	
   665  07FE  0020               	movlb	0
   666  07FF  2D76               	ljmp	_main	;jump to C main() function
   667                           
   668                           	psect	bssBANK0
   669  002E                     __pbssBANK0:	
   670  002E                     LCDWriteInt@F2357:	
   671  002E                     	ds	5
   672                           
   673                           	psect	dataBANK1
   674  00A0                     __pdataBANK1:	
   675  00A0                     ___cgram:	
   676  00A0                     	ds	64
   677                           
   678                           	psect	inittext
   679  051B                     init_ram:	
   680  051B  00FE               	movwf	126
   681  051C                     initloop:	
   682  051C  0012               	moviw fsr0++
   683  051D  001E               	movwi fsr1++
   684  051E  0BFE               	decfsz	126,f
   685  051F  2D1C               	goto	initloop
   686  0520  3400               	retlw	0
   687                           
   688                           	psect	cstackCOMMON
   689  0070                     __pcstackCOMMON:	
   690  0070                     ?_OSCILLATOR_Initialize:	
   691  0070                     ??_OSCILLATOR_Initialize:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_LCDInit:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_LCDBusyLoop:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ??_LCDBusyLoop:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_PIN_MANAGER_Initialize:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ??_PIN_MANAGER_Initialize:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_SYSTEM_Initialize:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ??_SYSTEM_Initialize:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_main:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?___awdiv:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?___awmod:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ___awdiv@divisor:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ___awmod@divisor:	
   728                           ; 2 bytes @ 0x0
   729                           
   730                           
   731                           ; 2 bytes @ 0x0
   732  0070                     	ds	2
   733  0072                     LCDBusyLoop@busy:	
   734  0072                     ___awdiv@dividend:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     ___awmod@dividend:	
   738                           ; 2 bytes @ 0x2
   739                           
   740                           
   741                           ; 2 bytes @ 0x2
   742  0072                     	ds	1
   743  0073                     LCDBusyLoop@temp:	
   744                           
   745                           ; 1 bytes @ 0x3
   746  0073                     	ds	1
   747  0074                     ??___awdiv:	
   748  0074                     ??___awmod:	
   749                           ; 0 bytes @ 0x4
   750                           
   751  0074                     LCDBusyLoop@status:	
   752                           ; 0 bytes @ 0x4
   753                           
   754                           
   755                           ; 1 bytes @ 0x4
   756  0074                     	ds	1
   757  0075                     ?_LCDByte:	
   758  0075                     LCDByte@isdata:	
   759                           ; 0 bytes @ 0x5
   760                           
   761  0075                     ___awdiv@counter:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ___awmod@counter:	
   765                           ; 1 bytes @ 0x5
   766                           
   767                           
   768                           ; 1 bytes @ 0x5
   769  0075                     	ds	1
   770  0076                     ??_LCDByte:	
   771  0076                     ___awdiv@sign:	
   772                           ; 0 bytes @ 0x6
   773                           
   774  0076                     ___awmod@sign:	
   775                           ; 1 bytes @ 0x6
   776                           
   777                           
   778                           ; 1 bytes @ 0x6
   779  0076                     	ds	1
   780  0077                     ___awdiv@quotient:	
   781                           
   782                           ; 2 bytes @ 0x7
   783  0077                     	ds	1
   784  0078                     LCDByte@hn:	
   785                           
   786                           ; 1 bytes @ 0x8
   787  0078                     	ds	1
   788  0079                     LCDByte@ln:	
   789                           
   790                           ; 1 bytes @ 0x9
   791  0079                     	ds	1
   792  007A                     LCDByte@c:	
   793                           
   794                           ; 1 bytes @ 0xA
   795  007A                     	ds	1
   796  007B                     LCDByte@temp:	
   797                           
   798                           ; 1 bytes @ 0xB
   799  007B                     	ds	1
   800  007C                     ??_LCDInit:	
   801  007C                     ?_LCDGotoXY:	
   802                           ; 0 bytes @ 0xC
   803                           
   804  007C                     ?_LCDWriteString:	
   805                           ; 0 bytes @ 0xC
   806                           
   807  007C                     ??_LCDWriteInt:	
   808                           ; 0 bytes @ 0xC
   809                           
   810  007C                     LCDGotoXY@y:	
   811                           ; 0 bytes @ 0xC
   812                           
   813  007C                     LCDWriteString@msg:	
   814                           ; 1 bytes @ 0xC
   815                           
   816                           
   817                           ; 2 bytes @ 0xC
   818  007C                     	ds	1
   819  007D                     ??_LCDGotoXY:	
   820                           
   821                           ; 0 bytes @ 0xD
   822  007D                     	ds	1
   823                           
   824                           	psect	cstackBANK0
   825  0020                     __pcstackBANK0:	
   826  0020                     ??_LCDWriteString:	
   827  0020                     ?_LCDWriteInt:	
   828                           ; 0 bytes @ 0x0
   829                           
   830  0020                     LCDInit@style:	
   831                           ; 0 bytes @ 0x0
   832                           
   833  0020                     LCDGotoXY@x:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     LCDWriteInt@val:	
   837                           ; 1 bytes @ 0x0
   838                           
   839                           
   840                           ; 2 bytes @ 0x0
   841  0020                     	ds	1
   842  0021                     LCDInit@__i:	
   843  0021                     LCDWriteString@cc:	
   844                           ; 1 bytes @ 0x1
   845                           
   846                           
   847                           ; 1 bytes @ 0x1
   848  0021                     	ds	1
   849  0022                     LCDWriteInt@field_length:	
   850                           
   851                           ; 1 bytes @ 0x2
   852  0022                     	ds	1
   853  0023                     LCDWriteInt@str:	
   854                           
   855                           ; 5 bytes @ 0x3
   856  0023                     	ds	5
   857  0028                     LCDWriteInt@j:	
   858                           
   859                           ; 2 bytes @ 0x8
   860  0028                     	ds	2
   861  002A                     LCDWriteInt@i:	
   862                           
   863                           ; 2 bytes @ 0xA
   864  002A                     	ds	2
   865  002C                     ??_main:	
   866                           
   867                           ; 0 bytes @ 0xC
   868  002C                     	ds	2
   869                           
   870                           	psect	maintext
   871  0576                     __pmaintext:	
   872 ;;
   873 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   874 ;;
   875 ;; *************** function _main *****************
   876 ;; Defined at:
   877 ;;		line 53 in file "main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : B1F/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   891 ;;      Params:         0       0       0       0
   892 ;;      Locals:         0       0       0       0
   893 ;;      Temps:          0       2       0       0
   894 ;;      Totals:         0       2       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels required when called:    3
   897 ;; This function calls:
   898 ;;		_LCDGotoXY
   899 ;;		_LCDInit
   900 ;;		_LCDWriteInt
   901 ;;		_LCDWriteString
   902 ;;		_SYSTEM_Initialize
   903 ;; This function is called by:
   904 ;;		Startup code after reset
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _main
   910  0576                     _main:	
   911                           
   912                           ;main.c: 55: SYSTEM_Initialize();
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   916  0576  2512               	fcall	_SYSTEM_Initialize
   917                           
   918                           ;main.c: 72: LCDInit(0B00000000);
   919  0577  3000               	movlw	0
   920  0578  268F               	fcall	_LCDInit
   921                           
   922                           ;main.c: 73: LCDGotoXY(0,0);
   923  0579  01FC               	clrf	LCDGotoXY@y
   924  057A  3000               	movlw	0
   925  057B  2553               	fcall	_LCDGotoXY
   926                           
   927                           ;main.c: 74: LCDWriteString("Prova LCD");
   928  057C  3049               	movlw	low (STR_1| (0+32768))
   929  057D  00FC               	movwf	LCDWriteString@msg
   930  057E  3085               	movlw	high (STR_1| (0+32768))
   931  057F  00FD               	movwf	LCDWriteString@msg+1
   932  0580  25D5               	fcall	_LCDWriteString
   933  0581                     l1204:	
   934                           ;main.c: 76: while (1) {
   935                           
   936                           
   937                           ;main.c: 78: LCDGotoXY(0,1);
   938  0581  01FC               	clrf	LCDGotoXY@y
   939  0582  0AFC               	incf	LCDGotoXY@y,f
   940  0583  3000               	movlw	0
   941  0584  2553               	fcall	_LCDGotoXY
   942                           
   943                           ;main.c: 79: LCDWriteString("Variabile int: ");
   944  0585  3039               	movlw	low (STR_2| (0+32768))
   945  0586  00FC               	movwf	LCDWriteString@msg
   946  0587  3085               	movlw	high (STR_2| (0+32768))
   947  0588  00FD               	movwf	LCDWriteString@msg+1
   948  0589  25D5               	fcall	_LCDWriteString
   949                           
   950                           ;main.c: 80: LCDWriteInt(0x22, sizeof(0x22));
   951  058A  3022               	movlw	34
   952  058B  0020               	movlb	0	; select bank0
   953  058C  00A0               	movwf	LCDWriteInt@val
   954  058D  3000               	movlw	0
   955  058E  00A1               	movwf	LCDWriteInt@val+1
   956  058F  3002               	movlw	2
   957  0590  00AC               	movwf	??_main
   958  0591  082C               	movf	??_main,w
   959  0592  00A2               	movwf	LCDWriteInt@field_length
   960  0593  2766               	fcall	_LCDWriteInt
   961                           
   962                           ;main.c: 82: _delay((unsigned long)((100)*(4000000/4000.0)));
   963  0594  3082               	movlw	130
   964  0595  0020               	movlb	0	; select bank0
   965  0596  00AD               	movwf	??_main+1
   966  0597  30DD               	movlw	221
   967  0598  00AC               	movwf	??_main
   968  0599                     u757:	
   969  0599  0BAC               	decfsz	??_main,f
   970  059A  2D99               	goto	u757
   971  059B  0BAD               	decfsz	??_main+1,f
   972  059C  2D99               	goto	u757
   973  059D  3200               	nop2
   974  059E  2D81               	goto	l1204
   975  059F                     __end_of_main:	
   976                           
   977                           	psect	text1
   978  0512                     __ptext1:	
   979 ;; *************** function _SYSTEM_Initialize *****************
   980 ;; Defined at:
   981 ;;		line 70 in file "mcc_generated_files/mcc.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;		None               void
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   995 ;;      Params:         0       0       0       0
   996 ;;      Locals:         0       0       0       0
   997 ;;      Temps:          0       0       0       0
   998 ;;      Totals:         0       0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		_OSCILLATOR_Initialize
  1004 ;;		_PIN_MANAGER_Initialize
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _SYSTEM_Initialize
  1012  0512                     _SYSTEM_Initialize:	
  1013                           
  1014                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1018  0512  2515               	fcall	_OSCILLATOR_Initialize
  1019                           
  1020                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1021  0513  2521               	fcall	_PIN_MANAGER_Initialize
  1022  0514  0008               	return
  1023  0515                     __end_of_SYSTEM_Initialize:	
  1024                           
  1025                           	psect	text2
  1026  0521                     __ptext2:	
  1027 ;; *************** function _PIN_MANAGER_Initialize *****************
  1028 ;; Defined at:
  1029 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;		None               void
  1036 ;; Registers used:
  1037 ;;		wreg, status,2
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1043 ;;      Params:         0       0       0       0
  1044 ;;      Locals:         0       0       0       0
  1045 ;;      Temps:          0       0       0       0
  1046 ;;      Totals:         0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_SYSTEM_Initialize
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _PIN_MANAGER_Initialize
  1058  0521                     _PIN_MANAGER_Initialize:	
  1059                           
  1060                           ;pin_manager.c: 51: LATA = 0x00;
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1064  0521  0022               	movlb	2	; select bank2
  1065  0522  018C               	clrf	12	;volatile
  1066                           
  1067                           ;pin_manager.c: 52: TRISA = 0xFF;
  1068  0523  30FF               	movlw	255
  1069  0524  0021               	movlb	1	; select bank1
  1070  0525  008C               	movwf	12	;volatile
  1071                           
  1072                           ;pin_manager.c: 53: ANSELA = 0x1F;
  1073  0526  301F               	movlw	31
  1074  0527  0023               	movlb	3	; select bank3
  1075  0528  008C               	movwf	12	;volatile
  1076                           
  1077                           ;pin_manager.c: 54: WPUA = 0x00;
  1078  0529  0024               	movlb	4	; select bank4
  1079  052A  018C               	clrf	12	;volatile
  1080                           
  1081                           ;pin_manager.c: 56: LATB = 0x00;
  1082  052B  0022               	movlb	2	; select bank2
  1083  052C  018D               	clrf	13	;volatile
  1084                           
  1085                           ;pin_manager.c: 57: TRISB = 0x00;
  1086  052D  0021               	movlb	1	; select bank1
  1087  052E  018D               	clrf	13	;volatile
  1088                           
  1089                           ;pin_manager.c: 58: ANSELB = 0x00;
  1090  052F  0023               	movlb	3	; select bank3
  1091  0530  018D               	clrf	13	;volatile
  1092                           
  1093                           ;pin_manager.c: 59: WPUB = 0x00;
  1094  0531  0024               	movlb	4	; select bank4
  1095  0532  018D               	clrf	13	;volatile
  1096                           
  1097                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  1098  0533  0021               	movlb	1	; select bank1
  1099  0534  1795               	bsf	21,7	;volatile
  1100                           
  1101                           ;pin_manager.c: 63: APFCON0 = 0x00;
  1102  0535  0022               	movlb	2	; select bank2
  1103  0536  019D               	clrf	29	;volatile
  1104                           
  1105                           ;pin_manager.c: 65: APFCON1 = 0x00;
  1106  0537  019E               	clrf	30	;volatile
  1107  0538  0008               	return
  1108  0539                     __end_of_PIN_MANAGER_Initialize:	
  1109                           
  1110                           	psect	text3
  1111  0515                     __ptext3:	
  1112 ;; *************** function _OSCILLATOR_Initialize *****************
  1113 ;; Defined at:
  1114 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, status,2
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1128 ;;      Params:         0       0       0       0
  1129 ;;      Locals:         0       0       0       0
  1130 ;;      Temps:          0       0       0       0
  1131 ;;      Totals:         0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_SYSTEM_Initialize
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _OSCILLATOR_Initialize
  1143  0515                     _OSCILLATOR_Initialize:	
  1144                           
  1145                           ;mcc.c: 77: OSCCON = 0x6A;
  1146                           
  1147                           ;incstack = 0
  1148                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1149  0515  306A               	movlw	106
  1150  0516  0021               	movlb	1	; select bank1
  1151  0517  0099               	movwf	25	;volatile
  1152                           
  1153                           ;mcc.c: 79: OSCSTAT = 0x00;
  1154  0518  019A               	clrf	26	;volatile
  1155                           
  1156                           ;mcc.c: 81: OSCTUNE = 0x00;
  1157  0519  0198               	clrf	24	;volatile
  1158  051A  0008               	return
  1159  051B                     __end_of_OSCILLATOR_Initialize:	
  1160                           
  1161                           	psect	text4
  1162  05D5                     __ptext4:	
  1163 ;; *************** function _LCDWriteString *****************
  1164 ;; Defined at:
  1165 ;;		line 251 in file "lcd_hd44780_pic16.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  msg             2   12[COMMON] PTR const unsigned char 
  1168 ;;		 -> STR_2(16), STR_1(10), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  cc              1    1[BANK0 ] char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1180 ;;      Params:         2       0       0       0
  1181 ;;      Locals:         0       1       0       0
  1182 ;;      Temps:          0       1       0       0
  1183 ;;      Totals:         2       2       0       0
  1184 ;;Total ram usage:        4 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    2
  1187 ;; This function calls:
  1188 ;;		_LCDByte
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _LCDWriteString
  1196  05D5                     _LCDWriteString:	
  1197  05D5                     l1152:	
  1198                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1202                           
  1203  05D5  087C               	movf	LCDWriteString@msg,w
  1204  05D6  0084               	movwf	4
  1205  05D7  087D               	movf	LCDWriteString@msg+1,w
  1206  05D8  0085               	movwf	5
  1207  05D9  0012               	moviw fsr0++
  1208  05DA  1903               	btfsc	3,2
  1209  05DB  0008               	return
  1210                           
  1211                           ;lcd_hd44780_pic16.c: 282: {
  1212                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  1213  05DC  087C               	movf	LCDWriteString@msg,w
  1214  05DD  0084               	movwf	4
  1215  05DE  087D               	movf	LCDWriteString@msg+1,w
  1216  05DF  0085               	movwf	5
  1217  05E0  0012               	moviw fsr0++
  1218  05E1  3A25               	xorlw	37
  1219  05E2  1D03               	btfss	3,2
  1220  05E3  2E01               	goto	l1148
  1221                           
  1222                           ;lcd_hd44780_pic16.c: 285: {
  1223                           ;lcd_hd44780_pic16.c: 286: msg++;
  1224  05E4  3001               	movlw	1
  1225  05E5  07FC               	addwf	LCDWriteString@msg,f
  1226  05E6  3000               	movlw	0
  1227  05E7  3DFD               	addwfc	LCDWriteString@msg+1,f
  1228                           
  1229                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  1230  05E8  087C               	movf	LCDWriteString@msg,w
  1231  05E9  0084               	movwf	4
  1232  05EA  087D               	movf	LCDWriteString@msg+1,w
  1233  05EB  0085               	movwf	5
  1234  05EC  0800               	movf	0,w	;code access
  1235  05ED  3ED0               	addlw	-48
  1236  05EE  0020               	movlb	0	; select bank0
  1237  05EF  00A0               	movwf	??_LCDWriteString
  1238  05F0  0820               	movf	??_LCDWriteString,w
  1239  05F1  00A1               	movwf	LCDWriteString@cc
  1240                           
  1241                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  1242  05F2  1BA1               	btfsc	LCDWriteString@cc,7
  1243  05F3  2DFD               	goto	l1144
  1244  05F4  0821               	movf	LCDWriteString@cc,w
  1245  05F5  3A80               	xorlw	128
  1246  05F6  3E78               	addlw	-136
  1247  05F7  1803               	skipnc
  1248  05F8  2DFD               	goto	l1144
  1249                           
  1250                           ;lcd_hd44780_pic16.c: 290: {
  1251                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  1252  05F9  01F5               	clrf	LCDByte@isdata
  1253  05FA  0AF5               	incf	LCDByte@isdata,f
  1254  05FB  0821               	movf	LCDWriteString@cc,w
  1255  05FC  2E08               	goto	L1
  1256  05FD                     l1144:	
  1257                           ;lcd_hd44780_pic16.c: 292: }
  1258                           
  1259                           
  1260                           ;lcd_hd44780_pic16.c: 293: else
  1261                           ;lcd_hd44780_pic16.c: 294: {
  1262                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  1263  05FD  01F5               	clrf	LCDByte@isdata
  1264  05FE  0AF5               	incf	LCDByte@isdata,f
  1265  05FF  3025               	movlw	37
  1266  0600  259F               	fcall	_LCDByte
  1267  0601                     l1148:	
  1268                           ;lcd_hd44780_pic16.c: 297: }
  1269                           ;lcd_hd44780_pic16.c: 298: }
  1270                           
  1271                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  1272                           
  1273                           
  1274                           ;lcd_hd44780_pic16.c: 299: else
  1275                           ;lcd_hd44780_pic16.c: 300: {
  1276                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  1277  0601  01F5               	clrf	LCDByte@isdata
  1278  0602  0AF5               	incf	LCDByte@isdata,f
  1279  0603  087C               	movf	LCDWriteString@msg,w
  1280  0604  0084               	movwf	4
  1281  0605  087D               	movf	LCDWriteString@msg+1,w
  1282  0606  0085               	movwf	5
  1283  0607  0800               	movf	0,w	;code access
  1284  0608                     L1:	
  1285  0608  259F               	fcall	_LCDByte
  1286                           
  1287                           ;lcd_hd44780_pic16.c: 302: }
  1288                           ;lcd_hd44780_pic16.c: 303: msg++;
  1289  0609  3001               	movlw	1
  1290  060A  07FC               	addwf	LCDWriteString@msg,f
  1291  060B  3000               	movlw	0
  1292  060C  3DFD               	addwfc	LCDWriteString@msg+1,f
  1293  060D  2DD5               	goto	l1152
  1294  060E                     __end_of_LCDWriteString:	
  1295                           
  1296                           	psect	text5
  1297  0766                     __ptext5:	
  1298 ;; *************** function _LCDWriteInt *****************
  1299 ;; Defined at:
  1300 ;;		line 307 in file "lcd_hd44780_pic16.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  val             2    0[BANK0 ] int 
  1303 ;;  field_length    1    2[BANK0 ] char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  str             5    3[BANK0 ] unsigned char [5]
  1306 ;;  i               2   10[BANK0 ] int 
  1307 ;;  j               2    8[BANK0 ] int 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;		None               void
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1317 ;;      Params:         0       3       0       0
  1318 ;;      Locals:         0       9       0       0
  1319 ;;      Temps:          2       0       0       0
  1320 ;;      Totals:         2      12       0       0
  1321 ;;Total ram usage:       14 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    2
  1324 ;; This function calls:
  1325 ;;		_LCDByte
  1326 ;;		___awdiv
  1327 ;;		___awmod
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _LCDWriteInt
  1335  0766                     _LCDWriteInt:	
  1336                           
  1337                           ;lcd_hd44780_pic16.c: 320: char str[5]={0,0,0,0,0};
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1341  0766  302E               	movlw	low LCDWriteInt@F2357
  1342  0767  0086               	movwf	6
  1343  0768  3000               	movlw	high LCDWriteInt@F2357
  1344  0769  0087               	movwf	7
  1345  076A  3023               	movlw	low LCDWriteInt@str
  1346  076B  0084               	movwf	4
  1347  076C  3000               	movlw	high LCDWriteInt@str
  1348  076D  0085               	movwf	5
  1349  076E  3005               	movlw	5
  1350  076F  00FC               	movwf	??_LCDWriteInt
  1351  0770                     u680:	
  1352  0770  0016               	moviw fsr1++
  1353  0771  001A               	movwi fsr0++
  1354  0772  0BFC               	decfsz	??_LCDWriteInt,f
  1355  0773  2F70               	goto	u680
  1356                           
  1357                           ;lcd_hd44780_pic16.c: 321: int i=4,j=0;
  1358  0774  3004               	movlw	4
  1359  0775  0020               	movlb	0	; select bank0
  1360  0776  00AA               	movwf	LCDWriteInt@i
  1361  0777  3000               	movlw	0
  1362  0778  00AB               	movwf	LCDWriteInt@i+1
  1363  0779  01A8               	clrf	LCDWriteInt@j
  1364  077A  01A9               	clrf	LCDWriteInt@j+1
  1365                           
  1366                           ;lcd_hd44780_pic16.c: 324: if(val<0)
  1367  077B  1FA1               	btfss	LCDWriteInt@val+1,7
  1368  077C  2F87               	goto	l1172
  1369                           
  1370                           ;lcd_hd44780_pic16.c: 325: {
  1371                           ;lcd_hd44780_pic16.c: 326: (LCDByte('-',1));
  1372  077D  01F5               	clrf	LCDByte@isdata
  1373  077E  0AF5               	incf	LCDByte@isdata,f
  1374  077F  302D               	movlw	45
  1375  0780  259F               	fcall	_LCDByte
  1376                           
  1377                           ;lcd_hd44780_pic16.c: 327: val=val*-1;
  1378  0781  0020               	movlb	0	; select bank0
  1379  0782  09A0               	comf	LCDWriteInt@val,f
  1380  0783  09A1               	comf	LCDWriteInt@val+1,f
  1381  0784  0AA0               	incf	LCDWriteInt@val,f
  1382  0785  1903               	skipnz
  1383  0786  0AA1               	incf	LCDWriteInt@val+1,f
  1384  0787                     l1172:	
  1385                           ;lcd_hd44780_pic16.c: 328: }
  1386                           ;lcd_hd44780_pic16.c: 330: while(val)
  1387                           
  1388  0787  0820               	movf	LCDWriteInt@val,w
  1389  0788  0421               	iorwf	LCDWriteInt@val+1,w
  1390  0789  1903               	btfsc	3,2
  1391  078A  2FB0               	goto	l1174
  1392                           
  1393                           ;lcd_hd44780_pic16.c: 331: {
  1394                           ;lcd_hd44780_pic16.c: 332: str[i]=val%10;
  1395  078B  300A               	movlw	10
  1396  078C  00F0               	movwf	___awmod@divisor
  1397  078D  3000               	movlw	0
  1398  078E  00F1               	movwf	___awmod@divisor+1
  1399  078F  0821               	movf	LCDWriteInt@val+1,w
  1400  0790  00F3               	movwf	___awmod@dividend+1
  1401  0791  0820               	movf	LCDWriteInt@val,w
  1402  0792  00F2               	movwf	___awmod@dividend
  1403  0793  26D0               	fcall	___awmod
  1404  0794  0870               	movf	?___awmod,w
  1405  0795  00FC               	movwf	??_LCDWriteInt
  1406  0796  0020               	movlb	0	; select bank0
  1407  0797  082A               	movf	LCDWriteInt@i,w
  1408  0798  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1409  0799  0086               	movwf	6
  1410  079A  0187               	clrf	7
  1411  079B  087C               	movf	??_LCDWriteInt,w
  1412  079C  0081               	movwf	1
  1413                           
  1414                           ;lcd_hd44780_pic16.c: 333: val=val/10;
  1415  079D  300A               	movlw	10
  1416  079E  00F0               	movwf	___awdiv@divisor
  1417  079F  3000               	movlw	0
  1418  07A0  00F1               	movwf	___awdiv@divisor+1
  1419  07A1  0821               	movf	LCDWriteInt@val+1,w
  1420  07A2  00F3               	movwf	___awdiv@dividend+1
  1421  07A3  0820               	movf	LCDWriteInt@val,w
  1422  07A4  00F2               	movwf	___awdiv@dividend
  1423  07A5  2715               	fcall	___awdiv
  1424  07A6  0871               	movf	?___awdiv+1,w
  1425  07A7  0020               	movlb	0	; select bank0
  1426  07A8  00A1               	movwf	LCDWriteInt@val+1
  1427  07A9  0870               	movf	?___awdiv,w
  1428  07AA  00A0               	movwf	LCDWriteInt@val
  1429                           
  1430                           ;lcd_hd44780_pic16.c: 334: i--;
  1431  07AB  30FF               	movlw	255
  1432  07AC  07AA               	addwf	LCDWriteInt@i,f
  1433  07AD  30FF               	movlw	255
  1434  07AE  3DAB               	addwfc	LCDWriteInt@i+1,f
  1435  07AF  2F87               	goto	l1172
  1436  07B0                     l1174:	
  1437                           
  1438                           ;lcd_hd44780_pic16.c: 335: }
  1439                           ;lcd_hd44780_pic16.c: 336: if(field_length==-1)
  1440  07B0  0A22               	incf	LCDWriteInt@field_length,w
  1441  07B1  1903               	btfsc	3,2
  1442  07B2  2FB8               	goto	l1180
  1443  07B3  2FC0               	goto	l1182
  1444  07B4                     l1178:	
  1445                           ;lcd_hd44780_pic16.c: 337: while(str[j]==0) j++;
  1446                           
  1447  07B4  3001               	movlw	1
  1448  07B5  07A8               	addwf	LCDWriteInt@j,f
  1449  07B6  3000               	movlw	0
  1450  07B7  3DA9               	addwfc	LCDWriteInt@j+1,f
  1451  07B8                     l1180:	
  1452  07B8  0828               	movf	LCDWriteInt@j,w
  1453  07B9  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1454  07BA  0086               	movwf	6
  1455  07BB  0187               	clrf	7
  1456  07BC  0801               	movf	1,w
  1457  07BD  1D03               	btfss	3,2
  1458  07BE  2FD0               	goto	l1184
  1459  07BF  2FB4               	goto	l1178
  1460  07C0                     l1182:	
  1461                           
  1462                           ;lcd_hd44780_pic16.c: 338: else
  1463                           ;lcd_hd44780_pic16.c: 339: j=5-field_length;
  1464  07C0  0822               	movf	LCDWriteInt@field_length,w
  1465  07C1  00FC               	movwf	??_LCDWriteInt
  1466  07C2  01FD               	clrf	??_LCDWriteInt+1
  1467  07C3  1BFC               	btfsc	??_LCDWriteInt,7
  1468  07C4  03FD               	decf	??_LCDWriteInt+1,f
  1469  07C5  09FC               	comf	??_LCDWriteInt,f
  1470  07C6  09FD               	comf	??_LCDWriteInt+1,f
  1471  07C7  0AFC               	incf	??_LCDWriteInt,f
  1472  07C8  1903               	skipnz
  1473  07C9  0AFD               	incf	??_LCDWriteInt+1,f
  1474  07CA  087C               	movf	??_LCDWriteInt,w
  1475  07CB  3E05               	addlw	5
  1476  07CC  00A8               	movwf	LCDWriteInt@j
  1477  07CD  3000               	movlw	0
  1478  07CE  3D7D               	addwfc	??_LCDWriteInt+1,w
  1479  07CF  00A9               	movwf	LCDWriteInt@j+1
  1480  07D0                     l1184:	
  1481                           
  1482                           ;lcd_hd44780_pic16.c: 342: for(i=j;i<5;i++)
  1483  07D0  0829               	movf	LCDWriteInt@j+1,w
  1484  07D1  00AB               	movwf	LCDWriteInt@i+1
  1485  07D2  0828               	movf	LCDWriteInt@j,w
  1486  07D3  00AA               	movwf	LCDWriteInt@i
  1487  07D4                     L2:	
  1488  07D4  082B               	movf	LCDWriteInt@i+1,w
  1489  07D5  3A80               	xorlw	128
  1490  07D6  00FC               	movwf	??_LCDWriteInt
  1491  07D7  3080               	movlw	128
  1492  07D8  027C               	subwf	??_LCDWriteInt,w
  1493  07D9  1D03               	skipz
  1494  07DA  2FDD               	goto	u735
  1495  07DB  3005               	movlw	5
  1496  07DC  022A               	subwf	LCDWriteInt@i,w
  1497  07DD                     u735:	
  1498  07DD  1803               	btfsc	3,0
  1499  07DE  0008               	return
  1500                           
  1501                           ;lcd_hd44780_pic16.c: 343: {
  1502                           ;lcd_hd44780_pic16.c: 344: (LCDByte(48+str[i],1));
  1503  07DF  01F5               	clrf	LCDByte@isdata
  1504  07E0  0AF5               	incf	LCDByte@isdata,f
  1505  07E1  0020               	movlb	0	; select bank0
  1506  07E2  082A               	movf	LCDWriteInt@i,w
  1507  07E3  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1508  07E4  0086               	movwf	6
  1509  07E5  0187               	clrf	7
  1510  07E6  0801               	movf	1,w
  1511  07E7  3E30               	addlw	48
  1512  07E8  259F               	fcall	_LCDByte
  1513  07E9  3001               	movlw	1
  1514  07EA  0020               	movlb	0	; select bank0
  1515  07EB  07AA               	addwf	LCDWriteInt@i,f
  1516  07EC  3000               	movlw	0
  1517  07ED  3DAB               	addwfc	LCDWriteInt@i+1,f
  1518  07EE  2FD4               	goto	L2
  1519  07EF                     __end_of_LCDWriteInt:	
  1520                           
  1521                           	psect	text6
  1522  06D0                     __ptext6:	
  1523 ;; *************** function ___awmod *****************
  1524 ;; Defined at:
  1525 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  divisor         2    0[COMMON] int 
  1528 ;;  dividend        2    2[COMMON] int 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  sign            1    6[COMMON] unsigned char 
  1531 ;;  counter         1    5[COMMON] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    0[COMMON] int 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1541 ;;      Params:         4       0       0       0
  1542 ;;      Locals:         2       0       0       0
  1543 ;;      Temps:          1       0       0       0
  1544 ;;      Totals:         7       0       0       0
  1545 ;;Total ram usage:        7 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_LCDWriteInt
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function ___awmod
  1556  06D0                     ___awmod:	
  1557                           
  1558                           ;incstack = 0
  1559                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1560  06D0  01F6               	clrf	___awmod@sign
  1561  06D1  1FF3               	btfss	___awmod@dividend+1,7
  1562  06D2  2EDA               	goto	l1036
  1563  06D3  09F2               	comf	___awmod@dividend,f
  1564  06D4  09F3               	comf	___awmod@dividend+1,f
  1565  06D5  0AF2               	incf	___awmod@dividend,f
  1566  06D6  1903               	skipnz
  1567  06D7  0AF3               	incf	___awmod@dividend+1,f
  1568  06D8  01F6               	clrf	___awmod@sign
  1569  06D9  0AF6               	incf	___awmod@sign,f
  1570  06DA                     l1036:	
  1571  06DA  1FF1               	btfss	___awmod@divisor+1,7
  1572  06DB  2EE1               	goto	l1040
  1573  06DC  09F0               	comf	___awmod@divisor,f
  1574  06DD  09F1               	comf	___awmod@divisor+1,f
  1575  06DE  0AF0               	incf	___awmod@divisor,f
  1576  06DF  1903               	skipnz
  1577  06E0  0AF1               	incf	___awmod@divisor+1,f
  1578  06E1                     l1040:	
  1579  06E1  0870               	movf	___awmod@divisor,w
  1580  06E2  0471               	iorwf	___awmod@divisor+1,w
  1581  06E3  1903               	btfsc	3,2
  1582  06E4  2F08               	goto	l1058
  1583  06E5  01F5               	clrf	___awmod@counter
  1584  06E6  0AF5               	incf	___awmod@counter,f
  1585  06E7                     l1048:	
  1586  06E7  1BF1               	btfsc	___awmod@divisor+1,7
  1587  06E8  2EF3               	goto	l1050
  1588  06E9  3001               	movlw	1
  1589  06EA                     u555:	
  1590  06EA  35F0               	lslf	___awmod@divisor,f
  1591  06EB  0DF1               	rlf	___awmod@divisor+1,f
  1592  06EC  0B89               	decfsz	9,f
  1593  06ED  2EEA               	goto	u555
  1594  06EE  3001               	movlw	1
  1595  06EF  00F4               	movwf	??___awmod
  1596  06F0  0874               	movf	??___awmod,w
  1597  06F1  07F5               	addwf	___awmod@counter,f
  1598  06F2  2EE7               	goto	l1048
  1599  06F3                     l1050:	
  1600  06F3  0871               	movf	___awmod@divisor+1,w
  1601  06F4  0273               	subwf	___awmod@dividend+1,w
  1602  06F5  1D03               	skipz
  1603  06F6  2EF9               	goto	u575
  1604  06F7  0870               	movf	___awmod@divisor,w
  1605  06F8  0272               	subwf	___awmod@dividend,w
  1606  06F9                     u575:	
  1607  06F9  1C03               	skipc
  1608  06FA  2EFF               	goto	l1054
  1609  06FB  0870               	movf	___awmod@divisor,w
  1610  06FC  02F2               	subwf	___awmod@dividend,f
  1611  06FD  0871               	movf	___awmod@divisor+1,w
  1612  06FE  3BF3               	subwfb	___awmod@dividend+1,f
  1613  06FF                     l1054:	
  1614  06FF  3001               	movlw	1
  1615  0700                     u585:	
  1616  0700  36F1               	lsrf	___awmod@divisor+1,f
  1617  0701  0CF0               	rrf	___awmod@divisor,f
  1618  0702  0B89               	decfsz	9,f
  1619  0703  2F00               	goto	u585
  1620  0704  3001               	movlw	1
  1621  0705  02F5               	subwf	___awmod@counter,f
  1622  0706  1D03               	btfss	3,2
  1623  0707  2EF3               	goto	l1050
  1624  0708                     l1058:	
  1625  0708  0876               	movf	___awmod@sign,w
  1626  0709  1903               	btfsc	3,2
  1627  070A  2F10               	goto	l1062
  1628  070B  09F2               	comf	___awmod@dividend,f
  1629  070C  09F3               	comf	___awmod@dividend+1,f
  1630  070D  0AF2               	incf	___awmod@dividend,f
  1631  070E  1903               	skipnz
  1632  070F  0AF3               	incf	___awmod@dividend+1,f
  1633  0710                     l1062:	
  1634  0710  0873               	movf	___awmod@dividend+1,w
  1635  0711  00F1               	movwf	?___awmod+1
  1636  0712  0872               	movf	___awmod@dividend,w
  1637  0713  00F0               	movwf	?___awmod
  1638  0714  0008               	return
  1639  0715                     __end_of___awmod:	
  1640                           
  1641                           	psect	text7
  1642  0715                     __ptext7:	
  1643 ;; *************** function ___awdiv *****************
  1644 ;; Defined at:
  1645 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  divisor         2    0[COMMON] int 
  1648 ;;  dividend        2    2[COMMON] int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  quotient        2    7[COMMON] int 
  1651 ;;  sign            1    6[COMMON] unsigned char 
  1652 ;;  counter         1    5[COMMON] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2    0[COMMON] int 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1662 ;;      Params:         4       0       0       0
  1663 ;;      Locals:         4       0       0       0
  1664 ;;      Temps:          1       0       0       0
  1665 ;;      Totals:         9       0       0       0
  1666 ;;Total ram usage:        9 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_LCDWriteInt
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function ___awdiv
  1677  0715                     ___awdiv:	
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1681  0715  01F6               	clrf	___awdiv@sign
  1682  0716  1FF1               	btfss	___awdiv@divisor+1,7
  1683  0717  2F1F               	goto	l992
  1684  0718  09F0               	comf	___awdiv@divisor,f
  1685  0719  09F1               	comf	___awdiv@divisor+1,f
  1686  071A  0AF0               	incf	___awdiv@divisor,f
  1687  071B  1903               	skipnz
  1688  071C  0AF1               	incf	___awdiv@divisor+1,f
  1689  071D  01F6               	clrf	___awdiv@sign
  1690  071E  0AF6               	incf	___awdiv@sign,f
  1691  071F                     l992:	
  1692  071F  1FF3               	btfss	___awdiv@dividend+1,7
  1693  0720  2F2A               	goto	l998
  1694  0721  09F2               	comf	___awdiv@dividend,f
  1695  0722  09F3               	comf	___awdiv@dividend+1,f
  1696  0723  0AF2               	incf	___awdiv@dividend,f
  1697  0724  1903               	skipnz
  1698  0725  0AF3               	incf	___awdiv@dividend+1,f
  1699  0726  3001               	movlw	1
  1700  0727  00F4               	movwf	??___awdiv
  1701  0728  0874               	movf	??___awdiv,w
  1702  0729  06F6               	xorwf	___awdiv@sign,f
  1703  072A                     l998:	
  1704  072A  01F7               	clrf	___awdiv@quotient
  1705  072B  01F8               	clrf	___awdiv@quotient+1
  1706  072C  0870               	movf	___awdiv@divisor,w
  1707  072D  0471               	iorwf	___awdiv@divisor+1,w
  1708  072E  1903               	btfsc	3,2
  1709  072F  2F59               	goto	l1020
  1710  0730  01F5               	clrf	___awdiv@counter
  1711  0731  0AF5               	incf	___awdiv@counter,f
  1712  0732                     l1008:	
  1713  0732  1BF1               	btfsc	___awdiv@divisor+1,7
  1714  0733  2F3E               	goto	l1010
  1715  0734  3001               	movlw	1
  1716  0735                     u455:	
  1717  0735  35F0               	lslf	___awdiv@divisor,f
  1718  0736  0DF1               	rlf	___awdiv@divisor+1,f
  1719  0737  0B89               	decfsz	9,f
  1720  0738  2F35               	goto	u455
  1721  0739  3001               	movlw	1
  1722  073A  00F4               	movwf	??___awdiv
  1723  073B  0874               	movf	??___awdiv,w
  1724  073C  07F5               	addwf	___awdiv@counter,f
  1725  073D  2F32               	goto	l1008
  1726  073E                     l1010:	
  1727  073E  3001               	movlw	1
  1728  073F                     u475:	
  1729  073F  35F7               	lslf	___awdiv@quotient,f
  1730  0740  0DF8               	rlf	___awdiv@quotient+1,f
  1731  0741  0B89               	decfsz	9,f
  1732  0742  2F3F               	goto	u475
  1733  0743  0871               	movf	___awdiv@divisor+1,w
  1734  0744  0273               	subwf	___awdiv@dividend+1,w
  1735  0745  1D03               	skipz
  1736  0746  2F49               	goto	u485
  1737  0747  0870               	movf	___awdiv@divisor,w
  1738  0748  0272               	subwf	___awdiv@dividend,w
  1739  0749                     u485:	
  1740  0749  1C03               	skipc
  1741  074A  2F50               	goto	l1016
  1742  074B  0870               	movf	___awdiv@divisor,w
  1743  074C  02F2               	subwf	___awdiv@dividend,f
  1744  074D  0871               	movf	___awdiv@divisor+1,w
  1745  074E  3BF3               	subwfb	___awdiv@dividend+1,f
  1746  074F  1477               	bsf	___awdiv@quotient,0
  1747  0750                     l1016:	
  1748  0750  3001               	movlw	1
  1749  0751                     u495:	
  1750  0751  36F1               	lsrf	___awdiv@divisor+1,f
  1751  0752  0CF0               	rrf	___awdiv@divisor,f
  1752  0753  0B89               	decfsz	9,f
  1753  0754  2F51               	goto	u495
  1754  0755  3001               	movlw	1
  1755  0756  02F5               	subwf	___awdiv@counter,f
  1756  0757  1D03               	btfss	3,2
  1757  0758  2F3E               	goto	l1010
  1758  0759                     l1020:	
  1759  0759  0876               	movf	___awdiv@sign,w
  1760  075A  1903               	btfsc	3,2
  1761  075B  2F61               	goto	l1024
  1762  075C  09F7               	comf	___awdiv@quotient,f
  1763  075D  09F8               	comf	___awdiv@quotient+1,f
  1764  075E  0AF7               	incf	___awdiv@quotient,f
  1765  075F  1903               	skipnz
  1766  0760  0AF8               	incf	___awdiv@quotient+1,f
  1767  0761                     l1024:	
  1768  0761  0878               	movf	___awdiv@quotient+1,w
  1769  0762  00F1               	movwf	?___awdiv+1
  1770  0763  0877               	movf	___awdiv@quotient,w
  1771  0764  00F0               	movwf	?___awdiv
  1772  0765  0008               	return
  1773  0766                     __end_of___awdiv:	
  1774                           
  1775                           	psect	text8
  1776  068F                     __ptext8:	
  1777 ;; *************** function _LCDInit *****************
  1778 ;; Defined at:
  1779 ;;		line 193 in file "lcd_hd44780_pic16.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  style           1    wreg     unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  style           1    0[BANK0 ] unsigned char 
  1784 ;;  __i             1    1[BANK0 ] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;		None               void
  1787 ;; Registers used:
  1788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1794 ;;      Params:         0       0       0       0
  1795 ;;      Locals:         0       2       0       0
  1796 ;;      Temps:          2       0       0       0
  1797 ;;      Totals:         2       2       0       0
  1798 ;;Total ram usage:        4 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    2
  1801 ;; This function calls:
  1802 ;;		_LCDBusyLoop
  1803 ;;		_LCDByte
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _LCDInit
  1811  068F                     _LCDInit:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1815                           ;LCDInit@style stored from wreg
  1816  068F  0020               	movlb	0	; select bank0
  1817  0690  00A0               	movwf	LCDInit@style
  1818                           
  1819                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(4000000/4000.0)));
  1820  0691  3027               	movlw	39
  1821  0692  00FD               	movwf	??_LCDInit+1
  1822  0693  30F5               	movlw	245
  1823  0694  00FC               	movwf	??_LCDInit
  1824  0695                     u767:	
  1825  0695  0BFC               	decfsz	??_LCDInit,f
  1826  0696  2E95               	goto	u767
  1827  0697  0BFD               	decfsz	??_LCDInit+1,f
  1828  0698  2E95               	goto	u767
  1829                           
  1830                           ;lcd_hd44780_pic16.c: 212: TRISB&=(~(0x0F<<0));
  1831  0699  30F0               	movlw	240
  1832  069A  00FC               	movwf	??_LCDInit
  1833  069B  087C               	movf	??_LCDInit,w
  1834  069C  0021               	movlb	1	; select bank1
  1835  069D  058D               	andwf	13,f	;volatile
  1836                           
  1837                           ;lcd_hd44780_pic16.c: 214: TRISBbits.TRISB6=0;
  1838  069E  130D               	bcf	13,6	;volatile
  1839                           
  1840                           ;lcd_hd44780_pic16.c: 215: TRISBbits.TRISB4=0;
  1841  069F  120D               	bcf	13,4	;volatile
  1842                           
  1843                           ;lcd_hd44780_pic16.c: 216: TRISBbits.TRISB5=0;
  1844  06A0  128D               	bcf	13,5	;volatile
  1845                           
  1846                           ;lcd_hd44780_pic16.c: 218: PORTB&=(~(0x0F<<0));
  1847  06A1  30F0               	movlw	240
  1848  06A2  00FC               	movwf	??_LCDInit
  1849  06A3  087C               	movf	??_LCDInit,w
  1850  06A4  0020               	movlb	0	; select bank0
  1851  06A5  058D               	andwf	13,f	;volatile
  1852                           
  1853                           ;lcd_hd44780_pic16.c: 220: (RB6=0);
  1854  06A6  130D               	bcf	13,6	;volatile
  1855                           
  1856                           ;lcd_hd44780_pic16.c: 221: (RB5=0);
  1857  06A7  128D               	bcf	13,5	;volatile
  1858                           
  1859                           ;lcd_hd44780_pic16.c: 222: (RB4=0);
  1860  06A8  120D               	bcf	13,4	;volatile
  1861                           
  1862                           ;lcd_hd44780_pic16.c: 227: (RB6=1);
  1863                           
  1864                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  1865  06A9  0020               	movlb	0	; select bank0
  1866  06AA  170D               	bsf	13,6	;volatile
  1867                           
  1868                           ;lcd_hd44780_pic16.c: 228: PORTB|=((0b00000010)<<0);
  1869  06AB  148D               	bsf	13,1	;volatile
  1870                           
  1871                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1872  06AC  0000               	nop
  1873                           
  1874                           ;lcd_hd44780_pic16.c: 230: (RB6=0);
  1875  06AD  0020               	movlb	0	; select bank0
  1876  06AE  130D               	bcf	13,6	;volatile
  1877                           
  1878                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1879  06AF  0000               	nop
  1880                           
  1881                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  1882  06B0  264E               	fcall	_LCDBusyLoop
  1883                           
  1884                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  1885  06B1  01F5               	clrf	LCDByte@isdata
  1886  06B2  3028               	movlw	40
  1887  06B3  259F               	fcall	_LCDByte
  1888                           
  1889                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  1890  06B4  01F5               	clrf	LCDByte@isdata
  1891  06B5  0020               	movlb	0	; select bank0
  1892  06B6  0820               	movf	LCDInit@style,w
  1893  06B7  380C               	iorlw	12
  1894  06B8  259F               	fcall	_LCDByte
  1895                           
  1896                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  1897  06B9  01F5               	clrf	LCDByte@isdata
  1898  06BA  3040               	movlw	64
  1899  06BB  259F               	fcall	_LCDByte
  1900                           
  1901                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  1902                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  1903  06BC  0020               	movlb	0	; select bank0
  1904  06BD  01A1               	clrf	LCDInit@__i
  1905  06BE                     L3:	
  1906  06BE  3040               	movlw	64
  1907  06BF  0221               	subwf	LCDInit@__i,w
  1908  06C0  1803               	btfsc	3,0
  1909  06C1  0008               	return
  1910                           
  1911                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  1912  06C2  01F5               	clrf	LCDByte@isdata
  1913  06C3  0AF5               	incf	LCDByte@isdata,f
  1914  06C4  0821               	movf	LCDInit@__i,w
  1915  06C5  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  1916  06C6  0086               	movwf	6
  1917  06C7  0187               	clrf	7
  1918  06C8  0801               	movf	1,w
  1919  06C9  259F               	fcall	_LCDByte
  1920  06CA  3001               	movlw	1
  1921  06CB  00FC               	movwf	??_LCDInit
  1922  06CC  087C               	movf	??_LCDInit,w
  1923  06CD  0020               	movlb	0	; select bank0
  1924  06CE  07A1               	addwf	LCDInit@__i,f
  1925  06CF  2EBE               	goto	L3
  1926  06D0                     __end_of_LCDInit:	
  1927                           
  1928                           	psect	text9
  1929  0553                     __ptext9:	
  1930 ;; *************** function _LCDGotoXY *****************
  1931 ;; Defined at:
  1932 ;;		line 352 in file "lcd_hd44780_pic16.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  x               1    wreg     unsigned char 
  1935 ;;  y               1   12[COMMON] unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  x               1    0[BANK0 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1947 ;;      Params:         1       0       0       0
  1948 ;;      Locals:         0       1       0       0
  1949 ;;      Temps:          1       0       0       0
  1950 ;;      Totals:         2       1       0       0
  1951 ;;Total ram usage:        3 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		_LCDByte
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _LCDGotoXY
  1963  0553                     _LCDGotoXY:	
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1967                           ;LCDGotoXY@x stored from wreg
  1968  0553  0020               	movlb	0	; select bank0
  1969  0554  00A0               	movwf	LCDGotoXY@x
  1970                           
  1971                           ;lcd_hd44780_pic16.c: 354: if(x>=20) return;
  1972  0555  3014               	movlw	20
  1973  0556  0220               	subwf	LCDGotoXY@x,w
  1974  0557  1803               	btfsc	3,0
  1975  0558  0008               	return
  1976  0559  2D63               	goto	l1126
  1977  055A                     l126:	
  1978                           ;lcd_hd44780_pic16.c: 362: case 1:
  1979                           
  1980                           ;lcd_hd44780_pic16.c: 361: break;
  1981                           
  1982                           ;lcd_hd44780_pic16.c: 359: {
  1983                           ;lcd_hd44780_pic16.c: 360: case 0:
  1984                           
  1985                           ;lcd_hd44780_pic16.c: 358: switch(y)
  1986                           
  1987                           
  1988                           ;lcd_hd44780_pic16.c: 363: x|=0b01000000;
  1989  055A  1720               	bsf	LCDGotoXY@x,6
  1990                           
  1991                           ;lcd_hd44780_pic16.c: 364: break;
  1992  055B  2D71               	goto	l125
  1993  055C                     l1120:	
  1994                           ;lcd_hd44780_pic16.c: 365: case 2:
  1995                           
  1996                           
  1997                           ;lcd_hd44780_pic16.c: 366: x+=0x14;
  1998  055C  3014               	movlw	20
  1999  055D  2D5F               	goto	L4
  2000  055E                     l1122:	
  2001                           ;lcd_hd44780_pic16.c: 368: case 3:
  2002                           
  2003                           ;lcd_hd44780_pic16.c: 367: break;
  2004                           
  2005                           
  2006                           ;lcd_hd44780_pic16.c: 369: x+=0x54;
  2007  055E  3054               	movlw	84
  2008  055F                     L4:	
  2009  055F  00FD               	movwf	??_LCDGotoXY
  2010  0560  087D               	movf	??_LCDGotoXY,w
  2011  0561  07A0               	addwf	LCDGotoXY@x,f
  2012                           
  2013                           ;lcd_hd44780_pic16.c: 371: }
  2014                           
  2015                           ;lcd_hd44780_pic16.c: 370: break;
  2016  0562  2D71               	goto	l125
  2017  0563                     l1126:	
  2018  0563  087C               	movf	LCDGotoXY@y,w
  2019                           
  2020                           ; Switch size 1, requested type "space"
  2021                           ; Number of cases is 4, Range of values is 0 to 3
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte           13     7 (average)
  2025                           ; direct_byte           14     6 (fixed)
  2026                           ; jumptable            260     6 (fixed)
  2027                           ;	Chosen strategy is simple_byte
  2028  0564  3A00               	xorlw	0	; case 0
  2029  0565  1903               	skipnz
  2030  0566  2D71               	goto	l125
  2031  0567  3A01               	xorlw	1	; case 1
  2032  0568  1903               	skipnz
  2033  0569  2D5A               	goto	l126
  2034  056A  3A03               	xorlw	3	; case 2
  2035  056B  1903               	skipnz
  2036  056C  2D5C               	goto	l1120
  2037  056D  3A01               	xorlw	1	; case 3
  2038  056E  1903               	skipnz
  2039  056F  2D5E               	goto	l1122
  2040  0570  2D71               	goto	l125
  2041  0571                     l125:	
  2042                           
  2043                           ;lcd_hd44780_pic16.c: 393: x|=0b10000000;
  2044  0571  17A0               	bsf	LCDGotoXY@x,7
  2045                           
  2046                           ;lcd_hd44780_pic16.c: 394: (LCDByte(x,0));
  2047  0572  01F5               	clrf	LCDByte@isdata
  2048  0573  0820               	movf	LCDGotoXY@x,w
  2049  0574  259F               	fcall	_LCDByte
  2050  0575  0008               	return
  2051  0576                     __end_of_LCDGotoXY:	
  2052                           
  2053                           	psect	text10
  2054  059F                     __ptext10:	
  2055 ;; *************** function _LCDByte *****************
  2056 ;; Defined at:
  2057 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  c               1    wreg     unsigned char 
  2060 ;;  isdata          1    5[COMMON] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  c               1   10[COMMON] unsigned char 
  2063 ;;  temp            1   11[COMMON] unsigned char 
  2064 ;;  ln              1    9[COMMON] unsigned char 
  2065 ;;  hn              1    8[COMMON] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;		None               void
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2075 ;;      Params:         1       0       0       0
  2076 ;;      Locals:         4       0       0       0
  2077 ;;      Temps:          2       0       0       0
  2078 ;;      Totals:         7       0       0       0
  2079 ;;Total ram usage:        7 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    1
  2082 ;; This function calls:
  2083 ;;		_LCDBusyLoop
  2084 ;; This function is called by:
  2085 ;;		_LCDInit
  2086 ;;		_LCDWriteString
  2087 ;;		_LCDWriteInt
  2088 ;;		_LCDGotoXY
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _LCDByte
  2094  059F                     _LCDByte:	
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2098                           ;LCDByte@c stored from wreg
  2099  059F  00FA               	movwf	LCDByte@c
  2100                           
  2101                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2102                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2103                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2104  05A0  087A               	movf	LCDByte@c,w
  2105  05A1  00F6               	movwf	??_LCDByte
  2106  05A2  3004               	movlw	4
  2107  05A3                     u405:	
  2108  05A3  36F6               	lsrf	??_LCDByte,f
  2109  05A4  0B89               	decfsz	9,f
  2110  05A5  2DA3               	goto	u405
  2111  05A6  0876               	movf	??_LCDByte,w
  2112  05A7  00F7               	movwf	??_LCDByte+1
  2113  05A8  0877               	movf	??_LCDByte+1,w
  2114  05A9  00F8               	movwf	LCDByte@hn
  2115                           
  2116                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2117  05AA  087A               	movf	LCDByte@c,w
  2118  05AB  390F               	andlw	15
  2119  05AC  00F6               	movwf	??_LCDByte
  2120  05AD  0876               	movf	??_LCDByte,w
  2121  05AE  00F9               	movwf	LCDByte@ln
  2122                           
  2123                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2124  05AF  0875               	movf	LCDByte@isdata,w
  2125  05B0  1D03               	btfss	3,2
  2126  05B1  2DB5               	goto	l80
  2127                           
  2128                           ;lcd_hd44780_pic16.c: 96: (RB4=0);
  2129  05B2  0020               	movlb	0	; select bank0
  2130  05B3  120D               	bcf	13,4	;volatile
  2131  05B4  2DB7               	goto	l81
  2132  05B5                     l80:	
  2133                           
  2134                           ;lcd_hd44780_pic16.c: 97: else
  2135                           ;lcd_hd44780_pic16.c: 98: (RB4=1);
  2136  05B5  0020               	movlb	0	; select bank0
  2137  05B6  160D               	bsf	13,4	;volatile
  2138  05B7                     l81:	
  2139                           
  2140                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2141                           ;lcd_hd44780_pic16.c: 102: (RB6=1);
  2142  05B7  0020               	movlb	0	; select bank0
  2143  05B8  170D               	bsf	13,6	;volatile
  2144                           
  2145                           ;lcd_hd44780_pic16.c: 106: temp=(PORTB & (~(0X0F<<0)))|((hn<<0));
  2146  05B9  080D               	movf	13,w	;volatile
  2147  05BA  39F0               	andlw	240
  2148  05BB  0478               	iorwf	LCDByte@hn,w
  2149  05BC  00F6               	movwf	??_LCDByte
  2150  05BD  0876               	movf	??_LCDByte,w
  2151  05BE  00FB               	movwf	LCDByte@temp
  2152                           
  2153                           ;lcd_hd44780_pic16.c: 107: PORTB=temp;
  2154  05BF  087B               	movf	LCDByte@temp,w
  2155  05C0  008D               	movwf	13	;volatile
  2156                           
  2157                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2158  05C1  0000               	nop
  2159                           
  2160                           ;lcd_hd44780_pic16.c: 113: (RB6=0);
  2161  05C2  0020               	movlb	0	; select bank0
  2162  05C3  130D               	bcf	13,6	;volatile
  2163                           
  2164                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2165  05C4  0000               	nop
  2166                           
  2167                           ;lcd_hd44780_pic16.c: 118: (RB6=1);
  2168  05C5  0020               	movlb	0	; select bank0
  2169  05C6  170D               	bsf	13,6	;volatile
  2170                           
  2171                           ;lcd_hd44780_pic16.c: 120: temp=(PORTB & (~(0X0F<<0)))|((ln<<0));
  2172  05C7  080D               	movf	13,w	;volatile
  2173  05C8  39F0               	andlw	240
  2174  05C9  0479               	iorwf	LCDByte@ln,w
  2175  05CA  00F6               	movwf	??_LCDByte
  2176  05CB  0876               	movf	??_LCDByte,w
  2177  05CC  00FB               	movwf	LCDByte@temp
  2178                           
  2179                           ;lcd_hd44780_pic16.c: 122: PORTB=temp;
  2180  05CD  087B               	movf	LCDByte@temp,w
  2181  05CE  008D               	movwf	13	;volatile
  2182                           
  2183                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2184  05CF  0000               	nop
  2185                           
  2186                           ;lcd_hd44780_pic16.c: 128: (RB6=0);
  2187  05D0  0020               	movlb	0	; select bank0
  2188  05D1  130D               	bcf	13,6	;volatile
  2189                           
  2190                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2191  05D2  0000               	nop
  2192                           
  2193                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2194  05D3  264E               	fcall	_LCDBusyLoop
  2195  05D4  0008               	return
  2196  05D5                     __end_of_LCDByte:	
  2197                           
  2198                           	psect	text11
  2199  064E                     __ptext11:	
  2200 ;; *************** function _LCDBusyLoop *****************
  2201 ;; Defined at:
  2202 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  status          1    4[COMMON] unsigned char 
  2207 ;;  temp            1    3[COMMON] unsigned char 
  2208 ;;  busy            1    2[COMMON] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2218 ;;      Params:         0       0       0       0
  2219 ;;      Locals:         3       0       0       0
  2220 ;;      Temps:          2       0       0       0
  2221 ;;      Totals:         5       0       0       0
  2222 ;;Total ram usage:        5 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_LCDByte
  2228 ;;		_LCDInit
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _LCDBusyLoop
  2234  064E                     _LCDBusyLoop:	
  2235                           
  2236                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2240  064E  01F4               	clrf	LCDBusyLoop@status
  2241                           
  2242                           ;lcd_hd44780_pic16.c: 142: TRISB|=(0x0f<<0);
  2243  064F  300F               	movlw	15
  2244  0650  00F0               	movwf	??_LCDBusyLoop
  2245  0651  0870               	movf	??_LCDBusyLoop,w
  2246  0652  0021               	movlb	1	; select bank1
  2247  0653  048D               	iorwf	13,f	;volatile
  2248                           
  2249                           ;lcd_hd44780_pic16.c: 145: (RB5=1);
  2250  0654  0020               	movlb	0	; select bank0
  2251  0655  168D               	bsf	13,5	;volatile
  2252                           
  2253                           ;lcd_hd44780_pic16.c: 146: (RB4=0);
  2254  0656  120D               	bcf	13,4	;volatile
  2255  0657                     l918:	
  2256                           ;lcd_hd44780_pic16.c: 153: do
  2257                           
  2258                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2259                           
  2260                           
  2261                           ;lcd_hd44780_pic16.c: 154: {
  2262                           ;lcd_hd44780_pic16.c: 156: (RB6=1);
  2263  0657  0020               	movlb	0	; select bank0
  2264  0658  170D               	bsf	13,6	;volatile
  2265                           
  2266                           ;lcd_hd44780_pic16.c: 161: status=(PORTB>>0);
  2267                           
  2268                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2269  0659  0020               	movlb	0	; select bank0
  2270  065A  080D               	movf	13,w	;volatile
  2271  065B  00F0               	movwf	??_LCDBusyLoop
  2272  065C  0870               	movf	??_LCDBusyLoop,w
  2273  065D  00F4               	movwf	LCDBusyLoop@status
  2274                           
  2275                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2276  065E  0874               	movf	LCDBusyLoop@status,w
  2277  065F  00F0               	movwf	??_LCDBusyLoop
  2278  0660  3003               	movlw	3
  2279  0661                     u385:	
  2280  0661  35F0               	lslf	??_LCDBusyLoop,f
  2281  0662  3EFF               	addlw	-1
  2282  0663  1D03               	skipz
  2283  0664  2E61               	goto	u385
  2284  0665  3570               	lslf	??_LCDBusyLoop,w
  2285  0666  00F1               	movwf	??_LCDBusyLoop+1
  2286  0667  0871               	movf	??_LCDBusyLoop+1,w
  2287  0668  00F4               	movwf	LCDBusyLoop@status
  2288                           
  2289                           ;lcd_hd44780_pic16.c: 167: (RB6=0);
  2290                           
  2291                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2292  0669  0020               	movlb	0	; select bank0
  2293  066A  130D               	bcf	13,6	;volatile
  2294                           
  2295                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2296  066B  0000               	nop
  2297                           
  2298                           ;lcd_hd44780_pic16.c: 170: (RB6=1);
  2299  066C  0020               	movlb	0	; select bank0
  2300  066D  170D               	bsf	13,6	;volatile
  2301                           
  2302                           ;lcd_hd44780_pic16.c: 173: temp=(PORTB>>0);
  2303                           
  2304                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2305  066E  0020               	movlb	0	; select bank0
  2306  066F  080D               	movf	13,w	;volatile
  2307  0670  00F0               	movwf	??_LCDBusyLoop
  2308  0671  0870               	movf	??_LCDBusyLoop,w
  2309  0672  00F3               	movwf	LCDBusyLoop@temp
  2310                           
  2311                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2312  0673  300F               	movlw	15
  2313  0674  00F0               	movwf	??_LCDBusyLoop
  2314  0675  0870               	movf	??_LCDBusyLoop,w
  2315  0676  05F3               	andwf	LCDBusyLoop@temp,f
  2316                           
  2317                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2318  0677  0874               	movf	LCDBusyLoop@status,w
  2319  0678  0473               	iorwf	LCDBusyLoop@temp,w
  2320  0679  00F0               	movwf	??_LCDBusyLoop
  2321  067A  0870               	movf	??_LCDBusyLoop,w
  2322  067B  00F4               	movwf	LCDBusyLoop@status
  2323                           
  2324                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2325  067C  0874               	movf	LCDBusyLoop@status,w
  2326  067D  3980               	andlw	128
  2327  067E  00F0               	movwf	??_LCDBusyLoop
  2328  067F  0870               	movf	??_LCDBusyLoop,w
  2329  0680  00F2               	movwf	LCDBusyLoop@busy
  2330                           
  2331                           ;lcd_hd44780_pic16.c: 182: (RB6=0);
  2332                           
  2333                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2334  0681  0020               	movlb	0	; select bank0
  2335  0682  130D               	bcf	13,6	;volatile
  2336                           
  2337                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2338  0683  0000               	nop
  2339                           
  2340                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2341  0684  0872               	movf	LCDBusyLoop@busy,w
  2342  0685  1D03               	btfss	3,2
  2343  0686  2E57               	goto	l918
  2344                           
  2345                           ;lcd_hd44780_pic16.c: 186: (RB5=0);
  2346  0687  0020               	movlb	0	; select bank0
  2347  0688  128D               	bcf	13,5	;volatile
  2348                           
  2349                           ;lcd_hd44780_pic16.c: 189: TRISB&=(~(0x0F<<0));
  2350  0689  30F0               	movlw	240
  2351  068A  00F0               	movwf	??_LCDBusyLoop
  2352  068B  0870               	movf	??_LCDBusyLoop,w
  2353  068C  0021               	movlb	1	; select bank1
  2354  068D  058D               	andwf	13,f	;volatile
  2355  068E  0008               	return
  2356  068F                     __end_of_LCDBusyLoop:	
  2357  007E                     btemp	set	126	;btemp
  2358  007E                     wtemp	set	126
  2359  007E                     wtemp0	set	126
  2360  0080                     wtemp1	set	128
  2361  0082                     wtemp2	set	130
  2362  0084                     wtemp3	set	132
  2363  0086                     wtemp4	set	134
  2364  0088                     wtemp5	set	136
  2365  007F                     wtemp6	set	127
  2366  007E                     ttemp	set	126
  2367  007E                     ttemp0	set	126
  2368  0081                     ttemp1	set	129
  2369  0084                     ttemp2	set	132
  2370  0087                     ttemp3	set	135
  2371  007F                     ttemp4	set	127
  2372  007E                     ltemp	set	126
  2373  007E                     ltemp0	set	126
  2374  0082                     ltemp1	set	130
  2375  0086                     ltemp2	set	134
  2376  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    0
    Data        64
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      19
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _main->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5380
                                             12 BANK0      2     2      0
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1143
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2138
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1065
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1034
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     858
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      61       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      13       6       23.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      61      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Nov 28 17:44:12 2015

                   ?_LCDBusyLoop 0070                      __CFG_CP$OFF 0000                               l80 05B5  
                             l81 05B7                     ___awdiv@sign 0076                              l125 0571  
                            l126 055A                              l918 0657                              l992 071F  
                            l998 072A                              _RB4 006C                              _RB5 006D  
                            _RB6 006E                              u405 05A3                     __CFG_CPD$OFF 0000  
                            u455 0735                              u385 0661                              u475 073F  
                            u555 06EA                              u485 0749                              u495 0751  
                            u575 06F9                              u735 07DD                              u680 0770  
                            u585 0700                              u757 0599                              u767 0695  
                   ___awmod@sign 0076                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000          LCDWriteInt@field_length 0022                  __end_of_LCDByte 05D5  
                __end_of_LCDInit 06D0                     __CFG_LVP$OFF 0000                     ?_LCDWriteInt 0020  
                    LCDByte@temp 007B                             l1010 073E                             l1020 0759  
                           l1120 055C                             l1024 0761                             l1016 0750  
                           l1008 0732                             l1040 06E1                             l1122 055E  
                           l1050 06F3                             l1036 06DA                             l1204 0581  
                           l1126 0563                             l1062 0710                             l1054 06FF  
                           l1048 06E7                             l1144 05FD                             l1152 05D5  
                           l1058 0708                             l1180 07B8                             l1172 0787  
                           l1148 0601                             l1182 07C0                             l1174 07B0  
                           l1184 07D0                             l1178 07B4                             STR_1 0549  
                           STR_2 0539                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 0576               __size_of_LCDGotoXY 0023  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0001                             ttemp 007E                             wtemp 007E  
                  __CFG_MCLRE$ON 0000                    __CFG_PLLEN$ON 0000   __size_of_OSCILLATOR_Initialize 0006  
  __end_of_OSCILLATOR_Initialize 051B                            ?_main 0070                  __end_of___awdiv 0766  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0715                     LCDInit@style 0020  
                ___awdiv@divisor 0070                  ___awdiv@counter 0075                            _PORTB 000D  
                          _TRISA 008C                            _TRISB 008D                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  __initialization 07EF                     __end_of_main 059F  
                         ??_main 002C                __end_of_LCDGotoXY 0576                    LCDByte@isdata 0075  
                      ??_LCDByte 0076                        ??_LCDInit 007C                 ___awdiv@dividend 0072  
                         _ANSELA 018C                           _ANSELB 018D                           _OSCCON 0099  
                 __CFG_PWRTE$OFF 0000                   _LCDWriteString 05D5                        ??___awdiv 0074  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074             __size_of_LCDBusyLoop 0041  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                   LCDWriteInt@i 002A                     LCDWriteInt@j 0028                _SYSTEM_Initialize 0512  
           __size_of_LCDWriteInt 0089          __end_of__initialization 07FE               ?_SYSTEM_Initialize 0070  
         __end_of_LCDWriteString 060E                        LCDByte@hn 0078                        LCDByte@ln 0079  
                 __pcstackCOMMON 0070                     __pidataBANK1 060E              ??_SYSTEM_Initialize 0070  
                 _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 0515                       __pbssBANK0 002E  
                ?_LCDWriteString 007C                       __pmaintext 0576                          _APFCON0 011D  
                        _APFCON1 011E                          _LCDByte 059F                          _LCDInit 068F  
                        _OSCSTAT 009A                          _OSCTUNE 0098                          ___cgram 00A0  
                        ___awdiv 0715                          ___awmod 06D0                          __ptext1 0512  
                        __ptext2 0521                          __ptext3 0515                          __ptext4 05D5  
                        __ptext5 0766                          __ptext6 06D0                          __ptext7 0715  
                        __ptext8 068F                          __ptext9 0553            _OSCILLATOR_Initialize 0515  
               ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070                        _LCDGotoXY 0553  
     __size_of_SYSTEM_Initialize 0003             end_of_initialization 07FE                          init_ram 051B  
                        initloop 051C                     __pstringtext 0539                LCDWriteString@msg 007C  
               __CFG_FOSC$INTOSC 0000                        _TRISBbits 008D                       ?_LCDGotoXY 007C  
                     LCDInit@__i 0021                       LCDGotoXY@x 0020                       LCDGotoXY@y 007C  
                  ??_LCDBusyLoop 0070           ?_OSCILLATOR_Initialize 0070              start_initialization 07EF  
__size_of_PIN_MANAGER_Initialize 0018                    ??_LCDWriteInt 007C                 ??_LCDWriteString 0020  
                    __pdataBANK1 00A0              __end_of_LCDBusyLoop 068F                         ?_LCDByte 0075  
                       ?_LCDInit 0070                         LCDByte@c 007A                        ___latbits 0000  
                  __pcstackBANK0 0020                      ??_LCDGotoXY 007D                 LCDWriteInt@F2357 002E  
            __end_of_LCDWriteInt 07EF           _PIN_MANAGER_Initialize 0521                         ?___awdiv 0070  
                       ?___awmod 0070                  LCDBusyLoop@busy 0072                  LCDBusyLoop@temp 0073  
                    _LCDBusyLoop 064E                 LCDWriteString@cc 0021                 __size_of_LCDByte 0036  
               __size_of_LCDInit 0041                      _LCDWriteInt 0766          ??_OSCILLATOR_Initialize 0070  
               __size_of___awdiv 0051                 __size_of___awmod 0045                LCDBusyLoop@status 0074  
                       __ptext10 059F                         __ptext11 064E                    __size_of_main 0029  
                 LCDWriteInt@val 0020                   LCDWriteInt@str 0023          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000   __end_of_PIN_MANAGER_Initialize 0539          __size_of_LCDWriteString 0039  
