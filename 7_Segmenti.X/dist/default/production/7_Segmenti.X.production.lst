

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 13 10:17:28 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1826
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0113                     	;# 
    71  0114                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011A                     	;# 
    78  011B                     	;# 
    79  011D                     	;# 
    80  011E                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019C                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019E                     	;# 
   102  019F                     	;# 
   103  020C                     	;# 
   104  020D                     	;# 
   105  0211                     	;# 
   106  0211                     	;# 
   107  0212                     	;# 
   108  0212                     	;# 
   109  0213                     	;# 
   110  0213                     	;# 
   111  0214                     	;# 
   112  0214                     	;# 
   113  0215                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0216                     	;# 
   118  0217                     	;# 
   119  0217                     	;# 
   120  0291                     	;# 
   121  0291                     	;# 
   122  0292                     	;# 
   123  0293                     	;# 
   124  0294                     	;# 
   125  0295                     	;# 
   126  0295                     	;# 
   127  0296                     	;# 
   128  0394                     	;# 
   129  0395                     	;# 
   130  0396                     	;# 
   131  039A                     	;# 
   132  039C                     	;# 
   133  039D                     	;# 
   134  039E                     	;# 
   135  039F                     	;# 
   136  0FE4                     	;# 
   137  0FE5                     	;# 
   138  0FE6                     	;# 
   139  0FE7                     	;# 
   140  0FE8                     	;# 
   141  0FE9                     	;# 
   142  0FEA                     	;# 
   143  0FEB                     	;# 
   144  0FED                     	;# 
   145  0FEE                     	;# 
   146  0FEF                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0113                     	;# 
   194  0114                     	;# 
   195  0115                     	;# 
   196  0116                     	;# 
   197  0117                     	;# 
   198  0118                     	;# 
   199  0119                     	;# 
   200  011A                     	;# 
   201  011B                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0191                     	;# 
   207  0191                     	;# 
   208  0192                     	;# 
   209  0193                     	;# 
   210  0193                     	;# 
   211  0193                     	;# 
   212  0194                     	;# 
   213  0195                     	;# 
   214  0196                     	;# 
   215  0199                     	;# 
   216  019A                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019C                     	;# 
   222  019C                     	;# 
   223  019D                     	;# 
   224  019E                     	;# 
   225  019F                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  0211                     	;# 
   229  0211                     	;# 
   230  0212                     	;# 
   231  0212                     	;# 
   232  0213                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0214                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0216                     	;# 
   240  0216                     	;# 
   241  0217                     	;# 
   242  0217                     	;# 
   243  0291                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  039A                     	;# 
   255  039C                     	;# 
   256  039D                     	;# 
   257  039E                     	;# 
   258  039F                     	;# 
   259  0FE4                     	;# 
   260  0FE5                     	;# 
   261  0FE6                     	;# 
   262  0FE7                     	;# 
   263  0FE8                     	;# 
   264  0FE9                     	;# 
   265  0FEA                     	;# 
   266  0FEB                     	;# 
   267  0FED                     	;# 
   268  0FEE                     	;# 
   269  0FEF                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  0111                     	;# 
   315  0112                     	;# 
   316  0113                     	;# 
   317  0114                     	;# 
   318  0115                     	;# 
   319  0116                     	;# 
   320  0117                     	;# 
   321  0118                     	;# 
   322  0119                     	;# 
   323  011A                     	;# 
   324  011B                     	;# 
   325  011D                     	;# 
   326  011E                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0291                     	;# 
   367  0291                     	;# 
   368  0292                     	;# 
   369  0293                     	;# 
   370  0294                     	;# 
   371  0295                     	;# 
   372  0295                     	;# 
   373  0296                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  039A                     	;# 
   378  039C                     	;# 
   379  039D                     	;# 
   380  039E                     	;# 
   381  039F                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  0111                     	;# 
   438  0112                     	;# 
   439  0113                     	;# 
   440  0114                     	;# 
   441  0115                     	;# 
   442  0116                     	;# 
   443  0117                     	;# 
   444  0118                     	;# 
   445  0119                     	;# 
   446  011A                     	;# 
   447  011B                     	;# 
   448  011D                     	;# 
   449  011E                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0199                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0394                     	;# 
   498  0395                     	;# 
   499  0396                     	;# 
   500  039A                     	;# 
   501  039C                     	;# 
   502  039D                     	;# 
   503  039E                     	;# 
   504  039F                     	;# 
   505  0FE4                     	;# 
   506  0FE5                     	;# 
   507  0FE6                     	;# 
   508  0FE7                     	;# 
   509  0FE8                     	;# 
   510  0FE9                     	;# 
   511  0FEA                     	;# 
   512  0FEB                     	;# 
   513  0FED                     	;# 
   514  0FEE                     	;# 
   515  0FEF                     	;# 
   516  0000                     	;# 
   517  0001                     	;# 
   518  0002                     	;# 
   519  0003                     	;# 
   520  0004                     	;# 
   521  0005                     	;# 
   522  0006                     	;# 
   523  0007                     	;# 
   524  0008                     	;# 
   525  0009                     	;# 
   526  000A                     	;# 
   527  000B                     	;# 
   528  000C                     	;# 
   529  000D                     	;# 
   530  0011                     	;# 
   531  0012                     	;# 
   532  0015                     	;# 
   533  0016                     	;# 
   534  0016                     	;# 
   535  0017                     	;# 
   536  0018                     	;# 
   537  0019                     	;# 
   538  001A                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  001E                     	;# 
   542  001F                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  0091                     	;# 
   546  0092                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0097                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  0111                     	;# 
   561  0112                     	;# 
   562  0113                     	;# 
   563  0114                     	;# 
   564  0115                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011A                     	;# 
   570  011B                     	;# 
   571  011D                     	;# 
   572  011E                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  0191                     	;# 
   576  0191                     	;# 
   577  0192                     	;# 
   578  0193                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  020D                     	;# 
   597  0211                     	;# 
   598  0211                     	;# 
   599  0212                     	;# 
   600  0212                     	;# 
   601  0213                     	;# 
   602  0213                     	;# 
   603  0214                     	;# 
   604  0214                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0216                     	;# 
   609  0216                     	;# 
   610  0217                     	;# 
   611  0217                     	;# 
   612  0291                     	;# 
   613  0291                     	;# 
   614  0292                     	;# 
   615  0293                     	;# 
   616  0294                     	;# 
   617  0295                     	;# 
   618  0295                     	;# 
   619  0296                     	;# 
   620  0394                     	;# 
   621  0395                     	;# 
   622  0396                     	;# 
   623  039A                     	;# 
   624  039C                     	;# 
   625  039D                     	;# 
   626  039E                     	;# 
   627  039F                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639                           
   640                           	psect	stringtext
   641  06B4                     __pstringtext:	
   642  06B4                     _LedTable:	
   643  06B4  343F               	retlw	63
   644  06B5  3406               	retlw	6
   645  06B6  345B               	retlw	91
   646  06B7  344F               	retlw	79
   647  06B8  3466               	retlw	102
   648  06B9  346D               	retlw	109
   649  06BA  347D               	retlw	125
   650  06BB  3407               	retlw	7
   651  06BC  347F               	retlw	127
   652  06BD  346F               	retlw	111
   653  06BE  3477               	retlw	119
   654  06BF  347C               	retlw	124
   655  06C0  3439               	retlw	57
   656  06C1  345E               	retlw	94
   657  06C2  3479               	retlw	121
   658  06C3  3471               	retlw	113
   659  06C4                     __end_of_LedTable:	
   660                           
   661                           	psect	nvBANK0
   662  0024                     __pnvBANK0:	
   663  0024                     _timer1ReloadVal:	
   664  0024                     	ds	2
   665  000B                     _INTCONbits	set	11
   666  0011                     _PIR1bits	set	17
   667  000D                     _PORTB	set	13
   668  0018                     _T1CON	set	24
   669  0018                     _T1CONbits	set	24
   670  0019                     _T1GCON	set	25
   671  0019                     _T1GCONbits	set	25
   672  0015                     _TMR0	set	21
   673  0017                     _TMR1H	set	23
   674  0016                     _TMR1L	set	22
   675  005A                     _TMR0IF	set	90
   676  0088                     _TMR1IF	set	136
   677  0095                     _OPTION_REG	set	149
   678  0095                     _OPTION_REGbits	set	149
   679  0099                     _OSCCON	set	153
   680  009A                     _OSCSTAT	set	154
   681  0098                     _OSCTUNE	set	152
   682  008C                     _TRISA	set	140
   683  008D                     _TRISB	set	141
   684  011D                     _APFCON0	set	285
   685  011E                     _APFCON1	set	286
   686  010C                     _LATA	set	268
   687  010D                     _LATB	set	269
   688  0860                     _LATA0	set	2144
   689  0861                     _LATA1	set	2145
   690  018C                     _ANSELA	set	396
   691  018D                     _ANSELB	set	397
   692  020C                     _WPUA	set	524
   693  020D                     _WPUB	set	525
   694                           
   695                           ; #config settings
   696  0000                     
   697                           	psect	cinit
   698  07F8                     start_initialization:	
   699  07F8                     __initialization:	
   700                           
   701                           ; Clear objects allocated to COMMON
   702  07F8  01FC               	clrf	__pbssCOMMON& (0+127)
   703  07F9  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   704                           
   705                           ; Clear objects allocated to BANK0
   706  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   707  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   708  07FC  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   709  07FD  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   710  07FE                     end_of_initialization:	
   711                           ;End of C runtime variable initialization code
   712                           
   713  07FE                     __end_of__initialization:	
   714  07FE  0020               	movlb	0
   715  07FF  2F71               	ljmp	_main	;jump to C main() function
   716                           
   717                           	psect	bssCOMMON
   718  007C                     __pbssCOMMON:	
   719  007C                     _Sec:	
   720  007C                     	ds	1
   721  007D                     _timer0ReloadVal:	
   722  007D                     	ds	1
   723                           
   724                           	psect	bssBANK0
   725  0020                     __pbssBANK0:	
   726  0020                     _DSec:	
   727  0020                     	ds	1
   728  0021                     _MSec:	
   729  0021                     	ds	1
   730  0022                     _USec:	
   731  0022                     	ds	1
   732  0023                     _change:	
   733  0023                     	ds	1
   734                           
   735                           	psect	cstackCOMMON
   736  0070                     __pcstackCOMMON:	
   737  0070                     ?_OSCILLATOR_Initialize:	
   738  0070                     ??_OSCILLATOR_Initialize:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_TMR1_Initialize:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ??_TMR1_Initialize:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ??_TMR1_HasOverflowOccured:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_TMR1_Reload:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ??_TMR1_Reload:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?_TMR1_StartTimer:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ??_TMR1_StartTimer:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?_TMR0_Initialize:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ??_TMR0_Initialize:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ?_TMR0_Reload:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ??_TMR0_Reload:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ??_TMR0_HasOverflowOccured:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0070                     ?_PIN_MANAGER_Initialize:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0070                     ??_PIN_MANAGER_Initialize:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0070                     ?_SYSTEM_Initialize:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0070                     ??_SYSTEM_Initialize:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0070                     ?_main:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0070                     ?_TMR1_HasOverflowOccured:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0070                     ?_TMR0_HasOverflowOccured:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?___awdiv:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?___awmod:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0070                     ___awdiv@divisor:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0070                     ___awmod@divisor:	
   808                           ; 2 bytes @ 0x0
   809                           
   810                           
   811                           ; 2 bytes @ 0x0
   812  0070                     	ds	2
   813  0072                     ___awdiv@dividend:	
   814  0072                     ___awmod@dividend:	
   815                           ; 2 bytes @ 0x2
   816                           
   817                           
   818                           ; 2 bytes @ 0x2
   819  0072                     	ds	2
   820  0074                     ??___awdiv:	
   821  0074                     ??___awmod:	
   822                           ; 0 bytes @ 0x4
   823                           
   824                           
   825                           ; 0 bytes @ 0x4
   826  0074                     	ds	1
   827  0075                     ___awdiv@counter:	
   828  0075                     ___awmod@counter:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 1 bytes @ 0x5
   833  0075                     	ds	1
   834  0076                     ___awdiv@sign:	
   835  0076                     ___awmod@sign:	
   836                           ; 1 bytes @ 0x6
   837                           
   838                           
   839                           ; 1 bytes @ 0x6
   840  0076                     	ds	1
   841  0077                     ___awdiv@quotient:	
   842                           
   843                           ; 2 bytes @ 0x7
   844  0077                     	ds	2
   845  0079                     ??_main:	
   846                           
   847                           ; 0 bytes @ 0x9
   848  0079                     	ds	3
   849                           
   850                           	psect	maintext
   851  0771                     __pmaintext:	
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 59 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : B1F/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   871 ;;      Params:         0       0       0       0
   872 ;;      Locals:         0       0       0       0
   873 ;;      Temps:          3       0       0       0
   874 ;;      Totals:         3       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels required when called:    3
   877 ;; This function calls:
   878 ;;		_SYSTEM_Initialize
   879 ;;		_TMR0_HasOverflowOccured
   880 ;;		_TMR0_Initialize
   881 ;;		_TMR0_Reload
   882 ;;		_TMR1_HasOverflowOccured
   883 ;;		_TMR1_Initialize
   884 ;;		_TMR1_Reload
   885 ;;		___awdiv
   886 ;;		___awmod
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _main
   894  0771                     _main:	
   895                           
   896                           ;main.c: 61: SYSTEM_Initialize();
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   900  0771  268A               	fcall	_SYSTEM_Initialize
   901                           
   902                           ;main.c: 78: TMR0_Initialize();
   903  0772  269B               	fcall	_TMR0_Initialize
   904                           
   905                           ;main.c: 79: TMR1_Initialize();
   906  0773  26A5               	fcall	_TMR1_Initialize
   907  0774                     l107:	
   908                           ;main.c: 81: while (1) {
   909                           
   910                           
   911                           ;main.c: 84: if(TMR1_HasOverflowOccured()){
   912  0774  2686               	fcall	_TMR1_HasOverflowOccured
   913  0775  3A00               	xorlw	0
   914  0776  1903               	skipnz
   915  0777  2F8C               	goto	l1046
   916                           
   917                           ;main.c: 86: TMR1IF = 0;
   918  0778  0020               	movlb	0	; select bank0
   919  0779  1011               	bcf	17,0	;volatile
   920                           
   921                           ;main.c: 88: MSec++;
   922  077A  3001               	movlw	1
   923  077B  00F9               	movwf	??_main
   924  077C  0879               	movf	??_main,w
   925  077D  07A1               	addwf	_MSec,f
   926                           
   927                           ;main.c: 90: if(MSec == 10){
   928  077E  300A               	movlw	10
   929  077F  0621               	xorwf	_MSec,w
   930  0780  1D03               	btfss	3,2
   931  0781  2F8B               	goto	l1044
   932                           
   933                           ;main.c: 91: MSec = 0;
   934  0782  01A1               	clrf	_MSec
   935                           
   936                           ;main.c: 92: Sec++;
   937  0783  3001               	movlw	1
   938  0784  00F9               	movwf	??_main
   939  0785  0879               	movf	??_main,w
   940  0786  07FC               	addwf	_Sec,f
   941                           
   942                           ;main.c: 94: if(Sec == 60)
   943  0787  303C               	movlw	60
   944  0788  067C               	xorwf	_Sec,w
   945  0789  1903               	btfsc	3,2
   946                           
   947                           ;main.c: 95: Sec = 0;
   948  078A  01FC               	clrf	_Sec
   949  078B                     l1044:	
   950                           
   951                           ;main.c: 96: }
   952                           ;main.c: 98: TMR1_Reload();
   953  078B  2695               	fcall	_TMR1_Reload
   954  078C                     l1046:	
   955                           
   956                           ;main.c: 99: }
   957                           ;main.c: 101: DSec = Sec / 10;
   958  078C  300A               	movlw	10
   959  078D  00F0               	movwf	___awdiv@divisor
   960  078E  3000               	movlw	0
   961  078F  00F1               	movwf	___awdiv@divisor+1
   962  0790  087C               	movf	_Sec,w
   963  0791  00F9               	movwf	??_main
   964  0792  01FA               	clrf	??_main+1
   965  0793  0879               	movf	??_main,w
   966  0794  00F2               	movwf	___awdiv@dividend
   967  0795  087A               	movf	??_main+1,w
   968  0796  00F3               	movwf	___awdiv@dividend+1
   969  0797  2720               	fcall	___awdiv
   970  0798  0870               	movf	?___awdiv,w
   971  0799  00FB               	movwf	??_main+2
   972  079A  087B               	movf	??_main+2,w
   973  079B  0020               	movlb	0	; select bank0
   974  079C  00A0               	movwf	_DSec
   975                           
   976                           ;main.c: 102: USec = Sec % 10;
   977  079D  300A               	movlw	10
   978  079E  00F0               	movwf	___awmod@divisor
   979  079F  3000               	movlw	0
   980  07A0  00F1               	movwf	___awmod@divisor+1
   981  07A1  087C               	movf	_Sec,w
   982  07A2  00F9               	movwf	??_main
   983  07A3  01FA               	clrf	??_main+1
   984  07A4  0879               	movf	??_main,w
   985  07A5  00F2               	movwf	___awmod@dividend
   986  07A6  087A               	movf	??_main+1,w
   987  07A7  00F3               	movwf	___awmod@dividend+1
   988  07A8  26DB               	fcall	___awmod
   989  07A9  0870               	movf	?___awmod,w
   990  07AA  00FB               	movwf	??_main+2
   991  07AB  087B               	movf	??_main+2,w
   992  07AC  0020               	movlb	0	; select bank0
   993  07AD  00A2               	movwf	_USec
   994                           
   995                           ;main.c: 106: if(TMR0_HasOverflowOccured()){
   996  07AE  267E               	fcall	_TMR0_HasOverflowOccured
   997  07AF  3A00               	xorlw	0
   998  07B0  1903               	skipnz
   999  07B1  2F74               	goto	l107
  1000                           
  1001                           ;main.c: 108: TMR0IF = 0;
  1002  07B2  110B               	bcf	11,2	;volatile
  1003                           
  1004                           ;main.c: 110: switch(change){
  1005  07B3  2FEA               	goto	l1086
  1006  07B4                     l1054:	
  1007                           ;main.c: 112: case 0:
  1008                           
  1009                           
  1010                           ;main.c: 113: PORTB = 0;
  1011  07B4  0020               	movlb	0	; select bank0
  1012  07B5  018D               	clrf	13	;volatile
  1013                           
  1014                           ;main.c: 114: do { LATA0 = 1; } while(0);
  1015  07B6  0022               	movlb	2	; select bank2
  1016  07B7  140C               	bsf	12,0	;volatile
  1017                           
  1018                           ;main.c: 115: do { LATA1 = 0; } while(0);
  1019  07B8  108C               	bcf	12,1	;volatile
  1020                           
  1021                           ;main.c: 116: PORTB = LedTable[DSec];
  1022  07B9  0020               	movlb	0	; select bank0
  1023  07BA  0820               	movf	_DSec,w
  1024  07BB  3EB4               	addlw	low (_LedTable| (0+32768))
  1025  07BC  0084               	movwf	4
  1026  07BD  3086               	movlw	high (_LedTable| (0+32768))
  1027  07BE  1803               	skipnc
  1028  07BF  3E01               	addlw	1
  1029  07C0  0085               	movwf	5
  1030  07C1  0800               	movf	0,w	;code access
  1031  07C2  008D               	movwf	13	;volatile
  1032                           
  1033                           ;main.c: 117: change = 1;
  1034  07C3  01A3               	clrf	_change
  1035  07C4  0AA3               	incf	_change,f
  1036                           
  1037                           ;main.c: 118: break;
  1038  07C5  2FF6               	goto	l1088
  1039  07C6                     l1064:	
  1040                           ;main.c: 120: case 1:
  1041                           
  1042                           
  1043                           ;main.c: 121: PORTB = 0;
  1044  07C6  018D               	clrf	13	;volatile
  1045                           
  1046                           ;main.c: 122: do { LATA0 = 0; } while(0);
  1047  07C7  0022               	movlb	2	; select bank2
  1048  07C8  100C               	bcf	12,0	;volatile
  1049                           
  1050                           ;main.c: 123: do { LATA1 = 1; } while(0);
  1051  07C9  148C               	bsf	12,1	;volatile
  1052                           
  1053                           ;main.c: 124: PORTB = LedTable[USec] | 0x80;
  1054  07CA  0020               	movlb	0	; select bank0
  1055  07CB  0822               	movf	_USec,w
  1056  07CC  3EB4               	addlw	low (_LedTable| (0+32768))
  1057  07CD  0084               	movwf	4
  1058  07CE  3086               	movlw	high (_LedTable| (0+32768))
  1059  07CF  1803               	skipnc
  1060  07D0  3E01               	addlw	1
  1061  07D1  0085               	movwf	5
  1062  07D2  0800               	movf	0,w	;code access
  1063  07D3  3880               	iorlw	128
  1064  07D4  008D               	movwf	13	;volatile
  1065                           
  1066                           ;main.c: 125: change = 2;
  1067  07D5  3002               	movlw	2
  1068  07D6  00F9               	movwf	??_main
  1069  07D7  0879               	movf	??_main,w
  1070  07D8  00A3               	movwf	_change
  1071                           
  1072                           ;main.c: 126: break;
  1073  07D9  2FF6               	goto	l1088
  1074  07DA                     l1074:	
  1075                           ;main.c: 128: case 2:
  1076                           
  1077                           
  1078                           ;main.c: 129: PORTB = 0;
  1079  07DA  018D               	clrf	13	;volatile
  1080                           
  1081                           ;main.c: 130: do { LATA0 = 0; } while(0);
  1082  07DB  0022               	movlb	2	; select bank2
  1083  07DC  100C               	bcf	12,0	;volatile
  1084                           
  1085                           ;main.c: 131: do { LATA1 = 0; } while(0);
  1086  07DD  108C               	bcf	12,1	;volatile
  1087                           
  1088                           ;main.c: 132: PORTB = LedTable[MSec];
  1089  07DE  0020               	movlb	0	; select bank0
  1090  07DF  0821               	movf	_MSec,w
  1091  07E0  3EB4               	addlw	low (_LedTable| (0+32768))
  1092  07E1  0084               	movwf	4
  1093  07E2  3086               	movlw	high (_LedTable| (0+32768))
  1094  07E3  1803               	skipnc
  1095  07E4  3E01               	addlw	1
  1096  07E5  0085               	movwf	5
  1097  07E6  0800               	movf	0,w	;code access
  1098  07E7  008D               	movwf	13	;volatile
  1099                           
  1100                           ;main.c: 133: change = 0;
  1101  07E8  01A3               	clrf	_change
  1102                           
  1103                           ;main.c: 136: }
  1104                           
  1105                           ;main.c: 134: break;
  1106  07E9  2FF6               	goto	l1088
  1107  07EA                     l1086:	
  1108  07EA  0020               	movlb	0	; select bank0
  1109  07EB  0823               	movf	_change,w
  1110                           
  1111                           ; Switch size 1, requested type "space"
  1112                           ; Number of cases is 3, Range of values is 0 to 2
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte           10     6 (average)
  1116                           ; direct_byte           12     6 (fixed)
  1117                           ; jumptable            260     6 (fixed)
  1118                           ;	Chosen strategy is simple_byte
  1119  07EC  3A00               	xorlw	0	; case 0
  1120  07ED  1903               	skipnz
  1121  07EE  2FB4               	goto	l1054
  1122  07EF  3A01               	xorlw	1	; case 1
  1123  07F0  1903               	skipnz
  1124  07F1  2FC6               	goto	l1064
  1125  07F2  3A03               	xorlw	3	; case 2
  1126  07F3  1903               	skipnz
  1127  07F4  2FDA               	goto	l1074
  1128  07F5  2FF6               	goto	l1088
  1129  07F6                     l1088:	
  1130                           
  1131                           ;main.c: 138: TMR0_Reload();
  1132  07F6  2682               	fcall	_TMR0_Reload
  1133  07F7  2F74               	goto	l107
  1134  07F8                     __end_of_main:	
  1135                           
  1136                           	psect	text1
  1137  06DB                     __ptext1:	
  1138 ;; *************** function ___awmod *****************
  1139 ;; Defined at:
  1140 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  divisor         2    0[COMMON] int 
  1143 ;;  dividend        2    2[COMMON] int 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  sign            1    6[COMMON] unsigned char 
  1146 ;;  counter         1    5[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2    0[COMMON] int 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1156 ;;      Params:         4       0       0       0
  1157 ;;      Locals:         2       0       0       0
  1158 ;;      Temps:          1       0       0       0
  1159 ;;      Totals:         7       0       0       0
  1160 ;;Total ram usage:        7 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function ___awmod
  1171  06DB                     ___awmod:	
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1175  06DB  01F6               	clrf	___awmod@sign
  1176  06DC  1FF3               	btfss	___awmod@dividend+1,7
  1177  06DD  2EE5               	goto	l1000
  1178  06DE  09F2               	comf	___awmod@dividend,f
  1179  06DF  09F3               	comf	___awmod@dividend+1,f
  1180  06E0  0AF2               	incf	___awmod@dividend,f
  1181  06E1  1903               	skipnz
  1182  06E2  0AF3               	incf	___awmod@dividend+1,f
  1183  06E3  01F6               	clrf	___awmod@sign
  1184  06E4  0AF6               	incf	___awmod@sign,f
  1185  06E5                     l1000:	
  1186  06E5  1FF1               	btfss	___awmod@divisor+1,7
  1187  06E6  2EEC               	goto	l1004
  1188  06E7  09F0               	comf	___awmod@divisor,f
  1189  06E8  09F1               	comf	___awmod@divisor+1,f
  1190  06E9  0AF0               	incf	___awmod@divisor,f
  1191  06EA  1903               	skipnz
  1192  06EB  0AF1               	incf	___awmod@divisor+1,f
  1193  06EC                     l1004:	
  1194  06EC  0870               	movf	___awmod@divisor,w
  1195  06ED  0471               	iorwf	___awmod@divisor+1,w
  1196  06EE  1903               	btfsc	3,2
  1197  06EF  2F13               	goto	l1022
  1198  06F0  01F5               	clrf	___awmod@counter
  1199  06F1  0AF5               	incf	___awmod@counter,f
  1200  06F2                     l1012:	
  1201  06F2  1BF1               	btfsc	___awmod@divisor+1,7
  1202  06F3  2EFE               	goto	l1014
  1203  06F4  3001               	movlw	1
  1204  06F5                     u385:	
  1205  06F5  35F0               	lslf	___awmod@divisor,f
  1206  06F6  0DF1               	rlf	___awmod@divisor+1,f
  1207  06F7  0B89               	decfsz	9,f
  1208  06F8  2EF5               	goto	u385
  1209  06F9  3001               	movlw	1
  1210  06FA  00F4               	movwf	??___awmod
  1211  06FB  0874               	movf	??___awmod,w
  1212  06FC  07F5               	addwf	___awmod@counter,f
  1213  06FD  2EF2               	goto	l1012
  1214  06FE                     l1014:	
  1215  06FE  0871               	movf	___awmod@divisor+1,w
  1216  06FF  0273               	subwf	___awmod@dividend+1,w
  1217  0700  1D03               	skipz
  1218  0701  2F04               	goto	u405
  1219  0702  0870               	movf	___awmod@divisor,w
  1220  0703  0272               	subwf	___awmod@dividend,w
  1221  0704                     u405:	
  1222  0704  1C03               	skipc
  1223  0705  2F0A               	goto	l1018
  1224  0706  0870               	movf	___awmod@divisor,w
  1225  0707  02F2               	subwf	___awmod@dividend,f
  1226  0708  0871               	movf	___awmod@divisor+1,w
  1227  0709  3BF3               	subwfb	___awmod@dividend+1,f
  1228  070A                     l1018:	
  1229  070A  3001               	movlw	1
  1230  070B                     u415:	
  1231  070B  36F1               	lsrf	___awmod@divisor+1,f
  1232  070C  0CF0               	rrf	___awmod@divisor,f
  1233  070D  0B89               	decfsz	9,f
  1234  070E  2F0B               	goto	u415
  1235  070F  3001               	movlw	1
  1236  0710  02F5               	subwf	___awmod@counter,f
  1237  0711  1D03               	btfss	3,2
  1238  0712  2EFE               	goto	l1014
  1239  0713                     l1022:	
  1240  0713  0876               	movf	___awmod@sign,w
  1241  0714  1903               	btfsc	3,2
  1242  0715  2F1B               	goto	l1026
  1243  0716  09F2               	comf	___awmod@dividend,f
  1244  0717  09F3               	comf	___awmod@dividend+1,f
  1245  0718  0AF2               	incf	___awmod@dividend,f
  1246  0719  1903               	skipnz
  1247  071A  0AF3               	incf	___awmod@dividend+1,f
  1248  071B                     l1026:	
  1249  071B  0873               	movf	___awmod@dividend+1,w
  1250  071C  00F1               	movwf	?___awmod+1
  1251  071D  0872               	movf	___awmod@dividend,w
  1252  071E  00F0               	movwf	?___awmod
  1253  071F  0008               	return
  1254  0720                     __end_of___awmod:	
  1255                           
  1256                           	psect	text2
  1257  0720                     __ptext2:	
  1258 ;; *************** function ___awdiv *****************
  1259 ;; Defined at:
  1260 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  divisor         2    0[COMMON] int 
  1263 ;;  dividend        2    2[COMMON] int 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  quotient        2    7[COMMON] int 
  1266 ;;  sign            1    6[COMMON] unsigned char 
  1267 ;;  counter         1    5[COMMON] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2    0[COMMON] int 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1277 ;;      Params:         4       0       0       0
  1278 ;;      Locals:         4       0       0       0
  1279 ;;      Temps:          1       0       0       0
  1280 ;;      Totals:         9       0       0       0
  1281 ;;Total ram usage:        9 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function ___awdiv
  1292  0720                     ___awdiv:	
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1296  0720  01F6               	clrf	___awdiv@sign
  1297  0721  1FF1               	btfss	___awdiv@divisor+1,7
  1298  0722  2F2A               	goto	l956
  1299  0723  09F0               	comf	___awdiv@divisor,f
  1300  0724  09F1               	comf	___awdiv@divisor+1,f
  1301  0725  0AF0               	incf	___awdiv@divisor,f
  1302  0726  1903               	skipnz
  1303  0727  0AF1               	incf	___awdiv@divisor+1,f
  1304  0728  01F6               	clrf	___awdiv@sign
  1305  0729  0AF6               	incf	___awdiv@sign,f
  1306  072A                     l956:	
  1307  072A  1FF3               	btfss	___awdiv@dividend+1,7
  1308  072B  2F35               	goto	l962
  1309  072C  09F2               	comf	___awdiv@dividend,f
  1310  072D  09F3               	comf	___awdiv@dividend+1,f
  1311  072E  0AF2               	incf	___awdiv@dividend,f
  1312  072F  1903               	skipnz
  1313  0730  0AF3               	incf	___awdiv@dividend+1,f
  1314  0731  3001               	movlw	1
  1315  0732  00F4               	movwf	??___awdiv
  1316  0733  0874               	movf	??___awdiv,w
  1317  0734  06F6               	xorwf	___awdiv@sign,f
  1318  0735                     l962:	
  1319  0735  01F7               	clrf	___awdiv@quotient
  1320  0736  01F8               	clrf	___awdiv@quotient+1
  1321  0737  0870               	movf	___awdiv@divisor,w
  1322  0738  0471               	iorwf	___awdiv@divisor+1,w
  1323  0739  1903               	btfsc	3,2
  1324  073A  2F64               	goto	l984
  1325  073B  01F5               	clrf	___awdiv@counter
  1326  073C  0AF5               	incf	___awdiv@counter,f
  1327  073D                     l972:	
  1328  073D  1BF1               	btfsc	___awdiv@divisor+1,7
  1329  073E  2F49               	goto	l974
  1330  073F  3001               	movlw	1
  1331  0740                     u285:	
  1332  0740  35F0               	lslf	___awdiv@divisor,f
  1333  0741  0DF1               	rlf	___awdiv@divisor+1,f
  1334  0742  0B89               	decfsz	9,f
  1335  0743  2F40               	goto	u285
  1336  0744  3001               	movlw	1
  1337  0745  00F4               	movwf	??___awdiv
  1338  0746  0874               	movf	??___awdiv,w
  1339  0747  07F5               	addwf	___awdiv@counter,f
  1340  0748  2F3D               	goto	l972
  1341  0749                     l974:	
  1342  0749  3001               	movlw	1
  1343  074A                     u305:	
  1344  074A  35F7               	lslf	___awdiv@quotient,f
  1345  074B  0DF8               	rlf	___awdiv@quotient+1,f
  1346  074C  0B89               	decfsz	9,f
  1347  074D  2F4A               	goto	u305
  1348  074E  0871               	movf	___awdiv@divisor+1,w
  1349  074F  0273               	subwf	___awdiv@dividend+1,w
  1350  0750  1D03               	skipz
  1351  0751  2F54               	goto	u315
  1352  0752  0870               	movf	___awdiv@divisor,w
  1353  0753  0272               	subwf	___awdiv@dividend,w
  1354  0754                     u315:	
  1355  0754  1C03               	skipc
  1356  0755  2F5B               	goto	l980
  1357  0756  0870               	movf	___awdiv@divisor,w
  1358  0757  02F2               	subwf	___awdiv@dividend,f
  1359  0758  0871               	movf	___awdiv@divisor+1,w
  1360  0759  3BF3               	subwfb	___awdiv@dividend+1,f
  1361  075A  1477               	bsf	___awdiv@quotient,0
  1362  075B                     l980:	
  1363  075B  3001               	movlw	1
  1364  075C                     u325:	
  1365  075C  36F1               	lsrf	___awdiv@divisor+1,f
  1366  075D  0CF0               	rrf	___awdiv@divisor,f
  1367  075E  0B89               	decfsz	9,f
  1368  075F  2F5C               	goto	u325
  1369  0760  3001               	movlw	1
  1370  0761  02F5               	subwf	___awdiv@counter,f
  1371  0762  1D03               	btfss	3,2
  1372  0763  2F49               	goto	l974
  1373  0764                     l984:	
  1374  0764  0876               	movf	___awdiv@sign,w
  1375  0765  1903               	btfsc	3,2
  1376  0766  2F6C               	goto	l988
  1377  0767  09F7               	comf	___awdiv@quotient,f
  1378  0768  09F8               	comf	___awdiv@quotient+1,f
  1379  0769  0AF7               	incf	___awdiv@quotient,f
  1380  076A  1903               	skipnz
  1381  076B  0AF8               	incf	___awdiv@quotient+1,f
  1382  076C                     l988:	
  1383  076C  0878               	movf	___awdiv@quotient+1,w
  1384  076D  00F1               	movwf	?___awdiv+1
  1385  076E  0877               	movf	___awdiv@quotient,w
  1386  076F  00F0               	movwf	?___awdiv
  1387  0770  0008               	return
  1388  0771                     __end_of___awdiv:	
  1389                           
  1390                           	psect	text3
  1391  0695                     __ptext3:	
  1392 ;; *************** function _TMR1_Reload *****************
  1393 ;; Defined at:
  1394 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;		None               void
  1401 ;; Registers used:
  1402 ;;		wreg, status,2
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1408 ;;      Params:         0       0       0       0
  1409 ;;      Locals:         0       0       0       0
  1410 ;;      Temps:          0       0       0       0
  1411 ;;      Totals:         0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _TMR1_Reload
  1423  0695                     _TMR1_Reload:	
  1424                           
  1425                           ;tmr1.c: 126: TMR1H = (timer1ReloadVal >> 8);
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _TMR1_Reload: [wreg+status,2]
  1429  0695  0020               	movlb	0	; select bank0
  1430  0696  0825               	movf	_timer1ReloadVal+1,w	;volatile
  1431  0697  0097               	movwf	23	;volatile
  1432                           
  1433                           ;tmr1.c: 127: TMR1L = timer1ReloadVal;
  1434  0698  0824               	movf	_timer1ReloadVal,w	;volatile
  1435  0699  0096               	movwf	22	;volatile
  1436  069A  0008               	return
  1437  069B                     __end_of_TMR1_Reload:	
  1438                           
  1439                           	psect	text4
  1440  0686                     __ptext4:	
  1441 ;; *************** function _TMR1_HasOverflowOccured *****************
  1442 ;; Defined at:
  1443 ;;		line 138 in file "mcc_generated_files/tmr1.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1457 ;;      Params:         0       0       0       0
  1458 ;;      Locals:         0       0       0       0
  1459 ;;      Temps:          0       0       0       0
  1460 ;;      Totals:         0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _TMR1_HasOverflowOccured
  1472  0686                     _TMR1_HasOverflowOccured:	
  1473                           
  1474                           ;tmr1.c: 140: return (PIR1bits.TMR1IF);
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
  1478  0686  0020               	movlb	0	; select bank0
  1479  0687  0811               	movf	17,w	;volatile
  1480  0688  3901               	andlw	1
  1481  0689  0008               	return
  1482  068A                     __end_of_TMR1_HasOverflowOccured:	
  1483                           
  1484                           	psect	text5
  1485  0682                     __ptext5:	
  1486 ;; *************** function _TMR0_Reload *****************
  1487 ;; Defined at:
  1488 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1502 ;;      Params:         0       0       0       0
  1503 ;;      Locals:         0       0       0       0
  1504 ;;      Temps:          0       0       0       0
  1505 ;;      Totals:         0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _TMR0_Reload
  1517  0682                     _TMR0_Reload:	
  1518                           
  1519                           ;tmr0.c: 95: TMR0 = timer0ReloadVal;
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _TMR0_Reload: [wreg]
  1523  0682  087D               	movf	_timer0ReloadVal,w	;volatile
  1524  0683  0020               	movlb	0	; select bank0
  1525  0684  0095               	movwf	21	;volatile
  1526  0685  0008               	return
  1527  0686                     __end_of_TMR0_Reload:	
  1528                           
  1529                           	psect	text6
  1530  067E                     __ptext6:	
  1531 ;; *************** function _TMR0_HasOverflowOccured *****************
  1532 ;; Defined at:
  1533 ;;		line 98 in file "mcc_generated_files/tmr0.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1547 ;;      Params:         0       0       0       0
  1548 ;;      Locals:         0       0       0       0
  1549 ;;      Temps:          0       0       0       0
  1550 ;;      Totals:         0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _TMR0_HasOverflowOccured
  1562  067E                     _TMR0_HasOverflowOccured:	
  1563                           
  1564                           ;tmr0.c: 100: return (INTCONbits.TMR0IF);
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  1568  067E  0C0B               	rrf	11,w	;volatile
  1569  067F  0C89               	rrf	9,f
  1570  0680  3901               	andlw	1
  1571  0681  0008               	return
  1572  0682                     __end_of_TMR0_HasOverflowOccured:	
  1573                           
  1574                           	psect	text7
  1575  068A                     __ptext7:	
  1576 ;; *************** function _SYSTEM_Initialize *****************
  1577 ;; Defined at:
  1578 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;		None               void
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1592 ;;      Params:         0       0       0       0
  1593 ;;      Locals:         0       0       0       0
  1594 ;;      Temps:          0       0       0       0
  1595 ;;      Totals:         0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    2
  1599 ;; This function calls:
  1600 ;;		_OSCILLATOR_Initialize
  1601 ;;		_PIN_MANAGER_Initialize
  1602 ;;		_TMR0_Initialize
  1603 ;;		_TMR1_Initialize
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _SYSTEM_Initialize
  1611  068A                     _SYSTEM_Initialize:	
  1612                           
  1613                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1617  068A  268F               	fcall	_OSCILLATOR_Initialize
  1618                           
  1619                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1620  068B  26C4               	fcall	_PIN_MANAGER_Initialize
  1621                           
  1622                           ;mcc.c: 73: TMR0_Initialize();
  1623  068C  269B               	fcall	_TMR0_Initialize
  1624                           
  1625                           ;mcc.c: 74: TMR1_Initialize();
  1626  068D  26A5               	fcall	_TMR1_Initialize
  1627  068E  0008               	return
  1628  068F                     __end_of_SYSTEM_Initialize:	
  1629                           
  1630                           	psect	text8
  1631  06A5                     __ptext8:	
  1632 ;; *************** function _TMR1_Initialize *****************
  1633 ;; Defined at:
  1634 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;		None               void
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1648 ;;      Params:         0       0       0       0
  1649 ;;      Locals:         0       0       0       0
  1650 ;;      Temps:          0       0       0       0
  1651 ;;      Totals:         0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    1
  1655 ;; This function calls:
  1656 ;;		_TMR1_StartTimer
  1657 ;; This function is called by:
  1658 ;;		_SYSTEM_Initialize
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _TMR1_Initialize
  1665  06A5                     _TMR1_Initialize:	
  1666                           
  1667                           ;tmr1.c: 67: T1CON = 0x30;
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1671  06A5  3030               	movlw	48
  1672  06A6  0020               	movlb	0	; select bank0
  1673  06A7  0098               	movwf	24	;volatile
  1674                           
  1675                           ;tmr1.c: 70: T1GCON = 0x00;
  1676  06A8  0199               	clrf	25	;volatile
  1677                           
  1678                           ;tmr1.c: 73: TMR1H = 0x3C;
  1679  06A9  303C               	movlw	60
  1680  06AA  0097               	movwf	23	;volatile
  1681                           
  1682                           ;tmr1.c: 76: TMR1L = 0xB0;
  1683  06AB  30B0               	movlw	176
  1684  06AC  0096               	movwf	22	;volatile
  1685                           
  1686                           ;tmr1.c: 79: timer1ReloadVal = (TMR1H << 8) | TMR1L;
  1687  06AD  0817               	movf	23,w	;volatile
  1688  06AE  00A5               	movwf	_timer1ReloadVal+1	;volatile
  1689  06AF  0816               	movf	22,w	;volatile
  1690  06B0  00A4               	movwf	_timer1ReloadVal	;volatile
  1691                           
  1692                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  1693  06B1  1011               	bcf	17,0	;volatile
  1694                           
  1695                           ;tmr1.c: 85: TMR1_StartTimer();
  1696  06B2  267B               	fcall	_TMR1_StartTimer
  1697  06B3  0008               	return
  1698  06B4                     __end_of_TMR1_Initialize:	
  1699                           
  1700                           	psect	text9
  1701  067B                     __ptext9:	
  1702 ;; *************** function _TMR1_StartTimer *****************
  1703 ;; Defined at:
  1704 ;;		line 88 in file "mcc_generated_files/tmr1.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;		None               void
  1711 ;; Registers used:
  1712 ;;		None
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1718 ;;      Params:         0       0       0       0
  1719 ;;      Locals:         0       0       0       0
  1720 ;;      Temps:          0       0       0       0
  1721 ;;      Totals:         0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_TMR1_Initialize
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _TMR1_StartTimer
  1733  067B                     _TMR1_StartTimer:	
  1734                           
  1735                           ;tmr1.c: 90: T1CONbits.TMR1ON = 1;
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _TMR1_StartTimer: []
  1739  067B  0020               	movlb	0	; select bank0
  1740  067C  1418               	bsf	24,0	;volatile
  1741  067D  0008               	return
  1742  067E                     __end_of_TMR1_StartTimer:	
  1743                           
  1744                           	psect	text10
  1745  069B                     __ptext10:	
  1746 ;; *************** function _TMR0_Initialize *****************
  1747 ;; Defined at:
  1748 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;		None               void
  1755 ;; Registers used:
  1756 ;;		wreg, status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1762 ;;      Params:         0       0       0       0
  1763 ;;      Locals:         0       0       0       0
  1764 ;;      Temps:          0       0       0       0
  1765 ;;      Totals:         0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_SYSTEM_Initialize
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _TMR0_Initialize
  1778  069B                     _TMR0_Initialize:	
  1779                           
  1780                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD4 & 0x3F;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1784  069B  0021               	movlb	1	; select bank1
  1785  069C  0815               	movf	21,w	;volatile
  1786  069D  39C0               	andlw	192
  1787  069E  3814               	iorlw	20
  1788  069F  0095               	movwf	21	;volatile
  1789                           
  1790                           ;tmr0.c: 71: TMR0 = 0x00;
  1791  06A0  0020               	movlb	0	; select bank0
  1792  06A1  0195               	clrf	21	;volatile
  1793                           
  1794                           ;tmr0.c: 74: timer0ReloadVal = 0;
  1795  06A2  01FD               	clrf	_timer0ReloadVal	;volatile
  1796                           
  1797                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  1798  06A3  110B               	bcf	11,2	;volatile
  1799  06A4  0008               	return
  1800  06A5                     __end_of_TMR0_Initialize:	
  1801                           
  1802                           	psect	text11
  1803  06C4                     __ptext11:	
  1804 ;; *************** function _PIN_MANAGER_Initialize *****************
  1805 ;; Defined at:
  1806 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, status,2
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1820 ;;      Params:         0       0       0       0
  1821 ;;      Locals:         0       0       0       0
  1822 ;;      Temps:          0       0       0       0
  1823 ;;      Totals:         0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_SYSTEM_Initialize
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _PIN_MANAGER_Initialize
  1835  06C4                     _PIN_MANAGER_Initialize:	
  1836                           
  1837                           ;pin_manager.c: 51: LATA = 0x00;
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1841  06C4  0022               	movlb	2	; select bank2
  1842  06C5  018C               	clrf	12	;volatile
  1843                           
  1844                           ;pin_manager.c: 52: TRISA = 0xFC;
  1845  06C6  30FC               	movlw	252
  1846  06C7  0021               	movlb	1	; select bank1
  1847  06C8  008C               	movwf	12	;volatile
  1848                           
  1849                           ;pin_manager.c: 53: ANSELA = 0x00;
  1850  06C9  0023               	movlb	3	; select bank3
  1851  06CA  018C               	clrf	12	;volatile
  1852                           
  1853                           ;pin_manager.c: 54: WPUA = 0x00;
  1854  06CB  0024               	movlb	4	; select bank4
  1855  06CC  018C               	clrf	12	;volatile
  1856                           
  1857                           ;pin_manager.c: 56: LATB = 0x00;
  1858  06CD  0022               	movlb	2	; select bank2
  1859  06CE  018D               	clrf	13	;volatile
  1860                           
  1861                           ;pin_manager.c: 57: TRISB = 0x00;
  1862  06CF  0021               	movlb	1	; select bank1
  1863  06D0  018D               	clrf	13	;volatile
  1864                           
  1865                           ;pin_manager.c: 58: ANSELB = 0x00;
  1866  06D1  0023               	movlb	3	; select bank3
  1867  06D2  018D               	clrf	13	;volatile
  1868                           
  1869                           ;pin_manager.c: 59: WPUB = 0x00;
  1870  06D3  0024               	movlb	4	; select bank4
  1871  06D4  018D               	clrf	13	;volatile
  1872                           
  1873                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  1874  06D5  0021               	movlb	1	; select bank1
  1875  06D6  1795               	bsf	21,7	;volatile
  1876                           
  1877                           ;pin_manager.c: 63: APFCON0 = 0x00;
  1878  06D7  0022               	movlb	2	; select bank2
  1879  06D8  019D               	clrf	29	;volatile
  1880                           
  1881                           ;pin_manager.c: 65: APFCON1 = 0x00;
  1882  06D9  019E               	clrf	30	;volatile
  1883  06DA  0008               	return
  1884  06DB                     __end_of_PIN_MANAGER_Initialize:	
  1885                           
  1886                           	psect	text12
  1887  068F                     __ptext12:	
  1888 ;; *************** function _OSCILLATOR_Initialize *****************
  1889 ;; Defined at:
  1890 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;		None               void
  1897 ;; Registers used:
  1898 ;;		wreg, status,2
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1904 ;;      Params:         0       0       0       0
  1905 ;;      Locals:         0       0       0       0
  1906 ;;      Temps:          0       0       0       0
  1907 ;;      Totals:         0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_SYSTEM_Initialize
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _OSCILLATOR_Initialize
  1919  068F                     _OSCILLATOR_Initialize:	
  1920                           
  1921                           ;mcc.c: 79: OSCCON = 0x7A;
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1925  068F  307A               	movlw	122
  1926  0690  0021               	movlb	1	; select bank1
  1927  0691  0099               	movwf	25	;volatile
  1928                           
  1929                           ;mcc.c: 81: OSCSTAT = 0x00;
  1930  0692  019A               	clrf	26	;volatile
  1931                           
  1932                           ;mcc.c: 83: OSCTUNE = 0x00;
  1933  0693  0198               	clrf	24	;volatile
  1934  0694  0008               	return
  1935  0695                     __end_of_OSCILLATOR_Initialize:	
  1936  007E                     btemp	set	126	;btemp
  1937  007E                     wtemp	set	126
  1938  007E                     wtemp0	set	126
  1939  0080                     wtemp1	set	128
  1940  0082                     wtemp2	set	130
  1941  0084                     wtemp3	set	132
  1942  0086                     wtemp4	set	134
  1943  0088                     wtemp5	set	136
  1944  007F                     wtemp6	set	127
  1945  007E                     ttemp	set	126
  1946  007E                     ttemp0	set	126
  1947  0081                     ttemp1	set	129
  1948  0084                     ttemp2	set	132
  1949  0087                     ttemp3	set	135
  1950  007F                     ttemp4	set	127
  1951  007E                     ltemp	set	126
  1952  007E                     ltemp0	set	126
  1953  0082                     ltemp1	set	130
  1954  0086                     ltemp2	set	134
  1955  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     808
                                              9 COMMON     3     3      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
                        _TMR0_Reload
            _TMR1_HasOverflowOccured
                    _TMR1_Initialize
                        _TMR1_Reload
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR0_Reload
   _TMR1_HasOverflowOccured
   _TMR1_Initialize
     _TMR1_StartTimer
   _TMR1_Reload
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      14       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      14      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 13 10:17:28 2015

 __end_of_TMR0_HasOverflowOccured 0682                       __CFG_CP$OFF 0000                      ___awdiv@sign 0076  
                 _timer0ReloadVal 007D                               l107 0774                               l962 0735  
                             l980 075B                               l972 073D                               l956 072A  
                             l974 0749                               l984 0764                               l988 076C  
                             u305 074A                               u315 0754                               u325 075C  
                             u405 0704                               u415 070B                      __CFG_CPD$OFF 0000  
                             u285 0740                               u385 06F5                               _Sec 007C  
                 _timer1ReloadVal 0024                      ___awmod@sign 0076                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000                      __CFG_LVP$OFF 0000  
                            l1000 06E5                              l1012 06F2                              l1004 06EC  
                            l1014 06FE                              l1022 0713                              l1026 071B  
                            l1018 070A                              l1044 078B                              l1054 07B4  
                            l1046 078C                              l1064 07C6                              l1074 07DA  
                            l1086 07EA                              l1088 07F6                              _LATA 010C  
                            _LATB 010D           _TMR1_HasOverflowOccured 0686                              _DSec 0020  
                            _TMR0 0015                              _MSec 0021                              _WPUA 020C  
                            _WPUB 020D                              _USec 0022                      __CFG_WRT$OFF 0000  
                   __CFG_FCMEN$ON 0000                              _main 0771                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E                              start 0001  
                            ttemp 007E                              wtemp 007E                     __CFG_MCLRE$ON 0000  
         __end_of_TMR0_Initialize 06A5                     __CFG_PLLEN$ON 0000    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 0695                             ?_main 0070                   __end_of___awdiv 0771  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0720                   _TMR1_StartTimer 067B  
                 ___awdiv@divisor 0070                             _T1CON 0018                             _LATA0 0860  
                           _LATA1 0861                   ___awdiv@counter 0075                             _TMR1H 0017  
                           _TMR1L 0016                             _PORTB 000D                             _TRISA 008C  
                           _TRISB 008D           __end_of_TMR1_Initialize 06B4                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                  __end_of_LedTable 06C4                   __initialization 07F8  
                    __end_of_main 07F8                            ??_main 0079         ??_TMR1_HasOverflowOccured 0070  
                ___awdiv@dividend 0072                            _ANSELA 018C                            _ANSELB 018D  
                          _T1GCON 0019                            _OSCCON 0099  __size_of_TMR0_HasOverflowOccured 0004  
                          _TMR0IF 005A                            _TMR1IF 0088                    __CFG_PWRTE$OFF 0000  
                    ?_TMR0_Reload 0070           __end_of_TMR1_StartTimer 067E                      ?_TMR1_Reload 0070  
                       ??___awdiv 0074                    __CFG_STVREN$ON 0000                         ??___awmod 0074  
                          _change 0023                  ?_TMR0_Initialize 0070                  ___awdiv@quotient 0077  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                  ?_TMR1_Initialize 0070  
               _SYSTEM_Initialize 068A           __end_of__initialization 07FE                ?_SYSTEM_Initialize 0070  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                    _OPTION_REGbits 0095  
       __end_of_SYSTEM_Initialize 068F                        __pbssBANK0 0020                        __pmaintext 0771  
                ?_TMR1_StartTimer 0070                           _APFCON0 011D                           _APFCON1 011E  
                         _OSCSTAT 009A                           _OSCTUNE 0098           _TMR0_HasOverflowOccured 067E  
                         ___awdiv 0720                           ___awmod 06DB              __size_of_TMR0_Reload 0004  
            __size_of_TMR1_Reload 0006                           __ptext1 06DB                           __ptext2 0720  
                         __ptext3 0695                           __ptext4 0686                           __ptext5 0682  
                         __ptext6 067E                           __ptext7 068A                           __ptext8 06A5  
                         __ptext9 067B                         _T1CONbits 0018             _OSCILLATOR_Initialize 068F  
                ___awmod@dividend 0072          ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0005  
            end_of_initialization 07FE                      __pstringtext 06B4                  __CFG_FOSC$INTOSC 0000  
       ??_TMR0_HasOverflowOccured 0070            ?_OSCILLATOR_Initialize 0070          ?_TMR1_HasOverflowOccured 0070  
             start_initialization 07F8          __size_of_TMR0_Initialize 000A   __size_of_PIN_MANAGER_Initialize 0017  
        __size_of_TMR1_Initialize 000F                       __pbssCOMMON 007C                         ___latbits 0000  
                       __pnvBANK0 0024            _PIN_MANAGER_Initialize 06C4                          ?___awdiv 0070  
                        ?___awmod 0070   __end_of_TMR1_HasOverflowOccured 068A          __size_of_TMR1_StartTimer 0003  
               ??_TMR0_Initialize 0070                          _PIR1bits 0011                     ??_TMR0_Reload 0070  
                   ??_TMR1_Reload 0070                 ??_TMR1_Initialize 0070                          _LedTable 06B4  
         ??_OSCILLATOR_Initialize 0070                  __size_of___awdiv 0051                  __size_of___awmod 0045  
             __end_of_TMR0_Reload 0686               __end_of_TMR1_Reload 069B                          __ptext10 069B  
                        __ptext11 06C4                          __ptext12 068F                        _T1GCONbits 0019  
               ??_TMR1_StartTimer 0070  __size_of_TMR1_HasOverflowOccured 0004                     __size_of_main 0087  
        ?_TMR0_HasOverflowOccured 0070                        _INTCONbits 000B           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000                       _TMR0_Reload 0682                       _TMR1_Reload 0695  
                      _OPTION_REG 0095                   _TMR0_Initialize 069B    __end_of_PIN_MANAGER_Initialize 06DB  
                 _TMR1_Initialize 06A5  
